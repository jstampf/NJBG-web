<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="btnAddCurrencyToPortal.Text" xml:space="preserve">
    <value>Add</value>
  </data>
	<data name="btnAddToExchangeRateList.Text" xml:space="preserve">
    <value>Add to list</value>
  </data>
	<data name="btnAsignLocaleTo.Text" xml:space="preserve">
    <value>Assign language to currency</value>
  </data>
	<data name="infolblBaseCurrencyFail1.Text" xml:space="preserve">
    <value>Insert failed. Value already exists or Code missing from currency DB table.</value>
  </data>
	<data name="infolblBaseCurrencyFail2.Text" xml:space="preserve">
    <value>Select base currency.</value>
  </data>
	<data name="infolblBaseCurrencySuccess.Text" xml:space="preserve">
    <value>Currency has been set successfully.</value>
  </data>
	<data name="lblAddCurrencyToList.HelpText" xml:space="preserve">
    <value>Select the currency you wish to add to your exchange rate list. The selected currency's value will be calculated according to the portal's Exchange rate.</value>
  </data>
	<data name="lblAddCurrencyToList.Text" xml:space="preserve">
    <value>Currency:</value>
  </data>
	<data name="lblCurrencyExchange.HelpText" xml:space="preserve">
    <value>Select currency you wish to ascribe to the selected language. Then select the format of currency display. Click on Assign language to currency.</value>
  </data>
	<data name="lblCurrencyExchange.Text" xml:space="preserve">
    <value>Currency and display format:</value>
  </data>
	<data name="lblCurrencyManager.Text" xml:space="preserve">
    <value>Currency Setup</value>
  </data>
	<data name="lblCustomFieldsAdd.Text" xml:space="preserve">
    <value>Add Custom Fields</value>
  </data>
	<data name="lblCustomFieldsEdit.Text" xml:space="preserve">
    <value>Edit Custom Fields</value>
  </data>
	<data name="lblCustomFieldsTemplates.Text" xml:space="preserve">
    <value>Manage Custom Fields Groups</value>
  </data>
	<data name="lblEnabledLocales.HelpText" xml:space="preserve">
    <value>Select one of the added languages on the portal you wish to ascribe a currency for.</value>
  </data>
	<data name="lblEnabledLocales.Text" xml:space="preserve">
    <value>Available languages:</value>
  </data>
	<data name="lblExchangeRate.HelpText" xml:space="preserve">
    <value>Enter selected currency's exchange rate against the base currency. For example, if USD is your base currency, and EUR is the currency you enter the exchange rate for, the current exchange rate will be approximately 1.36.</value>
  </data>
	<data name="lblExchangeRate.Text" xml:space="preserve">
    <value>Exchange rate:</value>
  </data>
	<data name="lblImportExport.Text" xml:space="preserve">
    <value>Import/Export</value>
  </data>
	<data name="lblMainDisplayFormat.HelpText" xml:space="preserve">
    <value>Select currency and display format.</value>
  </data>
	<data name="lblMainDisplayFormat.Text" xml:space="preserve">
    <value>Currency and display format:</value>
  </data>
	<data name="lblMoneyType.HelpText" xml:space="preserve">
    <value>Base currency is the main currency across the portal. All other currencies are calculated from the base currency, according to the portal's exchange rate.</value>
  </data>
	<data name="lblMoneyType.Text" xml:space="preserve">
    <value>Base currency:</value>
  </data>
	<data name="lblResetCurency.Text" xml:space="preserve">
    <value>Reset base currency and delete Exchange rate list</value>
  </data>
	<data name="lblUnit.HelpText" xml:space="preserve">
    <value>Enter the number of units of the currency you are using to calculate the exchange rate of the base currency for.</value>
  </data>
	<data name="lblUnit.Text" xml:space="preserve">
    <value>Units:</value>
  </data>
	<data name="titleAssignCurrencyExchangeListItems.Text" xml:space="preserve">
    <value>Assign enabled language to a currency from the exchange list</value>
  </data>
	<data name="titleDefaultCurrencyOnPortal.Text" xml:space="preserve">
    <value>Default currency on portal</value>
  </data>
	<data name="titlePortalExchangeRateList.Text" xml:space="preserve">
    <value>Portal Exchange rate list</value>
  </data>
</root>