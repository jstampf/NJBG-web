<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="AlreadyRegisteredToEvent.Text" xml:space="preserve">
    <value>You are registered for this event.</value>
  </data>
	<data name="AlreadyRegToEvent.Text" xml:space="preserve">
    <value>Your email address is already registered to this event.</value>
  </data>
	<data name="AlreadyRegToEventNotVerify.Text" xml:space="preserve">
    <value>Your email address is already registered to this event but email has not been verified.</value>
  </data>
	<data name="EventAllSeatsOccupied.Text" xml:space="preserve">
    <value>Event registration is not possible because all seats are occupied.</value>
  </data>
	<data name="EventRegAvailableFrom.Text" xml:space="preserve">
    <value>Event registration will be available from {0}.</value>
  </data>
	<data name="EventRegConfirmMsg.Text" xml:space="preserve">
    <value>Thank you for registering. Confirmation message is sent to your email address.</value>
  </data>
	<data name="EventRegNotPossible.Text" xml:space="preserve">
    <value>Event registration is not possible anymore.</value>
  </data>
	<data name="EventUnRegConfirmMsg.Text" xml:space="preserve">
    <value>Thank you for registering. Verification message is sent to your email address.</value>
  </data>
	<data name="NoUserRightsEventReg.Text" xml:space="preserve">
    <value>Your user rights do not allow for the event registration.</value>
  </data>
	<data name="OnlyRegisteredCanRegToEvent.Text" xml:space="preserve">
    <value>Only registered users can register for an event. Please &lt;strong&gt;&lt;a href="[EasyDNNnews:LoginUrl]"&gt;login&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href="[EasyDNNnews:RegistrationUrl]"&gt;register&lt;/a&gt;&lt;/strong&gt;.</value>
  </data>
	<data name="RegistrationNotPossible.Text" xml:space="preserve">
    <value>Event registration is not possible anymore.</value>
  </data>
	<data name="UnlimitedSeats.Text" xml:space="preserve">
    <value>Unlimited</value>
  </data>
	<data name="Attendees.Text" xml:space="preserve">
    <value>Attendees</value>
  </data>
	<data name="Seats.Text" xml:space="preserve">
    <value>Seats</value>
  </data>
	<data name="Register.Text" xml:space="preserve">
    <value>Register</value>
  </data>
	<data name="RegistrationDoesNotExist.Text" xml:space="preserve">
    <value>Verification failed! User does not exist. &lt;a href="{0}"&gt;Return to site&lt;/a&gt;.</value>
  </data>
	<data name="UserAlreadyVerified.Text" xml:space="preserve">
    <value>User is already verified. &lt;a href="{0}"&gt;Return to site&lt;/a&gt;.</value>
  </data>
	<data name="UserVerified.Text" xml:space="preserve">
    <value>User is successfully verified. Registration notice will be sent to your email.  &lt;a href="{0}"&gt;Return to site&lt;/a&gt;.</value>
  </data>
	<data name="AlreadyRegisteredNotApproved.Text" xml:space="preserve">
    <value>Your registration is awaiting approval.</value>
  </data>
	<data name="AlreadyRegisteredAndRejected.Text" xml:space="preserve">
    <value>Your registration is rejected.</value>
  </data>
	<data name="cvNumberOfTickets.ErrorMessage" xml:space="preserve">
    <value>Must be a number!</value>
  </data>
	<data name="lbRegAdditionalInformation.Text" xml:space="preserve">
    <value>Additional Information:</value>
  </data>
	<data name="lbRegEmail.Text" xml:space="preserve">
    <value>E-mail:</value>
  </data>
	<data name="lbRegFirstName.Text" xml:space="preserve">
    <value>First Name:</value>
  </data>
	<data name="lbRegLastName.Text" xml:space="preserve">
    <value>Last Name:</value>
  </data>
	<data name="lbRegNumberOfSeats.Text" xml:space="preserve">
    <value>Number of Seats:</value>
  </data>
	<data name="RegistrationForm.Text" xml:space="preserve">
    <value>Registration form</value>
  </data>
	<data name="revEmail.ErrorMessage" xml:space="preserve">
    <value>Please enter a valid email address.</value>
  </data>
	<data name="rfvEmail.ErrorMessage" xml:space="preserve">
    <value>Required!</value>
  </data>
	<data name="rfvFirstName.ErrorMessage" xml:space="preserve">
    <value>Required!</value>
  </data>
	<data name="rfvLastName.ErrorMessage" xml:space="preserve">
    <value>Required!</value>
  </data>
	<data name="rfvNumberOfTickets.ErrorMessage" xml:space="preserve">
    <value>Required!</value>
  </data>
	<data name="btnRegisterEvent.Text" xml:space="preserve">
    <value>Register</value>
  </data>
	<data name="lblCity.Text" xml:space="preserve">
    <value>City:</value>
  </data>
	<data name="lblCountry.Text" xml:space="preserve">
    <value>Country:</value>
  </data>
	<data name="lblPostalCode.Text" xml:space="preserve">
    <value>Postal Code:</value>
  </data>
	<data name="lblRegion.Text" xml:space="preserve">
    <value>Region:</value>
  </data>
	<data name="lblStreet.Text" xml:space="preserve">
    <value>Street:</value>
  </data>
	<data name="lblTelephone.Text" xml:space="preserve">
    <value>Telephone:</value>
  </data>
	<data name="lblUnit.Text" xml:space="preserve">
    <value>Unit:</value>
  </data>
	<data name="EventPaymentInfo.Text" xml:space="preserve">
    <value>&lt;p&gt;Name: &lt;strong&gt;[EasyDNNnews:EventUser:DisplayName]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Number of reserved seats: &lt;strong&gt;[EasyDNNnews:EventRegistration:ReservedSeats]&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Payment status: &lt;strong class="edn_infoColor1" &gt;[EasyDNNnews:EventPayment:Status]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sub Total: &lt;strong&gt;[EasyDNNnews:EventPayment:SubTotal]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Discount: &lt;strong&gt;[EasyDNNnews:EventPayment:Discount]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sales Tax: &lt;strong&gt;[EasyDNNnews:EventPayment:TaxValue]&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Estimated Total:&lt;/strong&gt; &lt;strong class="edn_infoColor2" &gt;[EasyDNNnews:EventPayment:EstimatedTotal]&lt;/strong&gt;&lt;/p&gt;
[EasyDNNnews:IfExists:EventPayment:PayPal]
&lt;p&gt;[EasyDNNnews:EventPayment:Info]&lt;/p&gt;
[EasyDNNnews:IfExists:EventPayment:PayPalLink]
&lt;p&gt;&lt;a class="edn_eventPayPalPayment" href="[EasyDNNnews:EventPayment:PayPalLink]" target="_blank"&gt;Make payment&lt;/a&gt;&lt;/p&gt;
[EasyDNNnews:EndIf:EventPayment:PayPalLink]
[EasyDNNnews:EndIf:EventPayment:PayPal]
[EasyDNNnews:IfExists:EventPayment:Offline]
&lt;p&gt;[EasyDNNnews:EventPayment:Info]&lt;/p&gt;
[EasyDNNnews:EndIf:EventPayment:Offline]</value>
  </data>
	<data name="FreeEventPrice.Text" xml:space="preserve">
    <value>Free</value>
  </data>
	<data name="lbUnchangeableInfo.Text" xml:space="preserve">
    <value>Use update profile link to change data.</value>
  </data>
	<data name="UpdateProfileLink.Text" xml:space="preserve">
    <value>&lt;h5 class="eds_updateProfile"&gt;&lt;a href="{0}"&gt;Update your profile&lt;/a&gt;&lt;/h5&gt;</value>
  </data>
	<data name="phRegEmail.Text" xml:space="preserve">
    <value>E-mail</value>
  </data>
	<data name="phRegFirstName.Text" xml:space="preserve">
    <value>Name</value>
  </data>
	<data name="phRegLastName.Text" xml:space="preserve">
    <value>Last Name</value>
  </data>
	<data name="SalesTax.Text" xml:space="preserve">
    <value>Sales Tax:</value>
  </data>
	<data name="EstimatedTotal.Text" xml:space="preserve">
    <value>Estimated Total:</value>
  </data>
	<data name="SubTotal.Text" xml:space="preserve">
    <value>Sub Total:</value>
  </data>
	<data name="Discount.Text" xml:space="preserve">
    <value>Discount: </value>
  </data>
	<data name="NotValidPaymentSettings.Text" xml:space="preserve">
    <value>Not valid payment settings. Edit event.</value>
  </data>
	<data name="SearchedContentIsNoLongerAvailable.Text" xml:space="preserve">
    <value>Searched content is no longer available, try reloading the page.</value>
  </data>
	<data name="LinkIsNotValid.Text" xml:space="preserve">
    <value>Link is not valid</value>
  </data>
	<data name="RegistrationIsNotPossibleAnymore.Text" xml:space="preserve">
    <value>Registration is not possible anymore</value>
  </data>
	<data name="NoMoreSeatsAvailable.Text" xml:space="preserve">
    <value>No more seats available.</value>
  </data>
	<data name="YouDoNotHavePermissionToRegisterToThisEvent.Text" xml:space="preserve">
    <value>You do not have permission to register to this event.</value>
  </data>
	<data name="FirstNameIsRequired.Text" xml:space="preserve">
    <value>First name is required!</value>
  </data>
	<data name="LastNameIsRequired.Text" xml:space="preserve">
    <value>Last name is required!</value>
  </data>
	<data name="EmailIsRequired.Text" xml:space="preserve">
    <value>E-mail is required!</value>
  </data>
	<data name="EnterNumberOfSeats.Text" xml:space="preserve">
    <value>Enter number of seats!</value>
  </data>
	<data name="NumberOfSeatsMustBeBetween.Text" xml:space="preserve">
    <value>Number of seats must be between {0} and {1}.</value>
  </data>
	<data name="NumberOfSeatsEnteredIsNotPossibleToReserve.Text" xml:space="preserve">
    <value>Number of seats entered is not possible to reserve. {0} available seats left.</value>
  </data>
	<data name="TaxIsNotDefined.Text" xml:space="preserve">
    <value>Tax is not defined. Contact administrator.</value>
  </data>
	<data name="PaymentValidationFailed.Text" xml:space="preserve">
    <value>Payment validation failed. Nothing selected. Add at least one attendee.</value>
  </data>
	<data name="PaymentValidationFailedMissingCostPerUser.Text" xml:space="preserve">
    <value>Payment validation failed. Event payment settings - missing costs per user.</value>
  </data>
	<data name="PaymentValidationFailedCostMismatch.Text" xml:space="preserve">
    <value>Payment validation failed. Cost mismatch.</value>
  </data>
	<data name="PaymentValidationFailedSubTotalMismatch.Text" xml:space="preserve">
    <value>Payment validation failed. SubTotal mismatch.</value>
  </data>
	<data name="PaymentValidationFailedDiscountMismatch.Text" xml:space="preserve">
    <value>Payment validation failed. Discount mismatch.</value>
  </data>
	<data name="PaymentValidationFailedTaxValueMismatch.Text" xml:space="preserve">
    <value>Payment validation failed. TaxValue mismatch.</value>
  </data>
	<data name="PaymentValidationFailedEstimatedTotalMismatch.Text" xml:space="preserve">
    <value>Payment validation failed. Estimated total mismatch.</value>
  </data>
	<data name="PaymentValidationFailedParsingError.Text" xml:space="preserve">
    <value>Payment validation failed. Parsing error.</value>
  </data>
	<data name="WrongPaymentTtypeContactAdministrator.Text" xml:space="preserve">
    <value>Wrong payment type. Contact administrator.</value>
  </data>
	<data name="ThereIsAnErrorInRegistrationItIsNotPossibleToAddAUser.Text" xml:space="preserve">
    <value>There is an error in registration. It is not possible to add a user.</value>
  </data>
	<data name="ThereIsAnErrorInRegistration.Text" xml:space="preserve">
    <value>There is an error in registration.</value>
  </data>
	<data name="EmailAlreadyTaken.Text" xml:space="preserve">
    <value>User with that email is already registered on site, please log in.</value>
  </data>
	<data name="NumberOfAttendees.ErrorMessage" xml:space="preserve">
    <value>Number of registered attendees is not valid. Minimum number: {0}, maximum {1}.</value>
  </data>
	<data name="lblEventRegistrationCaptcha.Text" xml:space="preserve">
		<value>Please solve CAPTCHA</value>
	</data>
</root>