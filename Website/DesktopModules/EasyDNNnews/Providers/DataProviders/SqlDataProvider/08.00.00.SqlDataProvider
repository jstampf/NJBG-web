IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewEvents]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewArticles]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewArticles]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewAllContent]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewAllContent]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetRelatedArticlesOverlap]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetRelatedArticlesOverlap]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsComments]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsComments]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents_NoPermissions_Count]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents_NoPermissions_Count]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents_NoPermissions]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents_NoPermissions]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetContentNoPermissions]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetContentNoPermissions]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlesComments]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlesComments]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles_NoPermissions_Count]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles_NoPermissions_Count]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles_NoPermissions]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles_NoPermissions]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlePreviousNext]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlePreviousNext]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentComments]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentComments]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent_NoPermissions_Count]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent_NoPermissions_Count]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent_NoPermissions]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent_NoPermissions]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@DateRange BIT = 0,
	@DateRangeType TINYINT = 0,
	@StartDate DATETIME = NULL,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL,
	@eToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange SMALLINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	@FilterByCustomFields BIT = 0,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
--WITH RECOMPILE
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRange BIT
	,@DateRangeType TINYINT
	,@StartDate DATETIME
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange SMALLINT
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT';

DECLARE @sqlCommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlCommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT NOT NULL PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate) '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (Id INT PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX), CategoryURL NVARCHAR(1500)); '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #UserEditCategories (CategoryID INT PRIMARY KEY);
	INSERT INTO #UserEditCategories
	SELECT CategoryID
	FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)

	DECLARE @HasEditCategories BIT;

	IF EXISTS (SELECT 1 FROM #UserEditCategories)
		SET @HasEditCategories = 1;
	ELSE
		SET @HasEditCategories = 0; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT NOT NULL PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS Id,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryURL ELSE cl.CategoryURL END AS CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategories) '
	
SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

SET @TopInnerFilter = N' WHERE ' + @sqlSharingPortal;

	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmd.GoogleMapID = gmc.GoogleMapID AND gmd.PointData <> N''''
			WHERE gmc.ArticleID = na.ArticleID
		) '
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			WHERE gmc.ArticleID = na.ArticleID
		) '

	IF @HideUnlocalizedItems = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl
			WHERE ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
		) '

	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = nss.ArticleID
			WHERE nss.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		) '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE nss.ArticleID = na.ArticleID
		) '

	IF @FilterByTags = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
			INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE ti.ArticleID = na.ArticleID
		) '

	IF @FilterByArticles = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM @FilterArticlesTable AS fba
			WHERE fba.ArticleID = na.ArticleID
		) '

	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL 
			SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE
		SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '

	IF @LocaleCode IS NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '

	IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 '
		SET @TopInnerFilter = @TopInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
	END

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END
IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN
	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(630)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10) NOT NULL,
		CFWhereRoule NVARCHAR(MAX) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID)
				FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme
				WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);

		SET @CFFilterQuery = N'SELECT CFFilteredArticles.ArticleID FROM (';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			DECLARE @FilterValueMulti NVARCHAR(MAX);
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValueMulti = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N'AND'
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE ' + @FilterValueMulti + '
) AS OnlyWithGoogleMaps
WHERE Recency >= ' + STR(@ElementsCount) + ' '
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueMulti + ' '
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			DECLARE @FilterValueSimple NVARCHAR(630);
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @FilterValueSimple = CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow;

				SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueSimple + ' '

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END

		END

		SET @CFFilterQuery = @CFFilterQuery + N') AS CFFilteredArticles'
	END

	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

SET @MainContentFilter = N'
;WITH AllContent AS( '

	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT ArticleID, CommentedDate,RecurringID,StartDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,inner_all.RecurringID
			,inner_all.StartDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID], inner_all.RecurringID ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @MainContentFilter = @MainContentFilter + N'inner_all.Featured DESC, '
			
			SET @MainContentFilter = @MainContentFilter + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
			
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc
		INNER JOIN (';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT n.ArticleID,n.Featured,
		CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
		CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND '
	IF @DateRangeType = 2
		SET @MainContentFilter = @MainContentFilter + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 1
		BEGIN
			IF @ListArchive = 0
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
			ELSE
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
		END
	ELSE IF @DateRangeType = 0
		SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE
		SET @MainContentFilter = @MainContentFilter + N' 1 = 0'
	
	SET @MainContentFilter = @MainContentFilter + N'
	WHERE n.ArticleID IN( '
	 
	 -- tu bi trebal staviti okolo da se filtrira po and !!!
	 
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.ArticleID IN ( ';
	END
	 
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N' SELECT ArticleID FROM ('
	 
	SET @MainContentFilter = @MainContentFilter + N'
		SELECT [ArticleID] FROM (
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na ' -- only article normal permissions	
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
					WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
				)
				AND na.EventArticle = 0 '

				IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

				IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
			
			SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na ' -- normal and recurring event normal permissions
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
					WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
				)
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
					WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

				SET @MainContentFilter = @MainContentFilter + N'
					UNION ALL
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
					WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						AND EXISTS (
							SELECT ArticleID
							FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
							WHERE nerd.ArticleID = ne.ArticleID '
							IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N'
							AND ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
							ELSE IF @DateRangeType = 1
								BEGIN
									IF @ListArchive = 0
										SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
									ELSE
										SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
								END
							ELSE IF @DateRangeType = 0
								SET @MainContentFilter = @MainContentFilter + N' AND (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						
						SET @MainContentFilter = @MainContentFilter + N'
						)
				) '

				IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

		IF @QueryPermissionsPerArticles = 1
		BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na ' -- only article user/role permissions
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
					WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
				)
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
					WHERE aup.ArticleID = na.ArticleID '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					IF @UserID <> -1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
						WHERE arp.ArticleID = na.ArticleID '
						IF @CanEditAllContent = 0
						BEGIN
							SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
						END
					END
				SET @MainContentFilter = @MainContentFilter + N'
				)
				AND na.EventArticle = 0 '
				
				IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
			
			SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na ' -- normal and recurring events user/role permissions
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
					WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
				)
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
					WHERE aup.ArticleID = na.ArticleID '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					IF @UserID <> -1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
						WHERE arp.ArticleID = na.ArticleID '
						IF @CanEditAllContent = 0
						BEGIN
							SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
						END
					END
				
				SET @MainContentFilter = @MainContentFilter + N'
				)
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
					WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

				SET @MainContentFilter = @MainContentFilter + N'
					UNION ALL
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
					WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						AND EXISTS (
							SELECT ArticleID
							FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
							WHERE nerd.ArticleID = ne.ArticleID '
							IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N'
							AND ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
							ELSE IF @DateRangeType = 1
								BEGIN
									IF @ListArchive = 0
										SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
									ELSE
										SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
								END
							ELSE IF @DateRangeType = 0
								SET @MainContentFilter = @MainContentFilter + N' AND (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						
						SET @MainContentFilter = @MainContentFilter + N'
						)
				) '
		END

		SET @MainContentFilter = @MainContentFilter + N'
		) AS AllPermissions '
	
	-- treba desti ako se koristi AND operator
	
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N') AllBeforeFilters INTERSECT ' + @CFFilterQuery
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	END
	
	SET @MainContentFilter = @MainContentFilter + N' 
	) '
	
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON nc.ArticleID = inner_all.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1'
	END
	
SET @MainContentFilter = @MainContentFilter + N' 
) '

SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent '

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
	,e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], '
ELSE
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], ';

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N'0 AS CanEdit, '
ELSE IF @CanEditAllContent = 1
	SET @sqlcommand = @sqlcommand + N'1 AS CanEdit, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE WHEN @HasEditCategories = 0
	THEN 
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	ELSE
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE '
			IF @EditOnlyAsOwner = 1
				SET @sqlcommand = @sqlcommand + N' n.UserID = @UserID AND '

			SET @sqlcommand = @sqlcommand + N' c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	END
	AS CanEdit, '
END

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '
ELSE
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", lc.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.Id
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N' 0 AS Published, 0 AS Approve, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE n.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	END AS Published, '
	IF @UserCanApprove = 0
		SET @sqlcommand = @sqlcommand + N'0 AS Approve, '
	ELSE
		SET @sqlcommand = @sqlcommand + N'
			CASE n.Approved
				WHEN 1 THEN 0
				WHEN 0 THEN n.Active
			END AS Approve, '
END

SET @sqlcommand = @sqlcommand + N' @AllContentCount AS ContentCount '

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N',e_fsd.' + @OrderByColumnName + ',(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END)
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				IF @OrderByDirection = 'ASC' SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				
				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				
				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
		END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
				,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				
				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
END

SET @sqlcommand = @sqlcommand + N' ORDER BY '
	IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'Featured DESC, '
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
		SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#UserEditCategories'') IS NOT NULL
		DROP TABLE #UserEditCategories; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
		DROP TABLE #LocalizedCategories; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRange = @DateRange
	,@DateRangeType = @DateRangeType
	,@StartDate = @StartDate
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent_NoPermissions]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent_NoPermissions] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent_NoPermissions]
	@PortalId INT,
	@ModuleId INT,
	@UserId INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldId INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@FilterOnlyFeatured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByCategoryId INT = NULL,
	@FilterByDnnUserId INT = NULL,
	@FilterByDnnGroupId INT = NULL,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@CategoryFilterType TINYINT = 0,
	@HideUnlocalizedItems BIT = 0,
	@FilterByEventsLimitByDays INT = NULL,
	@RestrictionByDateRange SMALLINT = NULL,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalId INT
	,@ModuleId INT
	,@UserId INT
	,@OrderByCustomFieldId INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@FilterByCategoryId INT
	,@FilterByDnnUserId INT
	,@FilterByDnnGroupId INT
	,@LocaleCode NVARCHAR(20)
	,@HideUnlocalizedItems BIT
	,@FilterByEventsLimitByDays INT
	,@RestrictionByDateRange SMALLINT
	,@IsPortalSharing BIT '

DECLARE @sqlcommand NVARCHAR(MAX);
SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); '

DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

DECLARE @sqlFilterCategories NVARCHAR(4000);

IF @FilterByCategoryId IS NOT NULL
BEGIN
	SET @sqlFilterCategories = N'
	SELECT ArticleID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	WHERE c.ArticleID = na.ArticleID AND c.CategoryID = @FilterByCategoryId ';
END
ELSE IF @CategoryFilterType = 1
BEGIN
	SET @sqlFilterCategories = N'
	SELECT ArticleID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	WHERE c.ArticleID = na.ArticleID
		AND EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci
			WHERE mci.ModuleID = @ModuleId AND c.CategoryID = mci.CategoryID
		) ';
END
ELSE IF @CategoryFilterType = 2
BEGIN
SET @sqlFilterCategories = N'
	SELECT ArticleID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	WHERE c.ArticleID = na.ArticleID
		AND EXISTS (
			SELECT [CategoryID]
			FROM #FilterCategories AS f
			WHERE c.CategoryID = f.CategoryID
		) '
END

IF @FilterByEventsLimitByDays IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	DECLARE @EventsStartDateLimit DATETIME;
	SET @EventsStartDateLimit = (SELECT DATEADD(dd,DATEDIFF(dd,@FilterByEventsLimitByDays,GETUTCDATE()),0)); '

IF @RestrictionByDateRange IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	DECLARE @PublishDateLimit DATETIME;
	SET @PublishDateLimit = (SELECT DATEADD(dd,DATEDIFF(dd,@RestrictionByDateRange,GETUTCDATE()),0)); '

IF @CategoryFilterType = 2
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #FilterCategories (CategoryID INT NOT NULL PRIMARY KEY);
	;WITH hierarchy AS(
			SELECT cl.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE EXISTS (
				SELECT [CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
				WHERE ci.ModuleID = @ModuleId
					AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
			)
			AND cl.' + @sqlSharingPortalAll + '
			UNION ALL
			SELECT cl.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
		)
		INSERT INTO #FilterCategories
		SELECT DISTINCT CategoryID
		FROM hierarchy; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (ID INT NOT NULL PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX)); '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS ID, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.' + @sqlSharingPortalAll

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);

IF @OrderByCustomFieldId IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldId AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldId = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldId = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END
IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

SET @sqlcommand = @sqlcommand + N'
;WITH AllContent AS( '

	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		SELECT ArticleID, CommentedDate,RecurringID,StartDate FROM (
		SELECT inner_all.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,inner_all.RecurringID
			,inner_all.StartDate
			,ROW_NUMBER() OVER(PARTITION BY inner_all.[ArticleID], inner_all.RecurringID ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_all.Featured DESC, '
			
		SET @sqlcommand = @sqlcommand + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
		FROM (';
	END
	
	SET @sqlcommand = @sqlcommand + N'
	SELECT na.ArticleID,na.Featured,
		CASE WHEN na.EventArticle = 0 THEN na.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
		CASE WHEN na.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON na.ArticleID = ned.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
	IF @FilterByEventsLimitByDays IS NULL
		SET @sqlcommand = @sqlcommand + N' (
			nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (
				SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner
				WHERE nerdInner.ArticleID = ned.ArticleID
					AND nerdInner.StartDateTime > @CurrentDate
				ORDER BY nerdInner.StartDateTime
				)
			) '
	ELSE
		SET @sqlcommand = @sqlcommand + N'(
			(nerd.StartDateTime <= @CurrentDate
				AND (nerd.StartDateTime >= @EventsStartDateLimit
						OR (nerd.StartDateTime < @FilterByEventsLimitByDays AND nerd.EndDateTime >= @EventsStartDateLimit)
				)
			)
			 OR (nerd.RecurringID IN (
					SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd
					WHERE erd.ArticleID = ned.ArticleID
						AND erd.StartDateTime > @CurrentDate
					ORDER BY erd.StartDateTime
					)
				)
			) '
	
	SET @sqlcommand = @sqlcommand + N'
	WHERE ' + @sqlSharingPortal + N'
		AND na.Approved = 1
		AND na.Active = 1
		AND @CurrentDate BETWEEN na.[PublishDate] AND na.[ExpireDate] '

	IF @RestrictionByDateRange IS NOT NULL
		SET @sqlcommand = @sqlcommand + N' AND na.PublishDate >= @PublishDateLimit '

	IF @FilterByCategoryId IS NOT NULL OR @CategoryFilterType > 0
		SET @sqlcommand = @sqlcommand + N'
		AND EXISTS ( ' + @sqlFilterCategories + ' ) '

	SET @sqlcommand = @sqlcommand + N'
		AND EXISTS (
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			WHERE n.ArticleID = na.ArticleID
				AND n.EventArticle = 0
			UNION ALL
			SELECT ne.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
			WHERE ne.ArticleID = na.ArticleID
				AND ne.Recurring = 0 '
			IF @FilterByEventsLimitByDays IS NOT NULL
				SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @EventsStartDateLimit OR (ne.StartDate < @EventsStartDateLimit AND ne.EndDate >= @EventsStartDateLimit)) '

			SET @sqlcommand = @sqlcommand + N'
			UNION ALL
			SELECT ne.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
			WHERE ne.ArticleID = na.ArticleID
				AND ne.Recurring = 1
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
					WHERE nerd.ArticleID = ne.ArticleID
						AND '
					IF @FilterByEventsLimitByDays IS NULL
						SET @sqlcommand = @sqlcommand + N' (
							nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (
								SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID
								FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner
								WHERE nerdInner.ArticleID = ned.ArticleID
									AND nerdInner.StartDateTime > @CurrentDate
								ORDER BY nerdInner.StartDateTime
								)
							) '
					ELSE
						SET @sqlcommand = @sqlcommand + N'(
							(nerd.StartDateTime <= @CurrentDate
								AND (nerd.StartDateTime >= @EventsStartDateLimit OR (nerd.StartDateTime < @FilterByEventsLimitByDays AND nerd.EndDateTime >= @EventsStartDateLimit))
							)
							OR (nerd.RecurringID IN (
									SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID
									FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd
									WHERE erd.ArticleID = ned.ArticleID
										AND erd.StartDateTime > @CurrentDate
									ORDER BY erd.StartDateTime
									)
								)
						) '

		SET @sqlcommand = @sqlcommand + N'
				)
		) '

	IF @HideUnlocalizedItems = 1
		SET @sqlcommand = @sqlcommand + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl
			WHERE ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
		) '

	IF @FilterByDnnGroupId IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = nss.ArticleID
			WHERE nss.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		) '
	ELSE IF @FilterByDnnUserId IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
			WHERE nss.ArticleID = na.ArticleID
		) '
		
	IF @LocaleCode IS NULL
		SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
	IF @FilterOnlyFeatured = 1
		SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '

	IF @FilterByDnnUserId IS NOT NULL
		SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
	ELSE IF @ShowAllAuthors = 0
		SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (
			SELECT [UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @ModuleId
			UNION 
			SELECT [UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @ModuleId
		) '
	
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N' ) AS inner_all
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc ON inner_all.ArticleID = nc.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1 '
	END

SET @sqlcommand = @sqlcommand + N'
) '

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
	,e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], '
ELSE
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], ';

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow '
ELSE
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.ID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow '

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, 'SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N',e_fsd.' + @OrderByColumnName + ',(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END)
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + ' FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
				,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC'
					SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, 'SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, 'SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + ' FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, 'SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
END

SET @sqlcommand = @sqlcommand + N' ORDER BY '
	IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'Featured DESC, '
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
		SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

IF @LocaleCode IS NOT NULL
SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
	DROP TABLE #LocalizedCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalId = @PortalId
	,@ModuleId = @ModuleId
	,@UserId = @UserId
	,@OrderByCustomFieldId = @OrderByCustomFieldId
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@FilterByCategoryId = @FilterByCategoryId
	,@FilterByDnnUserId = @FilterByDnnUserId
	,@FilterByDnnGroupId = @FilterByDnnGroupId
	,@LocaleCode = @LocaleCode
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@FilterByEventsLimitByDays = @FilterByEventsLimitByDays
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent_NoPermissions_Count]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent_NoPermissions_Count] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent_NoPermissions_Count]
	@PortalId INT,
	@ModuleId INT,
	@UserId INT,
	@FilterOnlyFeatured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByCategoryId INT = NULL,
	@FilterByDnnUserId INT = NULL,
	@FilterByDnnGroupId INT = NULL,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@CategoryFilterType TINYINT = 0,
	@HideUnlocalizedItems BIT = 0,
	@FilterByEventsLimitByDays INT = NULL,
	@RestrictionByDateRange SMALLINT = NULL,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalId INT
	,@ModuleId INT
	,@UserId INT
	,@FilterByCategoryId INT
	,@FilterByDnnUserId INT
	,@FilterByDnnGroupId INT
	,@LocaleCode NVARCHAR(20)
	,@HideUnlocalizedItems BIT
	,@FilterByEventsLimitByDays INT
	,@RestrictionByDateRange SMALLINT
	,@IsPortalSharing BIT '

DECLARE @sqlcommand NVARCHAR(MAX);
SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); '

DECLARE @sqlSharingPortal VARCHAR(300);
DECLARE @sqlSharingPortalAll VARCHAR(300);

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

DECLARE @sqlFilterCategories NVARCHAR(4000);

IF @FilterByCategoryId IS NOT NULL
BEGIN
	SET @sqlFilterCategories = N'
	SELECT ArticleID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	WHERE c.ArticleID = na.ArticleID AND c.CategoryID = @FilterByCategoryId ';
END
ELSE IF @CategoryFilterType = 1
BEGIN
	SET @sqlFilterCategories = N'
	SELECT ArticleID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	WHERE c.ArticleID = na.ArticleID
		AND EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci
			WHERE mci.ModuleID = @ModuleId AND c.CategoryID = mci.CategoryID
		) ';
END
ELSE IF @CategoryFilterType = 2
BEGIN
SET @sqlFilterCategories = N'
	SELECT ArticleID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	WHERE c.ArticleID = na.ArticleID
		AND EXISTS (
			SELECT [CategoryID]
			FROM #FilterCategories AS f
			WHERE c.CategoryID = f.CategoryID
		) '
END

IF @FilterByEventsLimitByDays IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	DECLARE @EventsStartDateLimit DATETIME;
	SET @EventsStartDateLimit = (SELECT DATEADD(dd,DATEDIFF(dd,@FilterByEventsLimitByDays,GETUTCDATE()),0)); '

IF @RestrictionByDateRange IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	DECLARE @PublishDateLimit DATETIME;
	SET @PublishDateLimit = (SELECT DATEADD(dd,DATEDIFF(dd,@RestrictionByDateRange,GETUTCDATE()),0)); '

IF @CategoryFilterType = 2
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #FilterCategories (CategoryID INT NOT NULL PRIMARY KEY);
	;WITH hierarchy AS(
			SELECT cl.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE EXISTS (
				SELECT [CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
				WHERE ci.ModuleID = @ModuleId
					AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
			)
			AND cl.' + @sqlSharingPortalAll + '
			UNION ALL
			SELECT cl.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
		)
		INSERT INTO #FilterCategories
		SELECT DISTINCT CategoryID
		FROM hierarchy; '

SET @sqlcommand = @sqlcommand + N'
SELECT COUNT(na.ArticleID)
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON na.ArticleID = ned.ArticleID
LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
IF @FilterByEventsLimitByDays IS NULL
	SET @sqlcommand = @sqlcommand + N' (
		nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (
			SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner
			WHERE nerdInner.ArticleID = ned.ArticleID
				AND nerdInner.StartDateTime > @CurrentDate
			ORDER BY nerdInner.StartDateTime
			)
		) '
ELSE
	SET @sqlcommand = @sqlcommand + N'(
		(nerd.StartDateTime <= @CurrentDate
			AND (nerd.StartDateTime >= @EventsStartDateLimit
					OR (nerd.StartDateTime < @FilterByEventsLimitByDays AND nerd.EndDateTime >= @EventsStartDateLimit)
			)
		)
			OR (nerd.RecurringID IN (
				SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd
				WHERE erd.ArticleID = ned.ArticleID
					AND erd.StartDateTime > @CurrentDate
				ORDER BY erd.StartDateTime
				)
			)
		) '

SET @sqlcommand = @sqlcommand + N'
WHERE ' + @sqlSharingPortal + N'
	AND na.Approved = 1
	AND na.Active = 1
	AND @CurrentDate BETWEEN na.[PublishDate] AND na.[ExpireDate] '

IF @RestrictionByDateRange IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' AND na.PublishDate >= @PublishDateLimit '

IF @FilterByCategoryId IS NOT NULL OR @CategoryFilterType > 0
	SET @sqlcommand = @sqlcommand + N'
	AND EXISTS ( ' + @sqlFilterCategories + ' ) '

SET @sqlcommand = @sqlcommand + N'
	AND EXISTS (
		SELECT na.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		WHERE n.ArticleID = na.ArticleID
			AND n.EventArticle = 0
		UNION ALL
		SELECT ne.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
		WHERE ne.ArticleID = na.ArticleID
			AND ne.Recurring = 0 '
		IF @FilterByEventsLimitByDays IS NOT NULL
			SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @EventsStartDateLimit OR (ne.StartDate < @EventsStartDateLimit AND ne.EndDate >= @EventsStartDateLimit)) '

		SET @sqlcommand = @sqlcommand + N'
		UNION ALL
		SELECT ne.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
		WHERE ne.ArticleID = na.ArticleID
			AND ne.Recurring = 1
			AND EXISTS (
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
				WHERE nerd.ArticleID = ne.ArticleID
					AND '
				IF @FilterByEventsLimitByDays IS NULL
					SET @sqlcommand = @sqlcommand + N' (
						nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (
							SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID
							FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner
							WHERE nerdInner.ArticleID = ned.ArticleID
								AND nerdInner.StartDateTime > @CurrentDate
							ORDER BY nerdInner.StartDateTime
							)
						) '
				ELSE
					SET @sqlcommand = @sqlcommand + N'(
						(nerd.StartDateTime <= @CurrentDate
							AND (nerd.StartDateTime >= @EventsStartDateLimit OR (nerd.StartDateTime < @FilterByEventsLimitByDays AND nerd.EndDateTime >= @EventsStartDateLimit))
						)
						OR (nerd.RecurringID IN (
								SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID
								FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd
								WHERE erd.ArticleID = ned.ArticleID
									AND erd.StartDateTime > @CurrentDate
								ORDER BY erd.StartDateTime
								)
							)
					) '

	SET @sqlcommand = @sqlcommand + N'
			)
	) '

IF @HideUnlocalizedItems = 1
	SET @sqlcommand = @sqlcommand + N'
	AND EXISTS (
		SELECT ArticleID
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl
		WHERE ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
	) '

IF @FilterByDnnGroupId IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	AND EXISTS (
		SELECT nss.ArticleID
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = nss.ArticleID
		WHERE nss.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
	) '
ELSE IF @FilterByDnnUserId IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	AND EXISTS (
		SELECT nss.ArticleID
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
		WHERE nss.ArticleID = na.ArticleID
	) '

IF @LocaleCode IS NULL
	SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
IF @FilterOnlyFeatured = 1
	SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '

IF @FilterByDnnUserId IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
ELSE IF @ShowAllAuthors = 0
	SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (
		SELECT [UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
		WHERE mai.ModuleID = @ModuleId
		UNION
		SELECT [UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
		WHERE mgi.ModuleID = @ModuleId
	) '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalId = @PortalId
	,@ModuleId = @ModuleId
	,@UserId = @UserId
	,@FilterByCategoryId = @FilterByCategoryId
	,@FilterByDnnUserId = @FilterByDnnUserId
	,@FilterByDnnGroupId = @FilterByDnnGroupId
	,@LocaleCode = @LocaleCode
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@FilterByEventsLimitByDays = @FilterByEventsLimitByDays
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentComments]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentComments] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentComments]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@ItemsFrom INT,
	@ItemsTo INT,
	@DateRange BIT = 0,
	@DateRangeType TINYINT = 0,
	@StartDate DATETIME = NULL,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL,
	@eToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange SMALLINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	@FilterByCustomFields BIT = 0,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1,
	@CommentsSelectType TINYINT = 0 -- 0 all comments, 1 one per article
--WITH RECOMPILE
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRange BIT
	,@DateRangeType TINYINT
	,@StartDate DATETIME
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange SMALLINT
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT
	,@CommentsSelectType TINYINT';

DECLARE @sqlCommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlCommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT NOT NULL PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate) '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT NOT NULL PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END


SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

SET @TopInnerFilter = N' WHERE ' + @sqlSharingPortal;

	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmd.GoogleMapID = gmc.GoogleMapID AND gmd.PointData <> N''''
			WHERE gmc.ArticleID = na.ArticleID
		) '
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			WHERE gmc.ArticleID = na.ArticleID
		) '

	IF @HideUnlocalizedItems = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl
			WHERE ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
		) '

	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = nss.ArticleID
			WHERE nss.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		) '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE nss.ArticleID = na.ArticleID
		) '

	IF @FilterByTags = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
			INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE ti.ArticleID = na.ArticleID
		) '

	IF @FilterByArticles = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM @FilterArticlesTable AS fba
			WHERE fba.ArticleID = na.ArticleID
		) '

	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL 
			SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE
		SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '

	IF @LocaleCode IS NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '

	IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 '
		SET @TopInnerFilter = @TopInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
	END

SET @MainContentFilter = N'
;WITH AllComments AS( '
	IF @CommentsSelectType = 1
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT irs.[CommentID],irs.[DateAdded]
		FROM (
			SELECT c.[CommentID],c.[DateAdded], ROW_NUMBER() OVER(PARTITION BY c.[ArticleID] ORDER BY c.DateAdded DESC) AS rn
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS c
			WHERE c.Approved = 1
				AND c.' + @sqlSharingPortalAll + '
				AND c.ArticleID IN ( '
	ELSE
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT c.[CommentID],c.[DateAdded]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS c
		WHERE c.Approved = 1
			AND c.' + @sqlSharingPortalAll + '
			AND c.ArticleID IN ( '
	 
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.ArticleID IN ( ';
	END
	 
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N' SELECT ArticleID FROM ('
	 
	SET @MainContentFilter = @MainContentFilter + N'
		SELECT [ArticleID] FROM (
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na ' -- only article normal permissions	
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
					WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
				)
				AND na.EventArticle = 0 '

				IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

				IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
			
			SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na ' -- normal and recurring event normal permissions
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
					WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
				)
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
					WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

				SET @MainContentFilter = @MainContentFilter + N'
					UNION ALL
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
					WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						AND EXISTS (
							SELECT ArticleID
							FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
							WHERE nerd.ArticleID = ne.ArticleID '
							IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N'
							AND ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
							ELSE IF @DateRangeType = 1
								BEGIN
									IF @ListArchive = 0
										SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
									ELSE
										SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
								END
							ELSE IF @DateRangeType = 0
								SET @MainContentFilter = @MainContentFilter + N' AND (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						
						SET @MainContentFilter = @MainContentFilter + N'
						)
				) '

				IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

		IF @QueryPermissionsPerArticles = 1
		BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na ' -- only article user/role permissions
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
					WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
				)
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
					WHERE aup.ArticleID = na.ArticleID '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					IF @UserID <> -1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
						WHERE arp.ArticleID = na.ArticleID '
						IF @CanEditAllContent = 0
						BEGIN
							SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
						END
					END
				SET @MainContentFilter = @MainContentFilter + N'
				)
				AND na.EventArticle = 0 '
				
				IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
			
			SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na ' -- normal and recurring events user/role permissions
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
					WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
				)
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
					WHERE aup.ArticleID = na.ArticleID '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					IF @UserID <> -1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
						WHERE arp.ArticleID = na.ArticleID '
						IF @CanEditAllContent = 0
						BEGIN
							SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
						END
					END
				
				SET @MainContentFilter = @MainContentFilter + N'
				)
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
					WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

				SET @MainContentFilter = @MainContentFilter + N'
					UNION ALL
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
					WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						AND EXISTS (
							SELECT ArticleID
							FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
							WHERE nerd.ArticleID = ne.ArticleID '
							IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N'
							AND ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
							ELSE IF @DateRangeType = 1
								BEGIN
									IF @ListArchive = 0
										SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
									ELSE
										SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
								END
							ELSE IF @DateRangeType = 0
								SET @MainContentFilter = @MainContentFilter + N' AND (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						
						SET @MainContentFilter = @MainContentFilter + N'
						)
				) '
		END

		SET @MainContentFilter = @MainContentFilter + N'
		) AS AllPermissions '

	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	END

	IF @CommentsSelectType = 1
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS irs
		WHERE irs.rn = 1 '
	ELSE
		SET @MainContentFilter = @MainContentFilter + N' ) ';

SET @MainContentFilter = @MainContentFilter + N'
) '

SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(CommentID) FROM AllComments '

SET @sqlcommand = @sqlcommand + @MainContentFilter

SET @sqlcommand = @sqlcommand + N'
SELECT c.[CommentID]
	,c.[UserID]
	,c.[AnonymName]
	,c.[Comment]
	,c.[DateAdded]
	,c.[GoodVotes]
	,c.[BadVotes]
	,c.[Approved]
	,c.[CommentersEmail]
	,c.[ReplayCommentID]
	,c.[ReplayLevel]
	,c.[CommenterIP]
	,c.[PortalID] AS CommentPortalId
	,n.[ArticleId]
	,n.[PortalId] AS ArticlePortalId '
IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
		,CASE WHEN nl.ArticleID IS NULL THEN n.[Title] ELSE nl.[Title] END AS Title
		,CASE WHEN nl.ArticleID IS NULL THEN n.[TitleLink] ELSE nl.[clTitleLink] END AS TitleLink
		,CASE WHEN nl.ArticleID IS NULL THEN n.[DetailType] ELSE nl.[DetailType] END AS DetailType
		,CASE WHEN nl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE nl.[DetailTypeData] END AS DetailTypeData '
ELSE
	SET @sqlcommand = @sqlcommand + N'
		,n.[Title]
		,n.[TitleLink]
		,n.[DetailType]
		,n.[DetailTypeData] '

SET @sqlcommand = @sqlcommand + N'
	,@AllContentCount AS ContentCount
FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS c
INNER JOIN  (
	SELECT [CommentID]
	FROM (
		SELECT ac.[CommentID], ROW_NUMBER() OVER(ORDER BY ac.[DateAdded] DESC) AS rn
		FROM AllComments AS ac
	)
	AS T1 WHERE rn BETWEEN @ItemsFrom AND @ItemsTo
) AS r ON r.CommentID = c.CommentID
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON c.ArticleID = n.ArticleID '
IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS nl ON nl.ArticleID = n.ArticleID AND nl.LocaleCode = @LocaleCode'

SET @sqlcommand = @sqlcommand + N'
ORDER BY c.[DateAdded] DESC '

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRange = @DateRange
	,@DateRangeType = @DateRangeType
	,@StartDate = @StartDate
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
	,@CommentsSelectType = @CommentsSelectType
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@CurrentArticleID INT,
	@RecurringID INT = NULL,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@DateRange TINYINT = 0,
	@DateRangeType TINYINT = 0,
	@StartDate DATETIME = NULL,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL,
	@eToDate DATETIME = NULL,

	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange SMALLINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@FilterByCustomFields BIT = 0,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@CurrentArticleID INT
	,@RecurringID INT
	,@DateRange TINYINT
	,@DateRangeType TINYINT
	,@StartDate DATETIME
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange SMALLINT
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT';

DECLARE @sqlCommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlCommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END
IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

SET @sqlcommand = @sqlcommand + N' DECLARE @CurrentArticlePosition INT ';

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END
IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN
	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(630)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10) NOT NULL,
		CFWhereRoule NVARCHAR(MAX) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID)
				FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme
				WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);

		SET @CFFilterQuery = N'SELECT CFFilteredArticles.ArticleID FROM (';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			DECLARE @FilterValueMulti NVARCHAR(MAX);
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValueMulti = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N'AND'
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE ' + @FilterValueMulti + '
) AS OnlyWithGoogleMaps
WHERE Recency >= ' + STR(@ElementsCount) + ' '
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueMulti + ' '
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			DECLARE @FilterValueSimple NVARCHAR(630);
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @FilterValueSimple = CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow;

				SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueSimple + ' '

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END

		END

		SET @CFFilterQuery = @CFFilterQuery + N') AS CFFilteredArticles'
	END

	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

DECLARE @MainFilter NVARCHAR(MAX);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @MainFilter = N'
	;WITH AllContent AS(
	SELECT ArticleID,RecurringID, ROW_NUMBER() OVER (ORDER BY '
	IF @FirstOrderBy = 'Featured DESC'
		SET @MainFilter = @MainFilter + N'Featured DESC, '
		
	IF @OrderByDirection = 'ASC'
		SET @MainFilter = @MainFilter + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	
	SET @MainFilter = @MainFilter + @CleanOrderColumnWithDirection + N', ArticleID) AS ArticlePosition '
END
ELSE
BEGIN
	SET @MainFilter = N'
	;WITH AllContent AS(
	SELECT ArticleID,RecurringID, ROW_NUMBER() OVER (ORDER BY '
	IF @FirstOrderBy = 'Featured DESC'
		SET @MainFilter = @MainFilter + N'Featured DESC, '
	SET @MainFilter = @MainFilter + @OrderByColumnName + N' ' + @OrderByDirection + N', ArticleID) AS ArticlePosition '
END

	SET @MainFilter = @MainFilter + N'
	FROM (
		SELECT n.ArticleID,
			CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
			CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
			n.Title,n.NumberOfViews,n.RatingValue,n.DateAdded,n.PublishDate,n.ExpireDate,n.LastModified,n.NumberOfComments,n.Featured '
		
		IF @OrderByCustomFieldID IS NOT NULL
			SET @MainFilter = @MainFilter + N',fv.' + @OrderByColumnName
		
		SET @MainFilter = @MainFilter + N'	
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND '
		IF @DateRangeType = 2
			SET @MainFilter = @MainFilter + N'
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
		ELSE IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
				ELSE
					SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
			END
		ELSE IF @DateRangeType = 0
			SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
		ELSE
			SET @MainFilter = @MainFilter + N' 1 = 0'
		
		IF @OrderByCustomFieldID IS NOT NULL
		BEGIN
			SET @MainFilter = @MainFilter + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID '
		END
		
		SET @MainFilter = @MainFilter + N'
			WHERE n.ArticleID IN( '
		
		IF @FilterByCustomFields = 1
			SET @MainFilter = @MainFilter + N' SELECT ArticleID FROM ('
		
		SET @MainFilter = @MainFilter + N'
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) '

				IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @FilterByDNNGroupID <> 0 
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
				ELSE IF @FilterByDNNUserID <> 0
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

				IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
				IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
				
				SET @MainFilter = @MainFilter + N'
				WHERE na.EventArticle = 0
					AND ' + @sqlSharingPortal
					
					IF @QueryPermissionsPerArticles = 1 SET @MainFilter = @MainFilter + N' AND na.HasPermissions = 0 '

					IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL
							SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
						ELSE
							SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL
						SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					ELSE
						SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
					IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
					IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
					ELSE IF @sqlAuthors IS NOT NULL
						SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
	
					IF @QueryModulePermissions = 0
						SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 '
					ELSE IF @CanEditAllContent = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END
					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
				SET @MainFilter = @MainFilter + N'
				UNION ALL
				SELECT DISTINCT na.[ArticleID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
				
				IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @FilterByDNNGroupID <> 0 
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
				ELSE IF @FilterByDNNUserID <> 0
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

				IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
				IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
				
				SET @MainFilter = @MainFilter + N'
				WHERE ne.Recurring = 0
					AND na.EventArticle = 1

					AND ' + @sqlSharingPortal

					IF @QueryPermissionsPerArticles = 1 SET @MainFilter = @MainFilter + N' AND na.HasPermissions = 0 '

					IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL
							SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
						ELSE
							SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL
						SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					ELSE
						SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
					IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
					IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
					ELSE IF @sqlAuthors IS NOT NULL
						SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

					IF @QueryModulePermissions = 0
						SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 '
					ELSE IF @CanEditAllContent = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @MainFilter = @MainFilter + N'
				UNION ALL
				SELECT DISTINCT na.[ArticleID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
				IF @DateRangeType = 2
					SET @MainFilter = @MainFilter + N'
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
						ELSE
							SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
					END
				ELSE IF @DateRangeType = 0
					SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
				ELSE SET @MainFilter = @MainFilter + N' 1 = 0 '
						
				IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @FilterByDNNGroupID <> 0 
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
				ELSE IF @FilterByDNNUserID <> 0
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

				IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
				IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
					
				SET @MainFilter = @MainFilter + N'
				WHERE na.EventArticle = 1
					AND ne.Recurring = 1
					AND ' + @sqlSharingPortal

					IF @QueryPermissionsPerArticles = 1 SET @MainFilter = @MainFilter + N' AND na.HasPermissions = 0 '

					IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL
							SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
						ELSE
							SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL
						SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					ELSE
						SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
					IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
					IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
					ELSE IF @sqlAuthors IS NOT NULL
						SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
					
					IF @QueryModulePermissions = 0
						SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 '
					ELSE IF @CanEditAllContent = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END

				SET @MainFilter = @MainFilter + N') AS NoPermissionsPerArticle '

				IF @QueryPermissionsPerArticles = 1
				BEGIN
					SET @MainFilter = @MainFilter + N'
					UNION ALL
					SELECT [ArticleID] FROM (
						SELECT DISTINCT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

						IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByDNNGroupID <> 0 
							SET @MainFilter = @MainFilter + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @MainFilter = @MainFilter + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

						IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
						IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
				
						SET @MainFilter = @MainFilter + N'
						WHERE na.HasPermissions = 1
							AND na.EventArticle = 0
					
							AND ' + @sqlSharingPortal
					
							IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
							BEGIN
								IF @RestrictionByDateRange IS NOT NULL
									SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
								ELSE
									SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
							END
							ELSE IF @RestrictionByDateRange IS NOT NULL
								SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
							ELSE
								SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
							IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
							IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
							IF @FilterByDNNUserID <> 0
								SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
							ELSE IF @sqlAuthors IS NOT NULL
								SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

							IF @QueryModulePermissions = 0
							BEGIN
								SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND aup.Show = 1 '
								IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
								ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
							END
							ELSE IF @CanEditAllContent = 0
							BEGIN
								SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 '
								IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
								IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
								ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
							END
							IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
						SET @MainFilter = @MainFilter + N'
						UNION ALL
						SELECT DISTINCT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

						IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByDNNGroupID <> 0 
							SET @MainFilter = @MainFilter + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @MainFilter = @MainFilter + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

						IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
						IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
								
						SET @MainFilter = @MainFilter + N'
						WHERE na.HasPermissions = 1
							AND na.EventArticle = 1
							AND ne.Recurring = 0
					
							AND ' + @sqlSharingPortal
					
							IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
							BEGIN
								IF @RestrictionByDateRange IS NOT NULL
									SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
								ELSE
									SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
							END
							ELSE IF @RestrictionByDateRange IS NOT NULL
								SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
							ELSE
								SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
							IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
							IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
							IF @FilterByDNNUserID <> 0
								SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
							ELSE IF @sqlAuthors IS NOT NULL
								SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

							IF @QueryModulePermissions = 0
							BEGIN
								SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND aup.Show = 1 '
								IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
								ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
							END
							ELSE IF @CanEditAllContent = 0
							BEGIN
								SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 '
								IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
								IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
								ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
							END
							IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
								ELSE
									SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
							END
							ELSE IF @DateRangeType = 2
								SET @MainFilter = @MainFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
							SET @MainFilter = @MainFilter + N'
						UNION ALL
						SELECT DISTINCT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @MainFilter = @MainFilter + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
								ELSE
									SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
							END
						ELSE IF @DateRangeType = 0
							SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @MainFilter = @MainFilter + N' 1 = 0 '
					
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

						IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByDNNGroupID <> 0 
							SET @MainFilter = @MainFilter + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @MainFilter = @MainFilter + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

						IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
						IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
								
						SET @MainFilter = @MainFilter + N'
						WHERE na.HasPermissions = 1
							AND na.EventArticle = 1
							AND ne.Recurring = 1
					
							AND ' + @sqlSharingPortal
					
							IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
							BEGIN
								IF @RestrictionByDateRange IS NOT NULL
									SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
								ELSE
									SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
							END
							ELSE IF @RestrictionByDateRange IS NOT NULL
								SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
							ELSE
								SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
							IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
							IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
							IF @FilterByDNNUserID <> 0
								SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
							ELSE IF @sqlAuthors IS NOT NULL
								SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

							IF @QueryModulePermissions = 0
							BEGIN
								SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND aup.Show = 1 '
								IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
								ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
							END
							ELSE IF @CanEditAllContent = 0
							BEGIN
								SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 '
								IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
								IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
								ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
							END
							SET @MainFilter = @MainFilter + N'
				) AS WithNoRolePermissions
				UNION
				SELECT [ArticleID] FROM (
					SELECT DISTINCT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
				
					SET @MainFilter = @MainFilter + N'
					 
					WHERE na.HasPermissions = 1
						AND na.EventArticle = 0
					
						AND ' + @sqlSharingPortal
					
						IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
						BEGIN
							IF @RestrictionByDateRange IS NOT NULL
								SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
							ELSE
								SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
						END
						ELSE IF @RestrictionByDateRange IS NOT NULL
							SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
						ELSE 
							SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
						IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
						IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
						IF @FilterByDNNUserID <> 0
							SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
						ELSE IF @sqlAuthors IS NOT NULL
							SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
					
					IF @QueryModulePermissions = 0
						SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)'
					ELSE IF @CanEditAllContent = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END
					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
					SET @MainFilter = @MainFilter + N'
					UNION ALL
					SELECT DISTINCT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
				
					SET @MainFilter = @MainFilter + N'
					WHERE na.HasPermissions = 1
						AND na.EventArticle = 1
						AND ne.Recurring = 0
					
						AND ' + @sqlSharingPortal
					
						IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
						BEGIN
							IF @RestrictionByDateRange IS NOT NULL
								SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
							ELSE
								SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
						END
						ELSE IF @RestrictionByDateRange IS NOT NULL
							SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
						ELSE
							SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
						IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
						IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
						IF @FilterByDNNUserID <> 0
							SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
						ELSE IF @sqlAuthors IS NOT NULL
							SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

						IF @QueryModulePermissions = 0
							SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)'
						ELSE IF @CanEditAllContent = 0
						BEGIN
							SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
							IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
						END
						IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
								ELSE
									SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
							END
							ELSE IF @DateRangeType = 2
								SET @MainFilter = @MainFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
							SET @MainFilter = @MainFilter + N'
					UNION All
					SELECT DISTINCT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainFilter = @MainFilter + N' 1 = 0 '
					
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
					
					SET @MainFilter = @MainFilter + N'
					WHERE na.HasPermissions = 1
						AND na.EventArticle = 1
						AND ne.Recurring = 1
					
						AND ' + @sqlSharingPortal
					
						IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
						BEGIN
							IF @RestrictionByDateRange IS NOT NULL
								SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
							ELSE
								SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
						END
						ELSE IF @RestrictionByDateRange IS NOT NULL
							SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
						ELSE
							SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
						IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
						IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
						IF @FilterByDNNUserID <> 0
							SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
						ELSE IF @sqlAuthors IS NOT NULL
							SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

						IF @QueryModulePermissions = 0
							SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)'
						ELSE IF @CanEditAllContent = 0
						BEGIN
							SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
							IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
						END
						SET @MainFilter = @MainFilter + N'
				) AS ByRolePermissions '
			END

			IF @FilterByCustomFields = 1
				SET @MainFilter = @MainFilter + N') AllBeforeFilters INTERSECT ' + @CFFilterQuery
	
		SET @MainFilter = @MainFilter + N'
		)
	) AS AllArticles
) ';

DECLARE @MainCondition NVARCHAR(500);
IF @RecurringID IS NULL
	SET @sqlcommand = @sqlcommand + @MainFilter +N' SELECT @CurrentArticlePosition = ArticlePosition FROM AllContent WHERE ArticleID = @CurrentArticleID; '
ELSE
	SET @sqlcommand = @sqlcommand + @MainFilter +N' SELECT @CurrentArticlePosition = ArticlePosition FROM AllContent WHERE ArticleID = @CurrentArticleID AND RecurringID = @RecurringID; '

SET @sqlcommand = @sqlcommand + ' ' + @MainFilter;

IF @LocaleCode IS NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	SELECT TOP (3) n.[ArticleID],n.[PortalID],apn.RecurringID,n.[Title],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN AllContent AS apn ON n.ArticleID = apn.ArticleID
	WHERE apn.ArticlePosition BETWEEN @CurrentArticlePosition - 1 AND @CurrentArticlePosition + 1
	ORDER BY apn.ArticlePosition '
END
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	SELECT TOP (3) n.[ArticleID],n.[PortalID],apn.RecurringID,
		CASE WHEN ncl.ArticleID IS NULL THEN n.[Title] ELSE ncl.[Title] END AS Title,
		CASE WHEN ncl.ArticleID IS NULL THEN n.[TitleLink] ELSE ncl.[clTitleLink] END AS TitleLink,
		n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN AllContent AS apn ON n.ArticleID = apn.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = apn.ArticleID AND ncl.LocaleCode = @LocaleCode
	WHERE apn.ArticlePosition BETWEEN @CurrentArticlePosition - 1 AND @CurrentArticlePosition + 1
	ORDER BY apn.ArticlePosition '
END

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@CurrentArticleID = @CurrentArticleID
	,@RecurringID = @RecurringID
	,@DateRange = @DateRange
	,@DateRangeType = @DateRangeType
	,@StartDate = @StartDate
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlePreviousNext]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlePreviousNext] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlePreviousNext]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@CurrentArticleID INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@DateRange TINYINT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,

	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@FilterByTagID INT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@FilterByCustomFields BIT = 0,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@CurrentArticleID INT
	,@DateRange TINYINT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@LocaleCode NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@FilterByTagID INT
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT';

DECLARE @sqlCommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlCommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END
IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

SET @sqlcommand = @sqlcommand + N' DECLARE @CurrentArticlePosition INT ';

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END
IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN
	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(630)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10) NOT NULL,
		CFWhereRoule NVARCHAR(MAX) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID)
				FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme
				WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);

		SET @CFFilterQuery = N'SELECT CFFilteredArticles.ArticleID FROM (';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			DECLARE @FilterValueMulti NVARCHAR(MAX);
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValueMulti = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N'AND'
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE ' + @FilterValueMulti + '
) AS OnlyWithGoogleMaps
WHERE Recency >= ' + STR(@ElementsCount) + ' '
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueMulti + ' '
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			DECLARE @FilterValueSimple NVARCHAR(630);
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @FilterValueSimple = CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow;

				SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueSimple + ' '

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END

		END

		SET @CFFilterQuery = @CFFilterQuery + N') AS CFFilteredArticles'
	END

	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

DECLARE @MainFilter NVARCHAR(MAX);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @MainFilter = N'
	SELECT n.ArticleID, ROW_NUMBER() OVER (ORDER BY '
	IF @FirstOrderBy = 'Featured DESC'
		SET @MainFilter = @MainFilter + N'n.Featured DESC, '
		
	IF @OrderByDirection = 'ASC'
		SET @MainFilter = @MainFilter + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	
	SET @MainFilter = @MainFilter + N'fv.'+ @CleanOrderColumnWithDirection + N', n.ArticleID) AS ArticlePosition
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
	WHERE n.ArticleID IN ('
END
ELSE
BEGIN
	SET @MainFilter = N'
	SELECT n.ArticleID, ROW_NUMBER() OVER (ORDER BY '
	IF @FirstOrderBy = 'Featured DESC'
		SET @MainFilter = @MainFilter + N'n.Featured DESC, '
	SET @MainFilter = @MainFilter + @OrderByColumnName + N' ' + @OrderByDirection + N', n.ArticleID) AS ArticlePosition
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	WHERE n.ArticleID IN ('
END

	IF @FilterByCustomFields = 1
		SET @MainFilter = @MainFilter + N' SELECT ArticleID FROM ('

	SET @MainFilter = @MainFilter + N'
		SELECT DISTINCT na.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) '
		
		-- ovo je iz main filtera
		IF @HideUnlocalizedItems = 1
			SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
		IF @FilterByDNNGroupID <> 0 
			SET @MainFilter = @MainFilter + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
		ELSE IF @FilterByDNNUserID <> 0
			SET @MainFilter = @MainFilter + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
		IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
		IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
		-- do tud

		SET @MainFilter = @MainFilter + N'
		WHERE ' + @sqlSharingPortal + N'
			AND na.EventArticle = 0 '

			IF @QueryPermissionsPerArticles = 1 SET @MainFilter = @MainFilter + N' AND na.HasPermissions = 0 '

			IF @QueryModulePermissions = 0
				SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 '
			ELSE IF @CanEditAllContent = 0
			BEGIN
				SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
				IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
			END
			
			-- ovo je iz main filtera
			IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
			BEGIN
				IF @DateRange = 2
					SET @MainFilter = @MainFilter + N' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate '
				ELSE
					SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
			END
			ELSE IF @DateRange > 0
				SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			ELSE
				SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			
			IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
			IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
			IF @FilterByDNNUserID <> 0
				SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
			ELSE IF @sqlAuthors IS NOT NULL
				SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

			-- do tud
		IF @QueryPermissionsPerArticles = 1
		BEGIN
			SET @MainFilter = @MainFilter + N'
			UNION ALL
			SELECT ArticleID FROM (
				SELECT na.[ArticleID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

				IF @HideUnlocalizedItems = 1
					SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @FilterByDNNGroupID <> 0 
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
				ELSE IF @FilterByDNNUserID <> 0
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

				IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
				IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
			
				SET @MainFilter = @MainFilter + N'
				WHERE na.HasPermissions = 1
					AND ' + @sqlSharingPortal + N'
					AND na.EventArticle = 0 '
					IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
					BEGIN
						IF @DateRange = 2
							SET @MainFilter = @MainFilter + N' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate '
						ELSE
							SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
					END
					ELSE IF @DateRange > 0
						SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					ELSE
						SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
				
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
					IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
					IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
					ELSE IF @sqlAuthors IS NOT NULL
						SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

					IF @QueryModulePermissions = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND aup.Show = 1 '
						IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
					END
					ELSE IF @CanEditAllContent = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
						IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
					END
					SET @MainFilter = @MainFilter + N'
				UNION
				SELECT na.[ArticleID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

				IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @FilterByDNNGroupID <> 0 
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
				ELSE IF @FilterByDNNUserID <> 0
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

				IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
				IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
			
				SET @MainFilter = @MainFilter + N'
				WHERE na.HasPermissions = 1
					AND ' + @sqlSharingPortal + N'
					AND na.EventArticle = 0 '
					IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
					BEGIN
						IF @DateRange = 2
							SET @MainFilter = @MainFilter + N' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate '
						ELSE
							SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
					END
					ELSE IF @DateRange > 0
						SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					ELSE
						SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
				
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
					IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
					IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
					ELSE IF @sqlAuthors IS NOT NULL
						SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

					IF @QueryModulePermissions = 0
						SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					ELSE IF @CanEditAllContent = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END
					SET @MainFilter = @MainFilter + N'
			) AS HasPermissionsTrue';
		END

	IF @FilterByCustomFields = 1
		SET @MainFilter = @MainFilter + N') AllBeforeFilters INTERSECT ' + @CFFilterQuery

	SET @MainFilter = @MainFilter + N' ) '

SET @sqlcommand = @sqlcommand + N'
SELECT @CurrentArticlePosition = allContent.ArticlePosition FROM ('+ @MainFilter +') AS allContent WHERE allContent.ArticleID = @CurrentArticleID;
';

IF @LocaleCode IS NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	SELECT TOP (3) n.[ArticleID],n.[PortalID],n.[Title],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN ('+ @MainFilter +') AS apn ON n.ArticleID = apn.ArticleID
	WHERE apn.ArticlePosition BETWEEN @CurrentArticlePosition - 1 AND @CurrentArticlePosition + 1
	ORDER BY apn.ArticlePosition '
END
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	SELECT TOP (3) n.[ArticleID],n.[PortalID],
		CASE WHEN ncl.ArticleID IS NULL THEN n.[Title] ELSE ncl.[Title] END AS Title,
		CASE WHEN ncl.ArticleID IS NULL THEN n.[TitleLink] ELSE ncl.[clTitleLink] END AS TitleLink,
		n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN ('+ @MainFilter +') AS apn ON n.ArticleID = apn.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = apn.ArticleID AND ncl.LocaleCode = @LocaleCode
	WHERE apn.ArticlePosition BETWEEN @CurrentArticlePosition - 1 AND @CurrentArticlePosition + 1
	ORDER BY apn.ArticlePosition '
END

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@CurrentArticleID = @CurrentArticleID
	,@DateRange = @DateRange
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@LocaleCode = @LocaleCode
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@FilterByTagID = @FilterByTagID
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@DateRange TINYINT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@FilterByTagID INT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	@FilterByCustomFields BIT = 0,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
--WITH RECOMPILE
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRange TINYINT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@LocaleCode NVARCHAR(20)
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@FilterByTagID INT
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT';

DECLARE @sqlCommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlCommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (Id INT PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX), CategoryURL NVARCHAR(1500)); '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #UserEditCategories (CategoryID INT PRIMARY KEY);
	INSERT INTO #UserEditCategories
	SELECT CategoryID
	FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)

	DECLARE @HasEditCategories BIT;

	IF EXISTS (SELECT 1 FROM #UserEditCategories)
		SET @HasEditCategories = 1;
	ELSE
		SET @HasEditCategories = 0; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS Id,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryURL ELSE cl.CategoryURL END AS CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategories) '
	
SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

SET @TopInnerFilter = N' WHERE ' + @sqlSharingPortal;

	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmd.GoogleMapID = gmc.GoogleMapID AND gmd.PointData <> N''''
			WHERE gmc.ArticleID = na.ArticleID
		) '
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			WHERE gmc.ArticleID = na.ArticleID
		) '

	IF @HideUnlocalizedItems = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl
			WHERE ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
		) '

	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = nss.ArticleID
			WHERE nss.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		) '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE nss.ArticleID = na.ArticleID
		) '

	IF @FilterByTags = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
			INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE ti.ArticleID = na.ArticleID
		) '
	
	IF @FilterByArticles = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM @FilterArticlesTable AS fba
			WHERE fba.ArticleID = na.ArticleID
		) '

	SET @TopInnerFilter = @TopInnerFilter + N' AND na.EventArticle = 0 '

	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @DateRange = 2
			SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate '
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @DateRange > 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE
		SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '

	IF @LocaleCode IS NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '

	IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
	
	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 '
		SET @TopInnerFilter = @TopInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
	END

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END
IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN
	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(630)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10) NOT NULL,
		CFWhereRoule NVARCHAR(MAX) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID)
				FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme
				WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);

		SET @CFFilterQuery = N'SELECT CFFilteredArticles.ArticleID FROM (';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			DECLARE @FilterValueMulti NVARCHAR(MAX);
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValueMulti = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N'AND'
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE ' + @FilterValueMulti + '
) AS OnlyWithGoogleMaps
WHERE Recency >= ' + STR(@ElementsCount) + ' '
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueMulti + ' '
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			DECLARE @FilterValueSimple NVARCHAR(630);
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @FilterValueSimple = CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow;

				SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueSimple + ' '

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END

		END

		SET @CFFilterQuery = @CFFilterQuery + N') AS CFFilteredArticles'
	END

	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

SET @MainContentFilter = N'
;WITH AllContent AS( '
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT ArticleID, CommentedDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID] ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @MainContentFilter = @MainContentFilter + N'n.Featured DESC, '
			
			SET @MainContentFilter = @MainContentFilter + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc ON nc.ArticleID = n.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		WHERE nc.ArticleID IN (';
	END
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.ArticleID IN ( ';
	END
	
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N' SELECT ArticleID FROM ('
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na '
		SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
		) '

	IF @QueryPermissionsPerArticles = 1
		SET @MainContentFilter = @MainContentFilter + N'
		AND na.HasPermissions = 0 ' 

	IF @QueryPermissionsPerArticles = 1
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		UNION ALL
		SELECT ArticleID FROM (
			SELECT ArticleID FROM (
			SELECT aup.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup '
				IF @CanEditAllContent = 0
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N' WHERE aup.Show = 1 '
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
					ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
				END
			IF @UserID <> -1
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N'
				UNION
				SELECT arp.ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' WHERE arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					END
			END
			SET @MainContentFilter = @MainContentFilter + N'
			) AS PermissionsByArticle
			INTERSECT
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na '
			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
			AND EXISTS (
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
			)
			AND na.HasPermissions = 1
		) AS HasPermissionsTrue '
	END
	
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N') AllBeforeFilters INTERSECT ' + @CFFilterQuery
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	END
	
	IF @OrderByColumnName = N'CommentedDate'
	SET @MainContentFilter = @MainContentFilter + N'
		)
	) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1
	'
SET @MainContentFilter = @MainContentFilter + N'
) '
SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent '

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID],n.[ContactEmail], ';
ELSE
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],n.[ContactEmail], ';

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N'0 AS CanEdit, '
ELSE IF @CanEditAllContent = 1
	SET @sqlcommand = @sqlcommand + N'1 AS CanEdit, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE WHEN @HasEditCategories = 0
	THEN 
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	ELSE
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE '
			IF @EditOnlyAsOwner = 1
				SET @sqlcommand = @sqlcommand + N' n.UserID = @UserID AND '

			SET @sqlcommand = @sqlcommand + N' c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	END
	AS CanEdit, '
END

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	WHERE EXISTS (
		SELECT ci.CategoryID
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci
		WHERE c.CategoryID = ci.CategoryID
			AND ci.ArticleID = n.ArticleID
			AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
	)
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '
ELSE
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", lc.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.Id
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N' 0 AS Published, 0 AS Approve, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE n.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	END AS Published, '
	IF @UserCanApprove = 0
		SET @sqlcommand = @sqlcommand + N'0 AS Approve, '
	ELSE
		SET @sqlcommand = @sqlcommand + N'
			CASE n.Approved
				WHEN 1 THEN 0
				WHEN 0 THEN n.Active
			END AS Approve, '
END

SET @sqlcommand = @sqlcommand + N' @AllContentCount AS ContentCount '

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				
				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],fv.' + @OrderByColumnName + ',ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		WHERE n.ArticleID IN (
			SELECT finalSelection.ArticleID FROM (
				SELECT inner_n.ArticleID, ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				
				SET @sqlcommand = @sqlcommand + N' ' + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				WHERE inner_n.ArticleID IN (
					SELECT ArticleID FROM AllContent
					)
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		)';
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.CommentedDate,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				
				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],fv.' + @OrderByColumnName + '
				,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, fv.'
				
				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode
		WHERE n.ArticleID IN (
			SELECT finalSelection.ArticleID FROM (
				SELECT inner_n.ArticleID, ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + N' ' + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				WHERE inner_n.ArticleID IN (SELECT ArticleID FROM AllContent)
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		)';
	END
END

SET @sqlcommand = @sqlcommand + N' ORDER BY '
	IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'Featured DESC, '
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
		SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#UserEditCategories'') IS NOT NULL
		DROP TABLE #UserEditCategories; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
		DROP TABLE #LocalizedCategories; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRange = @DateRange
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@LocaleCode = @LocaleCode
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@FilterByTagID = @FilterByTagID
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles_NoPermissions]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles_NoPermissions] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles_NoPermissions]
	@PortalId INT,
	@ModuleId INT,
	@UserId INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldId INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@FilterOnlyFeatured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByCategoryId INT = NULL,
	@FilterByDnnUserId INT = NULL,
	@FilterByDnnGroupId INT = NULL,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@CategoryFilterType TINYINT = 0,
	@HideUnlocalizedItems BIT = 0,
	@RestrictionByDateRange SMALLINT = NULL,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalId INT
	,@ModuleId INT
	,@UserId INT
	,@OrderByCustomFieldId INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@FilterByCategoryId INT
	,@FilterByDnnUserId INT
	,@FilterByDnnGroupId INT
	,@LocaleCode NVARCHAR(20)
	,@HideUnlocalizedItems BIT
	,@RestrictionByDateRange SMALLINT
	,@IsPortalSharing BIT '

DECLARE @sqlcommand NVARCHAR(MAX);
SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); '

DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

DECLARE @sqlFilterCategories NVARCHAR(4000);

IF @FilterByCategoryId IS NOT NULL
BEGIN
	SET @sqlFilterCategories = N'
	SELECT ArticleID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	WHERE c.ArticleID = na.ArticleID AND c.CategoryID = @FilterByCategoryId ';
END
ELSE IF @CategoryFilterType = 1
BEGIN
	SET @sqlFilterCategories = N'
	SELECT ArticleID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	WHERE c.ArticleID = na.ArticleID
		AND EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci
			WHERE mci.ModuleID = @ModuleId AND c.CategoryID = mci.CategoryID
		) ';
END
ELSE IF @CategoryFilterType = 2
BEGIN
	SET @sqlFilterCategories = N'
	SELECT ArticleID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	WHERE c.ArticleID = na.ArticleID
		AND EXISTS (
			SELECT [CategoryID]
			FROM #FilterCategories AS f
			WHERE c.CategoryID = f.CategoryID
		) '

	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
	;WITH hierarchy AS(
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
			WHERE ci.ModuleID = @ModuleId
				AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
		)
		AND cl.' + @sqlSharingPortalAll + '
		UNION ALL
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
	)
	INSERT INTO #FilterCategories
	SELECT DISTINCT CategoryID
	FROM hierarchy; '
END

IF @RestrictionByDateRange IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	DECLARE @PublishDateLimit DATETIME;
	SET @PublishDateLimit = (SELECT DATEADD(dd,DATEDIFF(dd,@RestrictionByDateRange,GETUTCDATE()),0)); '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (ID INT PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX));
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS ID, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.' + @sqlSharingPortalAll

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);

IF @OrderByCustomFieldId IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldId AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldId = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldId = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END
IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

SET @sqlcommand = @sqlcommand + N'
;WITH AllContent AS( '
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		SELECT ArticleID, CommentedDate FROM (
		SELECT n.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,ROW_NUMBER() OVER(PARTITION BY n.[ArticleID] ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'n.Featured DESC, '
			
			SET @sqlcommand = @sqlcommand + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc ON n.ArticleID = nc.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		WHERE n.ArticleID IN (';
	END
	
	SET @sqlcommand = @sqlcommand + N'
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		WHERE ' + @sqlSharingPortal + N'
		AND na.EventArticle = 0
		AND na.Approved = 1
		AND na.Active = 1
		AND @CurrentDate BETWEEN na.[PublishDate] AND na.[ExpireDate] '

	IF @RestrictionByDateRange IS NOT NULL
		SET @sqlcommand = @sqlcommand + N' AND na.PublishDate >= @PublishDateLimit '

	IF @FilterByCategoryId IS NOT NULL OR @CategoryFilterType > 0
		SET @sqlcommand = @sqlcommand + N'
		AND EXISTS ( ' + @sqlFilterCategories + ' ) '

	IF @HideUnlocalizedItems = 1
		SET @sqlcommand = @sqlcommand + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl
			WHERE ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
		) '

	IF @FilterByDnnGroupId IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = nss.ArticleID
			WHERE nss.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		) '
	ELSE IF @FilterByDnnUserId IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
			WHERE nss.ArticleID = na.ArticleID
		) '
		
	IF @LocaleCode IS NULL
		SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '

	IF @FilterOnlyFeatured = 1
		SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '

	IF @FilterByDnnUserId IS NOT NULL
		SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
	ELSE IF @ShowAllAuthors = 0
		SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (
			SELECT [UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @ModuleId
			UNION 
			SELECT [UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @ModuleId
		) '
	
	IF @OrderByColumnName = N'CommentedDate'
	SET @sqlcommand = @sqlcommand + N'
		)
	) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1
	'
SET @sqlcommand = @sqlcommand + N'
) '

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID],n.[ContactEmail], ';
ELSE
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],n.[ContactEmail], ';

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow '
ELSE
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.ID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow '

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.CommentedDate,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, ' SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE IF @OrderByCustomFieldId IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],fv.' + @OrderByColumnName + ',ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldId
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		WHERE n.ArticleID IN (
			SELECT finalSelection.ArticleID
			FROM (
				SELECT inner_n.ArticleID, ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, ' SET @sqlcommand = @sqlcommand + N' ' + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				WHERE inner_n.ArticleID IN (SELECT ArticleID FROM AllContent)
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		)';
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.CommentedDate,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, ' SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE IF @OrderByCustomFieldId IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],fv.' + @OrderByColumnName + ',ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, fv.'
				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldId
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode
		WHERE n.ArticleID IN (
			SELECT finalSelection.ArticleID FROM (
				SELECT inner_n.ArticleID, ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, ' SET @sqlcommand = @sqlcommand + N' ' + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				WHERE inner_n.ArticleID IN (SELECT ArticleID FROM AllContent)
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		)';
	END
END

SET @sqlcommand = @sqlcommand + N' ORDER BY '
	IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'Featured DESC, '
	IF @OrderByCustomFieldId IS NOT NULL AND @OrderByDirection = 'ASC'
		SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

IF @LocaleCode IS NOT NULL
SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
	DROP TABLE #LocalizedCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalId = @PortalId
	,@ModuleId = @ModuleId
	,@UserId = @UserId
	,@OrderByCustomFieldId = @OrderByCustomFieldId
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@FilterByCategoryId = @FilterByCategoryId
	,@FilterByDnnUserId = @FilterByDnnUserId
	,@FilterByDnnGroupId = @FilterByDnnGroupId
	,@LocaleCode = @LocaleCode
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles_NoPermissions_Count]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles_NoPermissions_Count] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles_NoPermissions_Count]
	@PortalId INT,
	@ModuleId INT,
	@UserId INT,
	@FilterOnlyFeatured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByCategoryId INT = NULL,
	@FilterByDnnUserId INT = NULL,
	@FilterByDnnGroupId INT = NULL,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@CategoryFilterType TINYINT = 0,
	@HideUnlocalizedItems BIT = 0,
	@RestrictionByDateRange SMALLINT = NULL,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalId INT
	,@ModuleId INT
	,@UserId INT
	,@FilterByCategoryId INT
	,@FilterByDnnUserId INT
	,@FilterByDnnGroupId INT
	,@LocaleCode NVARCHAR(20)
	,@HideUnlocalizedItems BIT
	,@RestrictionByDateRange SMALLINT
	,@IsPortalSharing BIT '

DECLARE @sqlcommand NVARCHAR(MAX);
SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); '

DECLARE @sqlSharingPortal VARCHAR(300);
DECLARE @sqlSharingPortalAll VARCHAR(300);

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

DECLARE @sqlFilterCategories NVARCHAR(4000);

IF @FilterByCategoryId IS NOT NULL
BEGIN
	SET @sqlFilterCategories = N'
	SELECT ArticleID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	WHERE c.ArticleID = na.ArticleID AND c.CategoryID = @FilterByCategoryId ';
END
ELSE IF @CategoryFilterType = 1
BEGIN
	SET @sqlFilterCategories = N'
	SELECT ArticleID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	WHERE c.ArticleID = na.ArticleID
		AND EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci
			WHERE mci.ModuleID = @ModuleId AND c.CategoryID = mci.CategoryID
		) ';
END
ELSE IF @CategoryFilterType = 2
BEGIN
SET @sqlFilterCategories = N'
	SELECT ArticleID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	WHERE c.ArticleID = na.ArticleID
		AND EXISTS (
			SELECT [CategoryID]
			FROM #FilterCategories AS f
			WHERE c.CategoryID = f.CategoryID
		) '
END

IF @RestrictionByDateRange IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	DECLARE @PublishDateLimit DATETIME;
	SET @PublishDateLimit = (SELECT DATEADD(dd,DATEDIFF(dd,@RestrictionByDateRange,GETUTCDATE()),0)); '

IF @CategoryFilterType = 2
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #FilterCategories (CategoryID INT NOT NULL PRIMARY KEY);
	;WITH hierarchy AS(
			SELECT cl.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE EXISTS (
				SELECT [CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
				WHERE ci.ModuleID = @ModuleId
					AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
			)
			AND cl.' + @sqlSharingPortalAll + '
			UNION ALL
			SELECT cl.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
		)
		INSERT INTO #FilterCategories
		SELECT DISTINCT CategoryID
		FROM hierarchy; '

SET @sqlcommand = @sqlcommand + N'
SELECT COUNT(na.[ArticleID])
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
WHERE ' + @sqlSharingPortal + N'
	AND na.EventArticle = 0
	AND na.Approved = 1
	AND na.Active = 1
	AND @CurrentDate BETWEEN na.[PublishDate] AND na.[ExpireDate] '

IF @RestrictionByDateRange IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' AND na.PublishDate >= @PublishDateLimit '

IF @FilterByCategoryId IS NOT NULL OR @CategoryFilterType > 0
	SET @sqlcommand = @sqlcommand + N'
	AND EXISTS ( ' + @sqlFilterCategories + ' ) '

IF @HideUnlocalizedItems = 1
	SET @sqlcommand = @sqlcommand + N'
	AND EXISTS (
		SELECT ArticleID
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl
		WHERE ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
	) '

IF @FilterByDnnGroupId IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	AND EXISTS (
		SELECT nss.ArticleID
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = nss.ArticleID
		WHERE nss.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
	) '
ELSE IF @FilterByDnnUserId IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	AND EXISTS (
		SELECT nss.ArticleID
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
		WHERE nss.ArticleID = na.ArticleID
	) '
IF @LocaleCode IS NULL
	SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
IF @FilterOnlyFeatured = 1
	SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '

IF @FilterByDnnUserId IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
ELSE IF @ShowAllAuthors = 0
	SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (
		SELECT [UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
		WHERE mai.ModuleID = @ModuleId
		UNION 
		SELECT [UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
		WHERE mgi.ModuleID = @ModuleId
	) '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalId = @PortalId
	,@ModuleId = @ModuleId
	,@UserId = @UserId
	,@FilterByCategoryId = @FilterByCategoryId
	,@FilterByDnnUserId = @FilterByDnnUserId
	,@FilterByDnnGroupId = @FilterByDnnGroupId
	,@LocaleCode = @LocaleCode
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlesComments]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlesComments] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlesComments]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@ItemsFrom INT,
	@ItemsTo INT,
	@DateRange TINYINT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@FilterByTagID INT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	@FilterByCustomFields BIT = 0,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1,
	@CommentsSelectType TINYINT = 0 -- 0 all comments, 1 one per article
--WITH RECOMPILE
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRange TINYINT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@LocaleCode NVARCHAR(20)
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@FilterByTagID INT
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT
	,@CommentsSelectType TINYINT';

DECLARE @sqlCommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlCommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

SET @TopInnerFilter = N' WHERE ' + @sqlSharingPortal;

	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmd.GoogleMapID = gmc.GoogleMapID AND gmd.PointData <> N''''
			WHERE gmc.ArticleID = na.ArticleID
		) '
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			WHERE gmc.ArticleID = na.ArticleID
		) '

	IF @HideUnlocalizedItems = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl
			WHERE ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
		) '

	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = nss.ArticleID
			WHERE nss.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		) '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE nss.ArticleID = na.ArticleID
		) '

	IF @FilterByTags = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
			INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE ti.ArticleID = na.ArticleID
		) '
	
	IF @FilterByArticles = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM @FilterArticlesTable AS fba
			WHERE fba.ArticleID = na.ArticleID
		) '

	SET @TopInnerFilter = @TopInnerFilter + N' AND na.EventArticle = 0 '

	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @DateRange = 2
			SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate '
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @DateRange > 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE
		SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '

	IF @LocaleCode IS NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '

	IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
	
	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 '
		SET @TopInnerFilter = @TopInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
	END

SET @MainContentFilter = N'
;WITH AllComments AS( '
	IF @CommentsSelectType = 1
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT irs.[CommentID],irs.[DateAdded]
		FROM (
			SELECT c.[CommentID],c.[DateAdded], ROW_NUMBER() OVER(PARTITION BY c.[ArticleID] ORDER BY c.DateAdded DESC) AS rn
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS c
			WHERE c.Approved = 1
				AND c.' + @sqlSharingPortalAll + '
				AND c.ArticleID IN ( '
	ELSE
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT c.[CommentID],c.[DateAdded]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS c
		WHERE c.Approved = 1
			AND c.' + @sqlSharingPortalAll + '
			AND c.ArticleID IN ( '
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.ArticleID IN ( ';
	END
	
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N' SELECT ArticleID FROM ('
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na '
		SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
		) '

	IF @QueryPermissionsPerArticles = 1
		SET @MainContentFilter = @MainContentFilter + N'
		AND na.HasPermissions = 0 ' 

	IF @QueryPermissionsPerArticles = 1
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		UNION ALL
		SELECT ArticleID FROM (
			SELECT ArticleID FROM (
			SELECT aup.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup '
				IF @CanEditAllContent = 0
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N' WHERE aup.Show = 1 '
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
					ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
				END
			IF @UserID <> -1
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N'
				UNION
				SELECT arp.ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' WHERE arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					END
			END
			SET @MainContentFilter = @MainContentFilter + N'
			) AS PermissionsByArticle
			INTERSECT
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na '
			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
			AND EXISTS (
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
			)
			AND na.HasPermissions = 1
		) AS HasPermissionsTrue '
	END
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	END

	IF @CommentsSelectType = 1
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS irs
		WHERE irs.rn = 1 '
	ELSE
		SET @MainContentFilter = @MainContentFilter + N' ) ';

SET @MainContentFilter = @MainContentFilter + N'
) '
SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(CommentID) FROM AllComments '

SET @sqlcommand = @sqlcommand + @MainContentFilter

SET @sqlcommand = @sqlcommand + N'
SELECT c.[CommentID]
	,c.[UserID]
	,c.[AnonymName]
	,c.[Comment]
	,c.[DateAdded]
	,c.[GoodVotes]
	,c.[BadVotes]
	,c.[Approved]
	,c.[CommentersEmail]
	,c.[ReplayCommentID]
	,c.[ReplayLevel]
	,c.[CommenterIP]
	,c.[PortalID] AS CommentPortalId
	,n.[ArticleId]
	,n.[PortalId] AS ArticlePortalId '
IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
		,CASE WHEN nl.ArticleID IS NULL THEN n.[Title] ELSE nl.[Title] END AS Title
		,CASE WHEN nl.ArticleID IS NULL THEN n.[TitleLink] ELSE nl.[clTitleLink] END AS TitleLink
		,CASE WHEN nl.ArticleID IS NULL THEN n.[DetailType] ELSE nl.[DetailType] END AS DetailType
		,CASE WHEN nl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE nl.[DetailTypeData] END AS DetailTypeData '
ELSE
	SET @sqlcommand = @sqlcommand + N'
		,n.[Title]
		,n.[TitleLink]
		,n.[DetailType]
		,n.[DetailTypeData] '

SET @sqlcommand = @sqlcommand + N'
	,@AllContentCount AS ContentCount
FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS c
INNER JOIN  (
	SELECT [CommentID]
	FROM (
		SELECT ac.[CommentID], ROW_NUMBER() OVER(ORDER BY ac.[DateAdded] DESC) AS rn
		FROM AllComments AS ac
	)
	AS T1 WHERE rn BETWEEN @ItemsFrom AND @ItemsTo
) AS r ON r.CommentID = c.CommentID
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON c.ArticleID = n.ArticleID '
IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS nl ON nl.ArticleID = n.ArticleID AND nl.LocaleCode = @LocaleCode'

SET @sqlcommand = @sqlcommand + N'
ORDER BY c.[DateAdded] DESC '

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	--,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRange = @DateRange
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@LocaleCode = @LocaleCode
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@FilterByTagID = @FilterByTagID
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
	,@CommentsSelectType = @CommentsSelectType
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@ArticleID INT,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@PermissionSettingsSource BIT = 1,
	@IsPortalSharing BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
--WITH RECOMPILE
AS
SET NOCOUNT ON;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #EditCategories (CategoryID INT PRIMARY KEY);

IF @UserID <> -1
BEGIN
	IF @IsPortalSharing = 0
		INSERT INTO #UserInRoles
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);
	ELSE
		INSERT INTO #UserInRoles
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);
END

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
	IF @IsPortalSharing = 0
		INSERT INTO #ViewCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID;
	ELSE
		INSERT INTO #ViewCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID);
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1
		INSERT INTO #ViewCategories
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings]
			WHERE PortalID = @PortalID
				AND ModuleID IS NULL
				AND RoleID IS NULL
			);
	ELSE
		INSERT INTO #ViewCategories
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.[PremissionSettingsID] IN (
			SELECT [PremissionSettingsID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings]
			WHERE [PortalID] = @PortalID
				AND [ModuleID] = @ModuleID
				AND [RoleID] IS NULL
			);
END
ELSE
BEGIN
	IF @PermissionSettingsSource = 1
		INSERT INTO #ViewCategories
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.[PremissionSettingsID] IN (
			SELECT [PremissionSettingsID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings]
			WHERE [PortalID] = @PortalID
				AND [ModuleID] IS NULL
				AND RoleID IN (SELECT [RoleID] FROM #UserInRoles)
			)
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		WHERE upsc.[PremissionSettingsID] IN (
			SELECT [PremissionSettingsID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings]
			WHERE [PortalID] = @PortalID
				AND [UserID] = @UserID
				AND [ModuleID] IS NULL
			);
	ELSE
		INSERT INTO #ViewCategories
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.[PremissionSettingsID] IN (
			SELECT [PremissionSettingsID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings]
			WHERE [ModuleID] = @ModuleID
				AND RoleID IN (SELECT [RoleID] FROM #UserInRoles))
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		WHERE upsc.[PremissionSettingsID] IN (
			SELECT [PremissionSettingsID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings]
			WHERE [PortalID] = @PortalID
				AND [UserID] = @UserID
				AND [ModuleID] = @ModuleID
			)
END

DECLARE @CanView BIT;
SET @CanView = 0;
DECLARE @CanEdit BIT;
SET @CanEdit = 0;

IF @QueryModulePermissions = 0 AND @QueryPermissionsPerArticles = 0
BEGIN
	SET @CanView = 1;
	SET @CanEdit = 0;
END
ELSE IF @QueryModulePermissions = 0 AND @QueryPermissionsPerArticles = 1
BEGIN
	IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID
		INNER JOIN #ViewCategories AS uvc ON uvc.CategoryID = c.CategoryID
		WHERE n.ArticleID=@ArticleID
			AND n.HasPermissions = 0
			AND (n.Approved = 1 OR @UserCanApprove = 1)
			AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
		)
		SET @CanView = 1;
	ELSE -- posebne dozvole
	BEGIN
		IF @UserID = -1 -- neregistirani korisnik ne moze BITi u roli
		BEGIN
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
				WHERE aup.ArticleID = @ArticleID
					AND aup.UserID IS NULL
					AND n.HasPermissions = 1
					AND (n.Approved = 1 OR @UserCanApprove = 1)
					AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
				)
				SET @CanView = 1;
		END
		ELSE
		BEGIN
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
				WHERE aup.ArticleID = @ArticleID
					AND n.HasPermissions = 1
					AND aup.UserID = @UserID
					AND aup.Show = 1
					AND (n.Approved = 1 OR @UserCanApprove = 1)
					AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
				)
				SET @CanView = 1;
			ELSE
			BEGIN 
				IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
					WHERE arp.ArticleID = @ArticleID
						AND n.HasPermissions = 1
						AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
						AND arp.Show = 1
						AND (n.Approved = 1 OR @UserCanApprove = 1)
						AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
					)
					SET @CanView = 1;
			END
			END
	END
	SET @CanEdit = 0;
END
ELSE IF @QueryModulePermissions = 1 AND @QueryPermissionsPerArticles = 0
BEGIN
	IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID
		INNER JOIN #ViewCategories AS uvc ON uvc.CategoryID = c.CategoryID
		WHERE n.ArticleID=@ArticleID
			AND (n.Approved = 1 OR @UserCanApprove = 1)
			AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
		)
		SET @CanView = 1;
	SET @CanEdit = 0;
END
ELSE IF @AdminOrSuperUser = 1 OR (@Perm_EditAllCategores = 1 AND @EditOnlyAsOwner = 0)
BEGIN
	SET @CanView = 1;
	SET @CanEdit = 1;
END
ELSE
BEGIN
	IF @Perm_EditAllCategores = 1 AND @EditOnlyAsOwner = 1
	BEGIN
		IF @IsPortalSharing = 0
			INSERT INTO #EditCategories
			SELECT CategoryID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
			WHERE PortalID = @PortalID;
		ELSE
			INSERT INTO #EditCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
			WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID);
	END
	ELSE
	BEGIN
		IF @UserID = -1
		BEGIN
			IF @PermissionSettingsSource = 1
				INSERT INTO #EditCategories
				SELECT rpatc.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
				WHERE rpatc.[PremissionSettingsID] IN (
					SELECT [PremissionSettingsID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings]
					WHERE [PortalID] = @PortalID
						AND [ModuleID] IS NULL
						AND [RoleID] IS NULL
				);
			ELSE
				INSERT INTO #EditCategories
				SELECT rpatc.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
				WHERE rpatc.[PremissionSettingsID] IN (
					SELECT [PremissionSettingsID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings]
					WHERE [PortalID] = @PortalID
						AND [ModuleID] = @ModuleID
						AND [RoleID] IS NULL
				);
		END
		ELSE
		BEGIN
			IF @PermissionSettingsSource = 1
				INSERT INTO #EditCategories
				SELECT rpatc.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
				WHERE rpatc.[PremissionSettingsID] IN (
					SELECT [PremissionSettingsID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings]
					WHERE [PortalID] = @PortalID
						AND [ModuleID] IS NULL
						AND RoleID IN (SELECT [RoleID] FROM #UserInRoles))
				UNION
				SELECT upatc.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
				WHERE upatc.[PremissionSettingsID] IN (
					SELECT [PremissionSettingsID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings]
					WHERE [PortalID] = @PortalID
						AND [UserID] = @UserID
						AND [ModuleID] IS NULL
				);
			ELSE
				INSERT INTO #EditCategories
				SELECT rpatc.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
				WHERE rpatc.[PremissionSettingsID] IN (
					SELECT [PremissionSettingsID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings]
					WHERE [ModuleID] = @ModuleID
						AND RoleID IN (SELECT [RoleID] FROM #UserInRoles)
				)
				UNION
				SELECT upatc.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
				WHERE upatc.[PremissionSettingsID] IN (
					SELECT [PremissionSettingsID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings]
					WHERE [UserID] = @UserID
						AND [PortalID] = @PortalID
						AND [ModuleID] = @ModuleID
				);
		END
	END

	IF @EditOnlyAsOwner = 0
	BEGIN
		IF EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = @ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #EditCategories))
		OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = @ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT [RoleID] FROM #UserInRoles))
		OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = @ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
			SET @CanEdit = 1;
	END
	ELSE
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] WHERE ArticleID = @ArticleID AND UserID = @UserID)
		AND EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = @ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #EditCategories))
			SET @CanEdit = 1;
		
		IF @CanEdit = 0 -- ovako je bilo prije, ako nije proslo ovo iznad onda se islo na posebne dozvole, mozda to nije ispravno
		BEGIN
			IF EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = @ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT [RoleID] FROM #UserInRoles))
			OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = @ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
				SET @CanEdit = 1;
		END
	END
	
	IF @CanEdit = 1
		SET @CanView = 1;
	ELSE
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID
			INNER JOIN #ViewCategories AS uvc ON uvc.CategoryID = c.CategoryID
			WHERE n.ArticleID=@ArticleID
				AND n.HasPermissions = 0
				AND (n.Approved = 1 OR @UserCanApprove = 1)
				AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
			)
			SET @CanView = 1;
		ELSE -- posebne dozvole
		BEGIN
			IF @UserID = -1 -- neregistirani korisnik ne moze BITi u roli
			BEGIN
				IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
					WHERE aup.ArticleID = @ArticleID
						AND aup.UserID IS NULL
						AND n.HasPermissions = 1
						AND (n.Approved = 1 OR @UserCanApprove = 1)
						AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
					)
					SET @CanView = 1;
			END
			ELSE
			BEGIN
				IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
					WHERE aup.ArticleID = @ArticleID
						AND n.HasPermissions = 1
						AND aup.UserID = @UserID
						AND aup.Show = 1
						AND (n.Approved = 1 OR @UserCanApprove = 1)
						AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
					)
					SET @CanView = 1;
				ELSE
				BEGIN 
					IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
						WHERE arp.ArticleID = @ArticleID
							AND n.HasPermissions = 1
							AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							AND arp.Show = 1
							AND (n.Approved = 1 OR @UserCanApprove = 1)
							AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
						)
						SET @CanView = 1;
				END
			 END
		END
	END
END

IF @CanView = 1
BEGIN
	IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID = @ArticleID AND LocaleCode = @LocaleCode)
	BEGIN
		SELECT n.[ArticleID],n.[PortalID],n.[UserID],ncl.[Title],ncl.[SubTitle],ncl.[Summary],ncl.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
			,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active],ncl.[clTitleLink] AS TitleLink,n.[DetailType]
			,ncl.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType],n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme]
			,n.[ArticleImageFolder],n.[NumberOfComments],n.[ArticleImageSet],ncl.[MetaDecription],ncl.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget],n.[ArticleFromRSS]
			,n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],ncl.[MainImageTitle]
			,ncl.[MainImageDescription],n.[CFGroupeID],n.[DetailsDocumentsTemplate],n.[DetailsLinksTemplate],n.[DetailsRelatedArticlesTemplate],n.[ContactEmail],ncl.[TitleTag]
			,CASE WHEN @CanEdit = 1 THEN 1 ELSE 0 END AS CanEdit
			,(
				SELECT c.[CategoryID] AS "@id", c.[PortalID] AS "@portalid"
					,CASE WHEN cl.CategoryID IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS "@name", cl.[CategoryURL] AS "@url", c.[Color] AS "@color", cl.[CategoryText] AS "@description", c.[CategoryImage] AS "@image"
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.[CategoryID] = ci.[CategoryID]
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.[CategoryID] = cl.[CategoryID] AND cl.[LocaleCode] = @LocaleCode
				WHERE ci.ArticleID = n.ArticleID
				ORDER BY c.Position
				FOR XML PATH('category'), ROOT('categories')
			) AS CatToShow
			,CASE WHEN n.Active = 1 THEN 0 ELSE 1 END AS Published
			,CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE n.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE n.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			END AS Approve
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
		WHERE n.ArticleID = @ArticleID;
	END
	ELSE
	BEGIN
		SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
			,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active],n.[TitleLink],n.[DetailType]
			,n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType],n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme]
			,n.[ArticleImageFolder],n.[NumberOfComments],n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget],n.[ArticleFromRSS]
			,n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle]
			,n.[MainImageDescription],n.[CFGroupeID],n.[DetailsDocumentsTemplate],n.[DetailsLinksTemplate],n.[DetailsRelatedArticlesTemplate],n.[ContactEmail],n.[TitleTag]
			,CASE WHEN @CanEdit = 1 THEN 1 ELSE 0 END AS CanEdit
			,(
				SELECT c.[CategoryID] AS "@id", c.[PortalID] AS "@portalid", c.[CategoryName] AS "@name", c.[CategoryURL] AS "@url", c.[Color] AS "@color", c.[CategoryText] AS "@description", c.[CategoryImage] AS "@image"
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
				WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
				ORDER BY c.Position
				FOR XML PATH('category'), ROOT('categories')
			) AS CatToShow
			,CASE WHEN n.Active = 1 THEN 0 ELSE 1 END AS Published
			,CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE n.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE n.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			END AS Approve
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		WHERE n.ArticleID = @ArticleID;
	END
END

IF OBJECT_ID('tempdb..#UserInRoles') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID('tempdb..#ViewCategories') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID('tempdb..#EditCategories') IS NOT NULL
	DROP TABLE #EditCategories;
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetContentNoPermissions]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetContentNoPermissions] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetContentNoPermissions]
	@PortalID INT,
	@ModuleID INT,
	@ArticleID INT,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @ArticleExists BIT;
SET @ArticleExists = 0;

IF (@IsPortalSharing = 1
		AND EXISTS (
			SELECT 1
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			WHERE n.PortalID IN (
				SELECT SharingPortalID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals]
				WHERE ModuleID = @ModuleID
				)
				AND n.ArticleID = @ArticleID
				AND n.Approved = 1
				AND n.Active = 1
				AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]
		)
	) OR (
	@IsPortalSharing = 0
		AND EXISTS (
			SELECT 1
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			WHERE n.PortalID = @PortalID
				AND n.ArticleID = @ArticleID
				AND n.Approved = 1
				AND n.Active = 1
				AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]
		)
	)
BEGIN
	IF @LocaleCode IS NOT NULL AND EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID = @ArticleID AND LocaleCode = @LocaleCode)
	BEGIN
		SELECT n.[ArticleID],n.[PortalID],n.[UserID],ncl.[Title],ncl.[SubTitle],ncl.[Summary],ncl.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
			,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active],ncl.[clTitleLink] AS TitleLink,n.[DetailType]
			,ncl.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType],n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme]
			,n.[ArticleImageFolder],n.[NumberOfComments],n.[ArticleImageSet],ncl.[MetaDecription],ncl.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget],n.[ArticleFromRSS]
			,n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],ncl.[MainImageTitle]
			,ncl.[MainImageDescription],n.[CFGroupeID],n.[DetailsDocumentsTemplate],n.[DetailsLinksTemplate],n.[DetailsRelatedArticlesTemplate],n.[ContactEmail],ncl.[TitleTag]
			,0 AS CanEdit
			,0 AS Published
			,0 AS Approve
			,(
				SELECT c.[CategoryID] AS "@id", c.[PortalID] AS "@portalid"
					,CASE WHEN cl.CategoryID IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS "@name", cl.[CategoryURL] AS "@url", c.[Color] AS "@color", cl.[CategoryText] AS "@description", c.[CategoryImage] AS "@image"
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.[CategoryID] = ci.[CategoryID]
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.[CategoryID] = cl.[CategoryID] AND cl.[LocaleCode] = @LocaleCode
				WHERE ci.ArticleID = n.ArticleID
				ORDER BY c.Position
				FOR XML PATH('category'), ROOT('categories')
			) AS CatToShow
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
		WHERE n.ArticleID = @ArticleID;
	END
	ELSE
	BEGIN
		SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
			,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active],n.[TitleLink],n.[DetailType]
			,n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType],n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme]
			,n.[ArticleImageFolder],n.[NumberOfComments],n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget],n.[ArticleFromRSS]
			,n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle]
			,n.[MainImageDescription],n.[CFGroupeID],n.[DetailsDocumentsTemplate],n.[DetailsLinksTemplate],n.[DetailsRelatedArticlesTemplate],n.[ContactEmail],n.[TitleTag]
			,0 AS CanEdit
			,0 AS Published
			,0 AS Approve
			,(
				SELECT c.[CategoryID] AS "@id", c.[PortalID] AS "@portalid", c.[CategoryName] AS "@name", c.[CategoryURL] AS "@url", c.[Color] AS "@color", c.[CategoryText] AS "@description", c.[CategoryImage] AS "@image"
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
				WHERE ci.ArticleID = n.ArticleID
				ORDER BY c.Position
				FOR XML PATH('category'), ROOT('categories')
			) AS CatToShow
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		WHERE n.ArticleID = @ArticleID;
	END
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT = 1,
	@ItemsTo INT = 5,
	@DateRangeType TINYINT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 0,
	@FillterSettingsSource BIT = 0,
	@StartDate DATETIME = NULL,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange SMALLINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	@FilterByCustomFields BIT = 0,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
--WITH RECOMPILE
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRangeType TINYINT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@StartDate DATETIME
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange SMALLINT
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT';

DECLARE @sqlCommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlCommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT NOT NULL PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (Id INT PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX), CategoryURL NVARCHAR(1500)); '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #UserEditCategories (CategoryID INT PRIMARY KEY);
	INSERT INTO #UserEditCategories
	SELECT CategoryID
	FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)

	DECLARE @HasEditCategories BIT;

	IF EXISTS (SELECT 1 FROM #UserEditCategories)
		SET @HasEditCategories = 1;
	ELSE
		SET @HasEditCategories = 0; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT NOT NULL PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS Id,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryURL ELSE cl.CategoryURL END AS CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategories) '
	
SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

SET @TopInnerFilter = N' WHERE ' + @sqlSharingPortal;

	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmd.GoogleMapID = gmc.GoogleMapID AND gmd.PointData <> N''''
			WHERE gmc.ArticleID = na.ArticleID
		) '
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			WHERE gmc.ArticleID = na.ArticleID
		) '

	IF @HideUnlocalizedItems = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl
			WHERE ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
		) '

	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = nss.ArticleID
			WHERE nss.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		) '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE nss.ArticleID = na.ArticleID
		) '

	IF @FilterByTags = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
			INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE ti.ArticleID = na.ArticleID
		) '
	
	IF @FilterByArticles = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM @FilterArticlesTable AS fba
			WHERE fba.ArticleID = na.ArticleID
		) '

	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL 
			SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE
		SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '

	IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
	
	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 '
		SET @TopInnerFilter = @TopInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
	END

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END
IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN
	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(630)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10) NOT NULL,
		CFWhereRoule NVARCHAR(MAX) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID)
				FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme
				WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);

		SET @CFFilterQuery = N'SELECT CFFilteredArticles.ArticleID FROM (';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			DECLARE @FilterValueMulti NVARCHAR(MAX);
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValueMulti = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N'AND'
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE ' + @FilterValueMulti + '
) AS OnlyWithGoogleMaps
WHERE Recency >= ' + STR(@ElementsCount) + ' '
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueMulti + ' '
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			DECLARE @FilterValueSimple NVARCHAR(630);
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @FilterValueSimple = CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow;

				SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueSimple + ' '

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END

		END

		SET @CFFilterQuery = @CFFilterQuery + N') AS CFFilteredArticles'
	END

	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

SET @MainContentFilter = N'
;WITH AllContent AS( '

	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT ArticleID, CommentedDate,RecurringID,StartDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,inner_all.RecurringID
			,inner_all.StartDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID], inner_all.RecurringID ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @MainContentFilter = @MainContentFilter + N'inner_all.Featured DESC, '
			
			SET @MainContentFilter = @MainContentFilter + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
			
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc
		INNER JOIN (';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT n.ArticleID,n.Featured,
		CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate,
		CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
	IF @DateRangeType = 2
		SET @MainContentFilter = @MainContentFilter + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 1
		BEGIN
			IF @ListArchive = 0
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
			ELSE
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
		END
	ELSE IF @DateRangeType = 0
		SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE
		SET @MainContentFilter = @MainContentFilter + N' 1 = 0'
	
	SET @MainContentFilter = @MainContentFilter + N'
	WHERE n.ArticleID IN( '
	 
	 -- tu bi trebal staviti okolo da se filtrira po and !!!
	 
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.ArticleID IN ( ';
	END
	 
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N' SELECT ArticleID FROM ('
	 
	SET @MainContentFilter = @MainContentFilter + N'
		SELECT na.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na ' -- normal and recurring event normal permissions
			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
			AND EXISTS (
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
			)
			AND EXISTS (
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
				WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
				IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
					ELSE
						SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
				END
				ELSE IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

			SET @MainContentFilter = @MainContentFilter + N'
				UNION ALL
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
				WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					AND EXISTS (
						SELECT ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
						WHERE nerd.ArticleID = ne.ArticleID '
						IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						AND ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
								ELSE
									SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
							END
						ELSE IF @DateRangeType = 0
							SET @MainContentFilter = @MainContentFilter + N' AND (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
				
					SET @MainContentFilter = @MainContentFilter + N'
					)
			) '

		IF @QueryPermissionsPerArticles = 1
			SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

	IF @QueryPermissionsPerArticles = 1
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		UNION ALL
		SELECT na.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na ' -- normal and recurring events user/role permissions
			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
			AND EXISTS (
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
			)
			AND EXISTS (
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = na.ArticleID '
				IF @CanEditAllContent = 0
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
					ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
				END
				IF @UserID <> -1
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
					WHERE arp.ArticleID = na.ArticleID '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					END
				END
			
			SET @MainContentFilter = @MainContentFilter + N'
			)
			AND EXISTS (
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
				WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
				IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
					ELSE
						SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
				END
				ELSE IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

			SET @MainContentFilter = @MainContentFilter + N'
				UNION ALL
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
				WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					AND EXISTS (
						SELECT ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
						WHERE nerd.ArticleID = ne.ArticleID '
						IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						AND ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
								ELSE
									SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
							END
						ELSE IF @DateRangeType = 0
							SET @MainContentFilter = @MainContentFilter + N' AND (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					
					SET @MainContentFilter = @MainContentFilter + N'
					)
			) '
		END

	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N') AllBeforeFilters INTERSECT ' + @CFFilterQuery
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'
	) '
	
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON nc.ArticleID = inner_all.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1'
	END
	
SET @MainContentFilter = @MainContentFilter + N' 
) '

SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent '

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
	,e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], '
ELSE
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], ';

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N'0 AS CanEdit, '
ELSE IF @CanEditAllContent = 1
	SET @sqlcommand = @sqlcommand + N'1 AS CanEdit, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE WHEN @HasEditCategories = 0
	THEN 
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	ELSE
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE '
			IF @EditOnlyAsOwner = 1
				SET @sqlcommand = @sqlcommand + N' n.UserID = @UserID AND '

			SET @sqlcommand = @sqlcommand + N' c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	END
	AS CanEdit, '
END

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '
ELSE
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", lc.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.Id
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N' 0 AS Published, 0 AS Approve, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE n.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	END AS Published, '
	IF @UserCanApprove = 0
		SET @sqlcommand = @sqlcommand + N'0 AS Approve, '
	ELSE
		SET @sqlcommand = @sqlcommand + N'
			CASE n.Approved
				WHEN 1 THEN 0
				WHEN 0 THEN n.Active
			END AS Approve, '
END

SET @sqlcommand = @sqlcommand + N' @AllContentCount AS ContentCount '

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC'
					SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
					
				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N',e_fsd.' + @OrderByColumnName + ',(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END)
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				IF @OrderByDirection = 'ASC' SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				
				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				IF @OrderByDirection = 'ASC' SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
					
				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
END

SET @sqlcommand = @sqlcommand + N' ORDER BY '
	IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'Featured DESC, '
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
		SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#UserEditCategories'') IS NOT NULL
		DROP TABLE #UserEditCategories; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
		DROP TABLE #LocalizedCategories; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRangeType = @DateRangeType
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@StartDate = @StartDate
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents_NoPermissions]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents_NoPermissions] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents_NoPermissions]
	@PortalId INT,
	@ModuleId INT,
	@UserId INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldId INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@FilterOnlyFeatured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByCategoryId INT = NULL,
	@FilterByDnnUserId INT = NULL,
	@FilterByDnnGroupId INT = NULL,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@CategoryFilterType TINYINT = 0,
	@HideUnlocalizedItems BIT = 0,
	@FilterByEventsLimitByDays INT = NULL,
	@RestrictionByDateRange SMALLINT = NULL,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalId INT
	,@ModuleId INT
	,@UserId INT
	,@OrderByCustomFieldId INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@FilterByCategoryId INT
	,@FilterByDnnUserId INT
	,@FilterByDnnGroupId INT
	,@LocaleCode NVARCHAR(20)
	,@HideUnlocalizedItems BIT
	,@FilterByEventsLimitByDays INT
	,@RestrictionByDateRange SMALLINT
	,@IsPortalSharing BIT '

DECLARE @sqlcommand NVARCHAR(MAX);
SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); '

DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

DECLARE @sqlFilterCategories NVARCHAR(4000);

IF @FilterByCategoryId IS NOT NULL
BEGIN
	SET @sqlFilterCategories = N'
	SELECT ArticleID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	WHERE c.ArticleID = na.ArticleID AND c.CategoryID = @FilterByCategoryId ';
END
ELSE IF @CategoryFilterType = 1
BEGIN
	SET @sqlFilterCategories = N'
	SELECT ArticleID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	WHERE c.ArticleID = na.ArticleID
		AND EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci
			WHERE mci.ModuleID = @ModuleId AND c.CategoryID = mci.CategoryID
		) ';
END
ELSE IF @CategoryFilterType = 2
BEGIN
SET @sqlFilterCategories = N'
	SELECT ArticleID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	WHERE c.ArticleID = na.ArticleID
		AND EXISTS (
			SELECT [CategoryID]
			FROM #FilterCategories AS f
			WHERE c.CategoryID = f.CategoryID
		) '
END

IF @FilterByEventsLimitByDays IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	DECLARE @EventsStartDateLimit DATETIME;
	SET @EventsStartDateLimit = (SELECT DATEADD(dd,DATEDIFF(dd,@FilterByEventsLimitByDays,GETUTCDATE()),0)); '

IF @RestrictionByDateRange IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	DECLARE @PublishDateLimit DATETIME;
	SET @PublishDateLimit = (SELECT DATEADD(dd,DATEDIFF(dd,@RestrictionByDateRange,GETUTCDATE()),0)); '

IF @CategoryFilterType = 2
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
	;WITH hierarchy AS(
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
			WHERE ci.ModuleID = @ModuleId
				AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
		)
		AND cl.' + @sqlSharingPortalAll + '
		UNION ALL
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
	)
	INSERT INTO #FilterCategories
	SELECT DISTINCT CategoryID
	FROM hierarchy; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (ID INT PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX));
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS ID, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.' + @sqlSharingPortalAll

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);

IF @OrderByCustomFieldId IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldId AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldId = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldId = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END
IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

SET @sqlcommand = @sqlcommand + N'
;WITH AllContent AS( '

	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		SELECT ArticleID, CommentedDate,RecurringID,StartDate FROM (
		SELECT inner_all.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,inner_all.RecurringID
			,inner_all.StartDate
			,ROW_NUMBER() OVER(PARTITION BY inner_all.[ArticleID], inner_all.RecurringID ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_all.Featured DESC, '
			
		SET @sqlcommand = @sqlcommand + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
		FROM (';
	END

	SET @sqlcommand = @sqlcommand + N'
	SELECT na.ArticleID,na.Featured,
		CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate,
		CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON na.ArticleID = ned.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
	IF @FilterByEventsLimitByDays IS NULL
		SET @sqlcommand = @sqlcommand + N' (
			nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (
				SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner
				WHERE nerdInner.ArticleID = ned.ArticleID
					AND nerdInner.StartDateTime > @CurrentDate
				ORDER BY nerdInner.StartDateTime
				)
			) '
	ELSE
		SET @sqlcommand = @sqlcommand + N'(
			(nerd.StartDateTime <= @CurrentDate
				AND (nerd.StartDateTime >= @EventsStartDateLimit
						OR (nerd.StartDateTime < @FilterByEventsLimitByDays AND nerd.EndDateTime >= @EventsStartDateLimit)
				)
			)
			 OR (nerd.RecurringID IN (
					SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd
					WHERE erd.ArticleID = ned.ArticleID
						AND erd.StartDateTime > @CurrentDate
					ORDER BY erd.StartDateTime
					)
				)
			) '
	
	SET @sqlcommand = @sqlcommand + N'
	WHERE ' + @sqlSharingPortal + N'
		AND na.EventArticle = 1
		AND na.Approved = 1
		AND na.Active = 1
		AND @CurrentDate BETWEEN na.[PublishDate] AND na.[ExpireDate] '

	IF @RestrictionByDateRange IS NOT NULL
		SET @sqlcommand = @sqlcommand + N' AND na.PublishDate >= @PublishDateLimit '

	IF @FilterByCategoryId IS NOT NULL OR @CategoryFilterType > 0
		SET @sqlcommand = @sqlcommand + N'
		AND EXISTS ( ' + @sqlFilterCategories + ' ) '

	SET @sqlcommand = @sqlcommand + N'
		AND EXISTS (
			SELECT ne.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
			WHERE ne.ArticleID = na.ArticleID
				AND ne.Recurring = 0 '
			IF @FilterByEventsLimitByDays IS NOT NULL
				SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @EventsStartDateLimit OR (ne.StartDate < @EventsStartDateLimit AND ne.EndDate >= @EventsStartDateLimit)) '

			SET @sqlcommand = @sqlcommand + N'
			UNION ALL
			SELECT ne.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
			WHERE ne.ArticleID = na.ArticleID
				AND ne.Recurring = 1
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
					WHERE nerd.ArticleID = ne.ArticleID
						AND '
					IF @FilterByEventsLimitByDays IS NULL
						SET @sqlcommand = @sqlcommand + N' (
							nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (
								SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID
								FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner
								WHERE nerdInner.ArticleID = ned.ArticleID
									AND nerdInner.StartDateTime > @CurrentDate
								ORDER BY nerdInner.StartDateTime
								)
							) '
					ELSE
						SET @sqlcommand = @sqlcommand + N'(
							(nerd.StartDateTime <= @CurrentDate
								AND (nerd.StartDateTime >= @EventsStartDateLimit OR (nerd.StartDateTime < @FilterByEventsLimitByDays AND nerd.EndDateTime >= @EventsStartDateLimit))
							)
							OR (nerd.RecurringID IN (
									SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID
									FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd
									WHERE erd.ArticleID = ned.ArticleID
										AND erd.StartDateTime > @CurrentDate
									ORDER BY erd.StartDateTime
									)
								)
						) '

		SET @sqlcommand = @sqlcommand + N'
				)
		) '

	IF @HideUnlocalizedItems = 1
		SET @sqlcommand = @sqlcommand + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl
			WHERE ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
		) '

	IF @FilterByDnnGroupId IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = nss.ArticleID
			WHERE nss.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		) '
	ELSE IF @FilterByDnnUserId IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
			WHERE nss.ArticleID = na.ArticleID
		) '
		
	IF @LocaleCode IS NULL
		SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
	IF @FilterOnlyFeatured = 1
		SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '

	IF @FilterByDnnUserId IS NOT NULL
		SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
	ELSE IF @ShowAllAuthors = 0
		SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (
			SELECT [UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @ModuleId
			UNION 
			SELECT [UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @ModuleId
		) '
	
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N' ) AS inner_all
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc ON inner_all.ArticleID = nc.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1 '
	END

SET @sqlcommand = @sqlcommand + N'
) '

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
	,e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], '
ELSE
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], ';

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow '
ELSE
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.ID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow '

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, 'SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N',e_fsd.' + @OrderByColumnName + ',(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END)
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + ',ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC'
					SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '	
				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, 'SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, 'SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + ',ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '	
				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
			 FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, 'SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike	 
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
END

SET @sqlcommand = @sqlcommand + N' ORDER BY '
	IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'Featured DESC, '
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
		SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

IF @LocaleCode IS NOT NULL
SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
	DROP TABLE #LocalizedCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalId = @PortalId
	,@ModuleId = @ModuleId
	,@UserId = @UserId
	,@OrderByCustomFieldId = @OrderByCustomFieldId
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@FilterByCategoryId = @FilterByCategoryId
	,@FilterByDnnUserId = @FilterByDnnUserId
	,@FilterByDnnGroupId = @FilterByDnnGroupId
	,@LocaleCode = @LocaleCode
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@FilterByEventsLimitByDays = @FilterByEventsLimitByDays
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents_NoPermissions_Count]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents_NoPermissions_Count] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents_NoPermissions_Count]
	@PortalId INT,
	@ModuleId INT,
	@UserId INT,
	@FilterOnlyFeatured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByCategoryId INT = NULL,
	@FilterByDnnUserId INT = NULL,
	@FilterByDnnGroupId INT = NULL,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@CategoryFilterType TINYINT = 0,
	@HideUnlocalizedItems BIT = 0,
	@FilterByEventsLimitByDays INT = NULL,
	@RestrictionByDateRange SMALLINT = NULL,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalId INT
	,@ModuleId INT
	,@UserId INT
	,@FilterByCategoryId INT
	,@FilterByDnnUserId INT
	,@FilterByDnnGroupId INT
	,@LocaleCode NVARCHAR(20)
	,@HideUnlocalizedItems BIT
	,@FilterByEventsLimitByDays INT
	,@RestrictionByDateRange SMALLINT
	,@IsPortalSharing BIT '

DECLARE @sqlcommand NVARCHAR(MAX);
SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); '

DECLARE @sqlSharingPortal VARCHAR(300);
DECLARE @sqlSharingPortalAll VARCHAR(300);

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

DECLARE @sqlFilterCategories NVARCHAR(4000);

IF @FilterByCategoryId IS NOT NULL
BEGIN
	SET @sqlFilterCategories = N'
	SELECT ArticleID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	WHERE c.ArticleID = na.ArticleID AND c.CategoryID = @FilterByCategoryId ';
END
ELSE IF @CategoryFilterType = 1
BEGIN
	SET @sqlFilterCategories = N'
	SELECT ArticleID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	WHERE c.ArticleID = na.ArticleID
		AND EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci
			WHERE mci.ModuleID = @ModuleId AND c.CategoryID = mci.CategoryID
		) ';
END
ELSE IF @CategoryFilterType = 2
BEGIN
SET @sqlFilterCategories = N'
	SELECT ArticleID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	WHERE c.ArticleID = na.ArticleID
		AND EXISTS (
			SELECT [CategoryID]
			FROM #FilterCategories AS f
			WHERE c.CategoryID = f.CategoryID
		) '
END

IF @FilterByEventsLimitByDays IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	DECLARE @EventsStartDateLimit DATETIME;
	SET @EventsStartDateLimit = (SELECT DATEADD(dd,DATEDIFF(dd,@FilterByEventsLimitByDays,GETUTCDATE()),0)); '

IF @RestrictionByDateRange IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	DECLARE @PublishDateLimit DATETIME;
	SET @PublishDateLimit = (SELECT DATEADD(dd,DATEDIFF(dd,@RestrictionByDateRange,GETUTCDATE()),0)); '

IF @CategoryFilterType = 2
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #FilterCategories (CategoryID INT NOT NULL PRIMARY KEY);
	;WITH hierarchy AS(
			SELECT cl.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE EXISTS (
				SELECT [CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
				WHERE ci.ModuleID = @ModuleId
					AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
			)
			AND cl.' + @sqlSharingPortalAll + '
			UNION ALL
			SELECT cl.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
		)
		INSERT INTO #FilterCategories
		SELECT DISTINCT CategoryID
		FROM hierarchy; '

SET @sqlcommand = @sqlcommand + N'
SELECT COUNT(na.ArticleID)
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON na.ArticleID = ned.ArticleID
LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
IF @FilterByEventsLimitByDays IS NULL
	SET @sqlcommand = @sqlcommand + N' (
		nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (
			SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner
			WHERE nerdInner.ArticleID = ned.ArticleID
				AND nerdInner.StartDateTime > @CurrentDate
			ORDER BY nerdInner.StartDateTime
			)
		) '
ELSE
	SET @sqlcommand = @sqlcommand + N'(
		(nerd.StartDateTime <= @CurrentDate
			AND (nerd.StartDateTime >= @EventsStartDateLimit
					OR (nerd.StartDateTime < @FilterByEventsLimitByDays AND nerd.EndDateTime >= @EventsStartDateLimit)
			)
		)
			OR (nerd.RecurringID IN (
				SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd
				WHERE erd.ArticleID = ned.ArticleID
					AND erd.StartDateTime > @CurrentDate
				ORDER BY erd.StartDateTime
				)
			)
		) '

SET @sqlcommand = @sqlcommand + N'
WHERE ' + @sqlSharingPortal + N'
	AND na.EventArticle = 1
	AND na.Approved = 1
	AND na.Active = 1
	AND @CurrentDate BETWEEN na.[PublishDate] AND na.[ExpireDate] '

IF @RestrictionByDateRange IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' AND na.PublishDate >= @PublishDateLimit '

IF @FilterByCategoryId IS NOT NULL OR @CategoryFilterType > 0
	SET @sqlcommand = @sqlcommand + N'
	AND EXISTS ( ' + @sqlFilterCategories + ' ) '

SET @sqlcommand = @sqlcommand + N'
	AND EXISTS (
		SELECT ne.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
		WHERE ne.ArticleID = na.ArticleID
			AND ne.Recurring = 0 '
		IF @FilterByEventsLimitByDays IS NOT NULL
			SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @EventsStartDateLimit OR (ne.StartDate < @EventsStartDateLimit AND ne.EndDate >= @EventsStartDateLimit)) '

		SET @sqlcommand = @sqlcommand + N'
		UNION ALL
		SELECT ne.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
		WHERE ne.ArticleID = na.ArticleID
			AND ne.Recurring = 1
			AND EXISTS (
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
				WHERE nerd.ArticleID = ne.ArticleID
					AND '
				IF @FilterByEventsLimitByDays IS NULL
					SET @sqlcommand = @sqlcommand + N' (
						nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (
							SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID
							FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner
							WHERE nerdInner.ArticleID = ned.ArticleID
								AND nerdInner.StartDateTime > @CurrentDate
							ORDER BY nerdInner.StartDateTime
							)
						) '
				ELSE
					SET @sqlcommand = @sqlcommand + N'(
						(nerd.StartDateTime <= @CurrentDate
							AND (nerd.StartDateTime >= @EventsStartDateLimit OR (nerd.StartDateTime < @FilterByEventsLimitByDays AND nerd.EndDateTime >= @EventsStartDateLimit))
						)
						OR (nerd.RecurringID IN (
								SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID
								FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd
								WHERE erd.ArticleID = ned.ArticleID
									AND erd.StartDateTime > @CurrentDate
								ORDER BY erd.StartDateTime
								)
							)
					) '

	SET @sqlcommand = @sqlcommand + N'
			)
	) '

IF @HideUnlocalizedItems = 1
	SET @sqlcommand = @sqlcommand + N'
	AND EXISTS (
		SELECT ArticleID
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl
		WHERE ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
	) '

IF @FilterByDnnGroupId IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	AND EXISTS (
		SELECT nss.ArticleID
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = nss.ArticleID
		WHERE nss.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
	) '
ELSE IF @FilterByDnnUserId IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	AND EXISTS (
		SELECT nss.ArticleID
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
		WHERE nss.ArticleID = na.ArticleID
	) '

IF @LocaleCode IS NULL
	SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
IF @FilterOnlyFeatured = 1
	SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '

IF @FilterByDnnUserId IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
ELSE IF @ShowAllAuthors = 0
	SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (
		SELECT [UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
		WHERE mai.ModuleID = @ModuleId
		UNION
		SELECT [UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
		WHERE mgi.ModuleID = @ModuleId
	) '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalId = @PortalId
	,@ModuleId = @ModuleId
	,@UserId = @UserId
	,@FilterByCategoryId = @FilterByCategoryId
	,@FilterByDnnUserId = @FilterByDnnUserId
	,@FilterByDnnGroupId = @FilterByDnnGroupId
	,@LocaleCode = @LocaleCode
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@FilterByEventsLimitByDays = @FilterByEventsLimitByDays
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsComments]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsComments] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsComments]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@ItemsFrom INT = 1,
	@ItemsTo INT = 5,
	@DateRangeType TINYINT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 0,
	@FillterSettingsSource BIT = 0,
	@StartDate DATETIME = NULL,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange SMALLINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	@FilterByCustomFields BIT = 0,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1,
	@CommentsSelectType TINYINT = 0 -- 0 all comments, 1 one per article
--WITH RECOMPILE
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRangeType TINYINT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@StartDate DATETIME
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange SMALLINT
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT
	,@CommentsSelectType TINYINT';

DECLARE @sqlCommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlCommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT NOT NULL PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT NOT NULL PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

SET @TopInnerFilter = N' WHERE ' + @sqlSharingPortal;

	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmd.GoogleMapID = gmc.GoogleMapID AND gmd.PointData <> N''''
			WHERE gmc.ArticleID = na.ArticleID
		) '
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			WHERE gmc.ArticleID = na.ArticleID
		) '

	IF @HideUnlocalizedItems = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl
			WHERE ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
		) '

	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = nss.ArticleID
			WHERE nss.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		) '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE nss.ArticleID = na.ArticleID
		) '

	IF @FilterByTags = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
			INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE ti.ArticleID = na.ArticleID
		) '
	
	IF @FilterByArticles = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM @FilterArticlesTable AS fba
			WHERE fba.ArticleID = na.ArticleID
		) '

	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL 
			SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE
		SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '

	IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
	
	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 '
		SET @TopInnerFilter = @TopInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
	END

SET @MainContentFilter = N'
;WITH AllComments AS( '
	IF @CommentsSelectType = 1
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT irs.[CommentID],irs.[DateAdded]
		FROM (
			SELECT c.[CommentID],c.[DateAdded], ROW_NUMBER() OVER(PARTITION BY c.[ArticleID] ORDER BY c.DateAdded DESC) AS rn
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS c
			WHERE c.Approved = 1
				AND c.' + @sqlSharingPortalAll + '
				AND c.ArticleID IN ( '
	ELSE
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT c.[CommentID],c.[DateAdded]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS c
		WHERE c.Approved = 1
			AND c.' + @sqlSharingPortalAll + '
			AND c.ArticleID IN ( '

	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.ArticleID IN ( ';
	END
	 
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N' SELECT ArticleID FROM ('
	 
	SET @MainContentFilter = @MainContentFilter + N'
		SELECT na.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON na.ArticleID = ned.ArticleID ' -- normal and recurring event normal permissions
			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
			AND EXISTS (
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
			)
			AND EXISTS (
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
				WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
				IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
					ELSE
						SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
				END
				ELSE IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

			SET @MainContentFilter = @MainContentFilter + N'
				UNION ALL
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
				WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					AND EXISTS (
						SELECT ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
						WHERE nerd.ArticleID = ne.ArticleID '
						IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						AND ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
								ELSE
									SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
							END
						ELSE IF @DateRangeType = 0
							SET @MainContentFilter = @MainContentFilter + N' AND (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
				
					SET @MainContentFilter = @MainContentFilter + N'
					)
			) '

		IF @QueryPermissionsPerArticles = 1
			SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

	IF @QueryPermissionsPerArticles = 1
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		UNION ALL
		SELECT na.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na ' -- normal and recurring events user/role permissions
			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
			AND EXISTS (
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
			)
			AND EXISTS (
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = na.ArticleID '
				IF @CanEditAllContent = 0
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
					ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
				END
				IF @UserID <> -1
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
					WHERE arp.ArticleID = na.ArticleID '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					END
				END
			
			SET @MainContentFilter = @MainContentFilter + N'
			)
			AND EXISTS (
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
				WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
				IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
					ELSE
						SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
				END
				ELSE IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

			SET @MainContentFilter = @MainContentFilter + N'
				UNION ALL
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
				WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					AND EXISTS (
						SELECT ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
						WHERE nerd.ArticleID = ne.ArticleID '
						IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						AND ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
								ELSE
									SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
							END
						ELSE IF @DateRangeType = 0
							SET @MainContentFilter = @MainContentFilter + N' AND (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					
					SET @MainContentFilter = @MainContentFilter + N'
					)
			) '
		END

	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	END
		
	IF @CommentsSelectType = 1
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS irs
		WHERE irs.rn = 1 '
	ELSE
		SET @MainContentFilter = @MainContentFilter + N' ) ';

SET @MainContentFilter = @MainContentFilter + N'
) '

SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(CommentID) FROM AllComments '

SET @sqlcommand = @sqlcommand + @MainContentFilter

SET @sqlcommand = @sqlcommand + N'
SELECT c.[CommentID]
	,c.[UserID]
	,c.[AnonymName]
	,c.[Comment]
	,c.[DateAdded]
	,c.[GoodVotes]
	,c.[BadVotes]
	,c.[Approved]
	,c.[CommentersEmail]
	,c.[ReplayCommentID]
	,c.[ReplayLevel]
	,c.[CommenterIP]
	,c.[PortalID] AS CommentPortalId
	,n.[ArticleId]
	,n.[PortalId] AS ArticlePortalId '
IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
		,CASE WHEN nl.ArticleID IS NULL THEN n.[Title] ELSE nl.[Title] END AS Title
		,CASE WHEN nl.ArticleID IS NULL THEN n.[TitleLink] ELSE nl.[clTitleLink] END AS TitleLink
		,CASE WHEN nl.ArticleID IS NULL THEN n.[DetailType] ELSE nl.[DetailType] END AS DetailType
		,CASE WHEN nl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE nl.[DetailTypeData] END AS DetailTypeData '
ELSE
	SET @sqlcommand = @sqlcommand + N'
		,n.[Title]
		,n.[TitleLink]
		,n.[DetailType]
		,n.[DetailTypeData] '

SET @sqlcommand = @sqlcommand + N'
	,@AllContentCount AS ContentCount
FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS c
INNER JOIN  (
	SELECT [CommentID]
	FROM (
		SELECT ac.[CommentID], ROW_NUMBER() OVER(ORDER BY ac.[DateAdded] DESC) AS rn
		FROM AllComments AS ac
	)
	AS T1 WHERE rn BETWEEN @ItemsFrom AND @ItemsTo
) AS r ON r.CommentID = c.CommentID
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON c.ArticleID = n.ArticleID '
IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS nl ON nl.ArticleID = n.ArticleID AND nl.LocaleCode = @LocaleCode'

SET @sqlcommand = @sqlcommand + N'
ORDER BY c.[DateAdded] DESC '

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRangeType = @DateRangeType
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@StartDate = @StartDate
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
	,@CommentsSelectType = @CommentsSelectType
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@CurrentArticleID INT,
	@RecurringID INT = NULL,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@DateRangeType TINYINT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,

	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 0,
	@FillterSettingsSource BIT = 0,
	@StartDate DATETIME = NULL,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange SMALLINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@FilterByCustomFields BIT = 0,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@CurrentArticleID INT
	,@RecurringID INT
	,@DateRangeType TINYINT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@StartDate DATETIME
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange SMALLINT
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT';

DECLARE @sqlCommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlCommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END
IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

SET @sqlcommand = @sqlcommand + N' DECLARE @CurrentArticlePosition INT ';

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END
IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN
	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(630)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10) NOT NULL,
		CFWhereRoule NVARCHAR(MAX) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID)
				FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme
				WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);

		SET @CFFilterQuery = N'SELECT CFFilteredArticles.ArticleID FROM (';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			DECLARE @FilterValueMulti NVARCHAR(MAX);
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValueMulti = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N'AND'
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE ' + @FilterValueMulti + '
) AS OnlyWithGoogleMaps
WHERE Recency >= ' + STR(@ElementsCount) + ' '
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueMulti + ' '
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			DECLARE @FilterValueSimple NVARCHAR(630);
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @FilterValueSimple = CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow;

				SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueSimple + ' '

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END

		END

		SET @CFFilterQuery = @CFFilterQuery + N') AS CFFilteredArticles'
	END

	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

DECLARE @MainFilter NVARCHAR(MAX);

SET @MainFilter = N'
;WITH MainFilters AS(
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

	IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	IF @FilterByDNNGroupID <> 0 
		SET @MainFilter = @MainFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDNNUserID <> 0
		SET @MainFilter = @MainFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

	IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
	IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
	SET @MainFilter = @MainFilter + N'
	WHERE ' + @sqlSharingPortal + N'
		AND na.EventArticle = 1 '
		IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
		BEGIN
			IF @RestrictionByDateRange IS NOT NULL
				SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
			ELSE
				SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '		
		END
		ELSE IF @RestrictionByDateRange IS NOT NULL
			SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		ELSE
			SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
		IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
		IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
		IF @FilterByDNNUserID <> 0
			SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
		ELSE IF @sqlAuthors IS NOT NULL
			SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

	SET @MainFilter = @MainFilter + N'
),
AllContent AS('

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @MainFilter = @MainFilter + N'
	SELECT ArticleID,RecurringID, ROW_NUMBER() OVER (ORDER BY '
	IF @FirstOrderBy = 'Featured DESC'
		SET @MainFilter = @MainFilter + N'Featured DESC, '
		
	IF @OrderByDirection = 'ASC'
		SET @MainFilter = @MainFilter + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	
	SET @MainFilter = @MainFilter + @CleanOrderColumnWithDirection + N', ArticleID) AS ArticlePosition '
END
ELSE
BEGIN
	SET @MainFilter = @MainFilter + N'
	SELECT ArticleID,RecurringID, ROW_NUMBER() OVER (ORDER BY '
	IF @FirstOrderBy = 'Featured DESC' SET @MainFilter = @MainFilter + N'Featured DESC, '

	SET @MainFilter = @MainFilter + @OrderByColumnName + N' ' + @OrderByDirection + N', ArticleID) AS ArticlePosition '
END
	
	SET @MainFilter = @MainFilter + N'
	FROM (
		SELECT n.ArticleID,
			CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate,
			CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
			n.Title,n.NumberOfViews,n.RatingValue,n.DateAdded,n.PublishDate,n.ExpireDate,n.LastModified,n.NumberOfComments,n.Featured '
		
		IF @OrderByCustomFieldID IS NOT NULL
			SET @MainFilter = @MainFilter + N',fv.' + @OrderByColumnName
		
		SET @MainFilter = @MainFilter + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
		IF @DateRangeType = 2
			SET @MainFilter = @MainFilter + N'
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
		ELSE IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
				ELSE
					SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
			END
		ELSE IF @DateRangeType = 0
			SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
		ELSE
			SET @MainFilter = @MainFilter + N' 1 = 0'
		
		IF @OrderByCustomFieldID IS NOT NULL
		BEGIN
			SET @MainFilter = @MainFilter + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID'
		END
		
		SET @MainFilter = @MainFilter + N'
			WHERE n.ArticleID IN( '
		
		IF @FilterByCustomFields = 1
			SET @MainFilter = @MainFilter + N' SELECT ArticleID FROM ('
		
		SET @MainFilter = @MainFilter + N'
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
				WHERE na.ArticleID IN (SELECT ArticleID FROM MainFilters)
					AND ne.Recurring = 0 '

					IF @QueryPermissionsPerArticles = 1 SET @MainFilter = @MainFilter + N' AND na.HasPermissions = 0 '

					IF @QueryModulePermissions = 0
						SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 '
					ELSE IF @CanEditAllContent = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END

					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @MainFilter = @MainFilter + N'
				UNION ALL
				SELECT DISTINCT na.[ArticleID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
				IF @DateRangeType = 2
					SET @MainFilter = @MainFilter + N'
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
				ELSE IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
					ELSE
						SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
				END
				ELSE IF @DateRangeType = 0
					SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
				ELSE SET @MainFilter = @MainFilter + N' 1 = 0 '
				SET @MainFilter = @MainFilter + N'
				WHERE na.ArticleID IN (SELECT ArticleID FROM MainFilters)
					AND ne.Recurring = 1 '

					IF @QueryPermissionsPerArticles = 1 SET @MainFilter = @MainFilter + N' AND na.HasPermissions = 0 '

					IF @QueryModulePermissions = 0
						SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 '
					ELSE IF @CanEditAllContent = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END

				SET @MainFilter = @MainFilter + N'
			) AS HasPermissionsFalse '

			IF @QueryPermissionsPerArticles = 1
			BEGIN
				SET @MainFilter = @MainFilter + N'
				UNION ALL
				SELECT [ArticleID] FROM (
					SELECT [ArticleID] FROM (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
						WHERE na.HasPermissions = 1
							AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
							AND ne.Recurring = 0 '

						IF @QueryModulePermissions = 0
						BEGIN
							SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND aup.Show = 1 '
							IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
							ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
						END
						ELSE IF @CanEditAllContent = 0
						BEGIN
							SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 '
							IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
							IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
							ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
						END
						IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
							ELSE
								SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
						END
						ELSE IF @DateRangeType = 2
							SET @MainFilter = @MainFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
						SET @MainFilter = @MainFilter + N'
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0	
						WHERE na.HasPermissions = 1
							AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
							AND ne.Recurring = 0 '

						IF @QueryModulePermissions = 0
							SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)'
						ELSE IF @CanEditAllContent = 0
						BEGIN
							SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
							IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
						END
						IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
							ELSE
								SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
						END
						ELSE IF @DateRangeType = 2
							SET @MainFilter = @MainFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
						SET @MainFilter = @MainFilter + N'
					) AS NotRecurring
					UNION ALL
					SELECT [ArticleID] FROM (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @MainFilter = @MainFilter + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
						ELSE IF @DateRangeType = 0
							SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @MainFilter = @MainFilter + N' 1 = 0 '
						SET @MainFilter = @MainFilter + N'
						WHERE na.HasPermissions = 1
							AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
							AND ne.Recurring = 1 '

						IF @QueryModulePermissions = 0
						BEGIN
							SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND aup.Show = 1 '
							IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
							ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
						END
						ELSE IF @CanEditAllContent = 0
						BEGIN
							SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 '
							IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
							IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
							ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
						END
						SET @MainFilter = @MainFilter + N' 
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @MainFilter = @MainFilter + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
						ELSE IF @DateRangeType = 0
							SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @MainFilter = @MainFilter + N' 1 = 0 '
						SET @MainFilter = @MainFilter + N'
						WHERE na.HasPermissions = 1
							AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
							AND ne.Recurring = 1 '
						IF @QueryModulePermissions = 0
							SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)'
						ELSE IF @CanEditAllContent = 0
						BEGIN
							SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
							IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
						END
						SET @MainFilter = @MainFilter + N' 
					) AS Recurring
				) AS HasPermissionsTrue '
			END

			IF @FilterByCustomFields = 1
				SET @MainFilter = @MainFilter + N') AllBeforeFilters INTERSECT ' + @CFFilterQuery
		
		SET @MainFilter = @MainFilter + N'
		)
	) AS AllArticles
) ';

DECLARE @MainCondition NVARCHAR(500);
IF @RecurringID IS NULL
	SET @sqlcommand = @sqlcommand + @MainFilter +N' SELECT @CurrentArticlePosition = ArticlePosition FROM AllContent WHERE ArticleID = @CurrentArticleID; '
ELSE
	SET @sqlcommand = @sqlcommand + @MainFilter +N' SELECT @CurrentArticlePosition = ArticlePosition FROM AllContent WHERE ArticleID = @CurrentArticleID AND RecurringID = @RecurringID; '

SET @sqlcommand = @sqlcommand + ' ' + @MainFilter;

IF @LocaleCode IS NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	SELECT TOP (3) n.[ArticleID],n.[PortalID],apn.RecurringID,n.[Title],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN AllContent AS apn ON n.ArticleID = apn.ArticleID
	WHERE apn.ArticlePosition BETWEEN @CurrentArticlePosition - 1 AND @CurrentArticlePosition + 1
	ORDER BY apn.ArticlePosition '
END
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	SELECT TOP (3) n.[ArticleID],n.[PortalID],apn.RecurringID,
		CASE WHEN ncl.ArticleID IS NULL THEN n.[Title] ELSE ncl.[Title] END AS Title,
		CASE WHEN ncl.ArticleID IS NULL THEN n.[TitleLink] ELSE ncl.[clTitleLink] END AS TitleLink,
		n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN AllContent AS apn ON n.ArticleID = apn.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = apn.ArticleID AND ncl.LocaleCode = @LocaleCode
	WHERE apn.ArticlePosition BETWEEN @CurrentArticlePosition - 1 AND @CurrentArticlePosition + 1
	ORDER BY apn.ArticlePosition '
END

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@CurrentArticleID = @CurrentArticleID
	,@RecurringID = @RecurringID
	,@DateRangeType = @DateRangeType
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@StartDate = @StartDate
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetRelatedArticlesOverlap]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetRelatedArticlesOverlap] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetRelatedArticlesOverlap]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@ArticleID INT,
	@NumberOfItems INT = 5,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@CategoryFilterType TINYINT = 1,
	@HideUnlocalizedItems BIT = 0,
	@FilterRelatedArticlesBy TINYINT = 0
AS
SET NOCOUNT ON;
IF EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems]
WHERE ArticleID <> @ArticleID
	AND TagID IN (
		SELECT [TagID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems]
		WHERE ArticleID = @ArticleID
	)
)
BEGIN
	DECLARE @CurrentDate DATETIME;
	SET @CurrentDate = GETUTCDATE();

	DECLARE @UserInRoles TABLE (RoleID INT PRIMARY KEY);
	IF @UserID <> -1
		INSERT INTO @UserInRoles
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

	DECLARE @UserViewCategories TABLE (CategoryID INT PRIMARY KEY);
	DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT PRIMARY KEY);
	DECLARE @FiltredByCategories TABLE (CategoryID INT PRIMARY KEY);

	IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
		INSERT INTO @UserViewCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID;
	ELSE IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
			WHERE rpsc.PremissionSettingsID IN (SELECT PremissionSettingsID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE PortalID = @PortalID AND ModuleID IS NULL AND RoleID IS NULL);
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] = @ModuleID AND [RoleID] IS NULL);
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND RoleID IN (SELECT [RoleID] FROM @UserInRoles))
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] IS NULL)
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [ModuleID] = @ModuleID AND RoleID IN (SELECT [RoleID] FROM @UserInRoles))
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] = @ModuleID)
		END
	END

	IF @FilterRelatedArticlesBy = 1
	BEGIN
		IF @CategoryFilterType = 0 -- 0 All categories
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		BEGIN
			IF @FillterSettingsSource = 1 -- portal
			BEGIN
				INSERT INTO @UserViewCategoriesWithFilter 
				SELECT c.[CategoryID] FROM @UserViewCategories AS c
				WHERE c.[CategoryID] IN (SELECT pci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci WHERE pci.PortalID = @PortalID);		
				INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID;
			END
			ELSE -- module
			BEGIN
				INSERT INTO @UserViewCategoriesWithFilter 
				SELECT c.[CategoryID] FROM @UserViewCategories AS c
				WHERE c.[CategoryID] IN (SELECT mci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci WHERE mci.ModuleID = @ModuleID);		
				INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID;
			END
		END
		ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		BEGIN
			IF @FillterSettingsSource = 1 -- portal
			BEGIN
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO @UserViewCategoriesWithFilter SELECT CategoryID FROM @UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM @FiltredByCategories);		
			END
			ELSE -- module
			BEGIN
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;
				INSERT INTO @UserViewCategoriesWithFilter SELECT CategoryID FROM @UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM @FiltredByCategories);
			END
		END
	END
	ELSE IF @FilterRelatedArticlesBy = 2
	BEGIN
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] WHERE ArticleID = @ArticleID;
		
		INSERT INTO @UserViewCategoriesWithFilter
		SELECT c.[CategoryID] FROM @UserViewCategories AS c
		WHERE c.[CategoryID] IN (SELECT CategoryID FROM @FiltredByCategories);
		
	END
	ELSE
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END

	DECLARE @DateRangeType TINYINT;
	DECLARE @StartDate DATETIME;

	IF @LocaleCode IS NULL
		SELECT TOP (@NumberOfItems) *
		FROM (
			SELECT *, ROW_NUMBER() OVER (PARTITION BY [ArticleID] ORDER BY Recency DESC ) AS Rn
			FROM (
				SELECT  n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[PublishDate],n.[TitleLink],n.[AuthorAliasName],n.[DetailType],n.[DetailTypeData],n.[CFGroupeID],n.[EventArticle],
					CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
					CASE WHEN @CategoryFilterType = 0 THEN NULL
					ELSE
						CASE WHEN @FillterSettingsSource = 1 THEN
						 (SELECT TOP 1 CONVERT(varchar(10), clink.NewsModuleID) + ':' + CONVERT(varchar(10), tm.[TabID])
							FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
							INNER JOIN @UserViewCategories AS uvc ON c.CategoryID = uvc.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl ON c.CategoryID = cl.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryLink] AS clink ON clink.CategoryID = cl.CategoryID AND clink.SourcePortalID = @PortalID
							INNER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON clink.NewsModuleID = tm.ModuleID
							WHERE c.ArticleID = n.[ArticleID] AND cl.PortalID = @PortalID ORDER BY cl.Position)
						ELSE
						(SELECT TOP 1 CONVERT(varchar(10), clink.NewsModuleID) + ':' + CONVERT(varchar(10), tm.[TabID]) AS WhereToOpen
							FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
							INNER JOIN @UserViewCategories AS uvc ON c.CategoryID = uvc.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl ON c.CategoryID = cl.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS clink ON clink.CategoryID = cl.CategoryID AND clink.SourceModuleID = @ModuleID
							INNER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON clink.NewsModuleID = tm.ModuleID
							WHERE c.ArticleID = n.[ArticleID] AND cl.PortalID = @PortalID ORDER BY cl.Position)
						END
					END AS WhereToOpenLink,
					ROW_NUMBER() OVER (PARTITION BY n.[ArticleID] ORDER BY n.[ArticleID] DESC ) AS Recency
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON n.ArticleID = ti.ArticleID AND ti.TagID IN (SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @ArticleID)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND 1 = ( 
					CASE WHEN @DateRangeType = 2
					THEN
						CASE WHEN 
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
						THEN 1 ELSE 0 END
					ELSE
						CASE WHEN
							(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime))
						THEN 1 ELSE 0 END
					END )
				WHERE n.ArticleID IN(
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @UserViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID AND (ti.TagID IN (SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @ArticleID))		
					WHERE na.PortalID=@PortalID
						AND na.HasPermissions = 0
						AND na.HideDefaultLocale = 0
						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
						AND na.ArticleID <> @ArticleID
						AND (@UserCanApprove = 1 OR na.Approved = 1)
						AND (na.Active = 1 OR na.UserID = @UserID)
					UNION ALL
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @FiltredByCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID AND (ti.TagID IN (SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @ArticleID))
					WHERE na.PortalID=@PortalID
						AND na.HasPermissions = 1
						AND na.HideDefaultLocale = 0
						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
						AND na.ArticleID <> @ArticleID
						AND aup.Show = 1
						AND (@UserCanApprove = 1 OR na.Approved = 1)
						AND (na.Active = 1 OR na.UserID = @UserID)
						AND ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					UNION
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @FiltredByCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID AND (ti.TagID IN (SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @ArticleID))		
					WHERE na.PortalID=@PortalID
						AND na.HasPermissions = 1
						AND na.HideDefaultLocale = 0
						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
						AND na.ArticleID <> @ArticleID
						AND arp.Show = 1
						AND (@UserCanApprove = 1 OR na.Approved = 1)
						AND (na.Active = 1 OR na.UserID = @UserID)
						AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					)
			) AS overlap
		) AS overlapOrdered
		WHERE Rn = 1
		ORDER BY Recency DESC,PublishDate DESC;
	ELSE
		SELECT TOP (@NumberOfItems) *
		FROM (
			SELECT *, ROW_NUMBER() OVER (PARTITION BY [ArticleID] ORDER BY Recency DESC ) AS Rn
			FROM (
				SELECT n.[ArticleID],n.[PortalID],n.[UserID],
					CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title,
					CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle,
					CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary,
					CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article,
					n.[ArticleImage],n.[PublishDate],
					CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink,
					n.[AuthorAliasName],n.[DetailType],n.[DetailTypeData],n.[CFGroupeID],
					n.[EventArticle],
					CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
					CASE WHEN @CategoryFilterType = 0 THEN NULL
					ELSE
						CASE WHEN @FillterSettingsSource = 1 THEN
							(SELECT TOP 1 CONVERT(varchar(10), clink.NewsModuleID) + ':' + CONVERT(varchar(10), tm.[TabID])
							FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
							INNER JOIN @UserViewCategories AS uvc ON c.CategoryID = uvc.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl ON c.CategoryID = cl.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryLink] AS clink ON clink.CategoryID = cl.CategoryID AND clink.SourcePortalID = @PortalID
							INNER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON clink.NewsModuleID = tm.ModuleID
							WHERE c.ArticleID = n.[ArticleID] AND cl.PortalID = @PortalID ORDER BY cl.Position)
						ELSE
						(SELECT TOP 1 CONVERT(varchar(10), clink.NewsModuleID) + ':' + CONVERT(varchar(10), tm.[TabID]) AS WhereToOpen
							FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
							INNER JOIN @UserViewCategories AS uvc ON c.CategoryID = uvc.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl ON c.CategoryID = cl.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS clink ON clink.CategoryID = cl.CategoryID AND clink.SourceModuleID = @ModuleID
							INNER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON clink.NewsModuleID = tm.ModuleID
							WHERE c.ArticleID = n.[ArticleID] AND cl.PortalID = @PortalID ORDER BY cl.Position)
						END
					END AS WhereToOpenLink,
					ROW_NUMBER() OVER (PARTITION BY n.[ArticleID] ORDER BY n.[ArticleID] DESC ) AS Recency
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON n.ArticleID = ti.ArticleID AND ti.TagID IN (SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @ArticleID)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND 1 = ( 
					CASE WHEN @DateRangeType = 2
					THEN
						CASE WHEN 
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
						THEN 1 ELSE 0 END
					ELSE
						CASE WHEN
							(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime))
						THEN 1 ELSE 0 END
					END )
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON cl.ArticleID = n.ArticleID AND LocaleCode = @LocaleCode 
				WHERE n.ArticleID IN(
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @UserViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID AND (ti.TagID IN (SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @ArticleID))		
					WHERE na.PortalID=@PortalID
						AND na.HasPermissions = 0
						AND na.HideDefaultLocale = 0
						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
						AND na.ArticleID <> @ArticleID
						AND (@UserCanApprove = 1 OR na.Approved = 1)
						AND (na.Active = 1 OR na.UserID = @UserID)
					UNION ALL
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @FiltredByCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID AND (ti.TagID IN (SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @ArticleID))
					WHERE na.PortalID=@PortalID
						AND na.HasPermissions = 1
						AND na.HideDefaultLocale = 0
						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
						AND na.ArticleID <> @ArticleID
						AND aup.Show = 1
						AND (@UserCanApprove = 1 OR na.Approved = 1)
						AND (na.Active = 1 OR na.UserID = @UserID)
						AND ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					UNION
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @FiltredByCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID AND (ti.TagID IN (SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @ArticleID))
					WHERE na.PortalID=@PortalID
						AND na.HasPermissions = 1
						AND na.HideDefaultLocale = 0
						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
						AND na.ArticleID <> @ArticleID
						AND arp.Show = 1
						AND (@UserCanApprove = 1 OR na.Approved = 1)
						AND (na.Active = 1 OR na.UserID = @UserID)
						AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					)
		) AS overlap
	) AS overlapOrdered
	WHERE Rn = 1
	ORDER BY Recency DESC,PublishDate DESC;
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories]
	@PortalID INT,
	@UserID INT,
	@MenuModuleID INT,
	@DefaultTabID INT,
	@DefaultModuleID INT,
	@AdminOrSuperUser BIT  = 0,
	@CountItems BIT = 0,
	@CountArticles BIT = NULL,
	@CountEvents BIT = NULL,
	@CountEventsLimitByDays INT = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDNNUserID INT = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID INT = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@LocaleCode NVARCHAR(20) = NULL,	
	@ShowAllAuthors BIT = 1, -- filter postavka menija
	@CategoryFilterType TINYINT = 0, --0 All categories, 1 - SELECTion, 2 - AutoAdd
	@HideUnlocalizedItems BIT = 0,
	@PermissionSettingsSource TINYINT = 0, -- None, 1 - portal, 2 - module
	@PermissionsModuleID INT = 0, -- NewsModuleID
	@UserCanApprove BIT = 0,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(2000);
DECLARE @sqlSharingPortal NVARCHAR(300);

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY);

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @StartDate DATETIME;
IF @CountEventsLimitByDays IS NOT NULL
BEGIN
	SET @StartDate = DATEADD(DD, -@CountEventsLimitByDays, @CurrentDate);
	SET @CountEventsLimitByDays = 1;
END

DECLARE @SettingsSource BIT;
SET @SettingsSource = 1; '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = n.PortalID) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' n.PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	INSERT INTO #UserInRoles
	EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsUserRoles] @PortalID,@UserID,@IsPortalSharing;
END

INSERT INTO #ViewCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsViewCategories] @PortalID,@PermissionsModuleID,@UserID,@AdminOrSuperUser,@PermissionSettingsSource,@IsPortalSharing;
INSERT INTO #ViewCategoriesWithFilter
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsViewCategoriesWithFilter] @PortalID,@MenuModuleID,@IsPortalSharing,@CategoryFilterType;

SET @paramList = N'
	@PortalID INT,
	@UserID INT,
	@MenuModuleID INT,
	@DefaultTabID INT,
    @DefaultModuleID INT,
	@AdminOrSuperUser BIT,
	@CountItems BIT,
	@CountArticles BIT,
	@CountEvents BIT,
	@CountEventsLimitByDays INT,
	@IsSocialInstance BIT,
	@FilterByDNNUserID INT,
	@FilterByDNNGroupID INT,
	@LocaleCode NVARCHAR(20),
	@ShowAllAuthors BIT,
	@CategoryFilterType TINYINT,
	@HideUnlocalizedItems BIT,
	@PermissionSettingsSource TINYINT,
	@PermissionsModuleID INT,
	@UserCanApprove BIT,
	@IsPortalSharing BIT'

IF @IsSocialInstance = 0 AND @ShowAllAuthors = 0
SET @sqlcommand = @sqlcommand + N'
DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);

INSERT INTO @TempAuthorsIDList
SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @MenuModuleID
UNION 
SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @MenuModuleID '

IF @CountItems = 1 AND @CountArticles = 0 AND @CountEvents = 0 
	SET @CountItems = 0

DECLARE @sqlCategories NVARCHAR(2000);

IF @LocaleCode IS NULL
BEGIN
	IF @IsPortalSharing = 0
		SET @sqlCategories = N'
		SELECT c.[CategoryID],c.[PortalID],c.[CategoryName],c.[Position],c.[ParentCategory],c.[Level],c.[CategoryURL],c.[CategoryImage],c.[CategoryText],c.[Color],
		CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID
		WHERE c.PortalID = @PortalID '
	ELSE		
		SET @sqlCategories = N'
		SELECT c.[CategoryID],c.[PortalID],c.[CategoryName],c.[Position],c.[ParentCategory],c.[Level],c.[CategoryURL],c.[CategoryImage],c.[CategoryText],c.[Color],
		CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #SharingPortals AS sp ON sp.PortalID = c.PortalID
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID '
END
ELSE
BEGIN
	IF @IsPortalSharing = 0
		SET @sqlCategories = N'
		SELECT c.[CategoryID],c.[PortalID],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS CategoryName,
			c.[Position],c.[ParentCategory],c.[Level],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryURL] ELSE cl.[CategoryURL] END AS CategoryURL,c.[CategoryImage],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryText] ELSE cl.[CategoryText] END AS CategoryText,c.[Color],
			CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
		WHERE c.PortalID = @PortalID '
	ELSE
	SET @sqlCategories = N'
		SELECT c.[CategoryID],c.[PortalID],
			CASE WHEN cl.[Title] IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS CategoryName,
			c.[Position],c.[ParentCategory],c.[Level],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryURL] ELSE cl.[CategoryURL] END AS CategoryURL,c.[CategoryImage],
			CASE WHEN cl.[CategoryText] IS NULL THEN c.[CategoryText] ELSE cl.[CategoryText] END AS CategoryText,c.[Color],
			CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #SharingPortals AS sp ON sp.PortalID = c.PortalID
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode '
END

IF @CountItems = 0
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	SELECT c.[CategoryID],c.[PortalID],c.[CategoryName],c.[Position],c.[ParentCategory],c.[Level],c.[CategoryURL],c.[CategoryImage],c.[CategoryText],c.Show,0 AS ItemsCount,
		CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
		CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM ( ' + @sqlCategories + ' ) AS c
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl ON c.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID '

	IF @IsPortalSharing = 0
		SET @sqlcommand = @sqlcommand + N' ORDER BY Position; '
	ELSE
		SET @sqlcommand = @sqlcommand + N' ORDER BY PortalID, Position; '
END
ELSE
BEGIN
	IF @CountArticles = 1 AND @CountEvents = 0 -- only articles
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		SELECT Categories.*,
		CASE Categories.Show
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE @AdminOrSuperUser
				WHEN 1 THEN(
					SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID'
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
						
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					
					SET @sqlcommand = @sqlcommand + N' 
					WHERE ' + @sqlSharingPortal + N' 
						AND n.EventArticle = 0
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
						IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
				SET @sqlcommand = @sqlcommand + N'
				)
				WHEN 0 THEN(
					SELECT ((
						SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID'
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
						
							IF @FilterByDNNGroupID <> 0 
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							ELSE IF @FilterByDNNUserID <> 0
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						
						SET @sqlcommand = @sqlcommand + N' 
						WHERE ' + @sqlSharingPortal + N' 
							AND n.HasPermissions = 0
							AND n.EventArticle = 0
							AND (n.Active = 1 OR n.UserID = @UserID)
							AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
							IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
							IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
						SET @sqlcommand = @sqlcommand + N'
						)+(
						SELECT COUNT([ArticleID]) FROM (
							SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Categories.CategoryID'
								IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
								
								IF @FilterByDNNGroupID <> 0 
									SET @sqlcommand = @sqlcommand + N'
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
								ELSE IF @FilterByDNNUserID <> 0
									SET @sqlcommand = @sqlcommand + N'
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							
							SET @sqlcommand = @sqlcommand + N' 
							WHERE ' + @sqlSharingPortal + N' 
								AND n.HasPermissions = 1
								AND n.EventArticle = 0
								AND (n.Active = 1 OR n.UserID = @UserID)
			 					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
								IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
								IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
								IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
								ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
								IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
								ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
							SET @sqlcommand = @sqlcommand + N'
							UNION
							SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Categories.CategoryID'
								IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
							
								IF @FilterByDNNGroupID <> 0 
									SET @sqlcommand = @sqlcommand + N'
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
								ELSE IF @FilterByDNNUserID <> 0
									SET @sqlcommand = @sqlcommand + N'
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							
							SET @sqlcommand = @sqlcommand + N' 
							WHERE ' + @sqlSharingPortal + N' 
								AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
								AND n.HasPermissions = 1
								AND n.EventArticle = 0
								AND (n.Active = 1 OR n.UserID = @UserID)
								AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
								IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
								IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
								IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
								ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
							SET @sqlcommand = @sqlcommand + N'
						) AS UserAndRolePermissions
					))
				)
			END
		END AS ItemsCount
		FROM (
			SELECT c.*,
				CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
				CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
			FROM ( ' + @sqlCategories + ' ) AS c
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl ON c.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID
		) AS Categories '
		IF @IsPortalSharing = 0
			SET @sqlcommand = @sqlcommand + N' ORDER BY Position; '
		ELSE
			SET @sqlcommand = @sqlcommand + N' ORDER BY PortalID, Position; '
	END
	ELSE IF @CountEvents = 1 AND @CountArticles = 0 -- only events
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		SELECT Categories.*,
		CASE Categories.Show
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE @AdminOrSuperUser
				WHEN 1 THEN(
				SELECT ((
					SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
						
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						
						SET @sqlcommand = @sqlcommand + N' 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 0
					WHERE ' + @sqlSharingPortal + N'
						AND n.EventArticle = 1
						AND ne.Recurring = 0
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
						IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
						IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
						SET @sqlcommand = @sqlcommand + N'
					)+(
					SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
						
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						
						SET @sqlcommand = @sqlcommand + N' 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = '
						IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
						SET @sqlcommand = @sqlcommand + N' 
							CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
									THEN 1
									ELSE 0
								END '
						ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
						SET @sqlcommand = @sqlcommand + N' 
							CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
								THEN 1
								ELSE 0
							END '
					SET @sqlcommand = @sqlcommand + N' 
					WHERE ' + @sqlSharingPortal + N' 
						AND n.EventArticle = 1
						AND ne.Recurring = 1
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
						IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
						SET @sqlcommand = @sqlcommand + N'
					))
				)
				WHEN 0 THEN(
					SELECT ((
						SELECT COUNT(n.[ArticleID]) AS cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
							
							IF @FilterByDNNGroupID <> 0 
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							ELSE IF @FilterByDNNUserID <> 0
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							
							SET @sqlcommand = @sqlcommand + N' 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 0
						WHERE ' + @sqlSharingPortal + N' 
							AND n.HasPermissions = 0
							AND n.EventArticle = 1
							AND ne.Recurring = 0
							AND (n.Active = 1 OR n.UserID = @UserID)
							AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
							IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
							IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
							IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
							SET @sqlcommand = @sqlcommand + N'
						)+(
						SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
							
							IF @FilterByDNNGroupID <> 0 
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							ELSE IF @FilterByDNNUserID <> 0
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							
							SET @sqlcommand = @sqlcommand + N' 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = '
							IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
							SET @sqlcommand = @sqlcommand + N' 
							CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
									THEN 1
									ELSE 0
								END '
							ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
								SET @sqlcommand = @sqlcommand + N' 
								CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
									THEN 1
									ELSE 0
								END '
						SET @sqlcommand = @sqlcommand + N' 
						WHERE ' + @sqlSharingPortal + N' 
							AND n.HasPermissions = 0
							AND n.EventArticle = 1
							AND ne.Recurring = 1
							AND (n.Active = 1 OR n.UserID = @UserID)
							AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
							IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
							IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
							SET @sqlcommand = @sqlcommand + N'
						)+(					
						SELECT COUNT(ArticleID) FROM (			
							SELECT ArticleID FROM (
								SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Categories.CategoryID '
									IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
									
									IF @FilterByDNNGroupID <> 0 
										SET @sqlcommand = @sqlcommand + N'
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
									ELSE IF @FilterByDNNUserID <> 0
										SET @sqlcommand = @sqlcommand + N'
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
									
									SET @sqlcommand = @sqlcommand + N' 
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 0
								WHERE ' + @sqlSharingPortal + N' 
									AND n.HasPermissions = 1
									AND n.EventArticle = 1
									AND ne.Recurring = 0
									AND (n.Active = 1 OR n.UserID = @UserID)
			 						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
									IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
									IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
									IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
									IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
									ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
									IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
									ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
									SET @sqlcommand = @sqlcommand + N'
								UNION ALL
								SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Categories.CategoryID '
									IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
									
									IF @FilterByDNNGroupID <> 0 
										SET @sqlcommand = @sqlcommand + N'
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
									ELSE IF @FilterByDNNUserID <> 0
										SET @sqlcommand = @sqlcommand + N'
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
									
									SET @sqlcommand = @sqlcommand + N' 
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 1
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = '
									IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
									SET @sqlcommand = @sqlcommand + N' 
										CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
											 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
												THEN 1
												ELSE 0
										END '
									ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
										SET @sqlcommand = @sqlcommand + N' 
										CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
											THEN 1
											ELSE 0
										END '
									SET @sqlcommand = @sqlcommand + N' 
								WHERE ' + @sqlSharingPortal + N' 
									AND n.HasPermissions = 1
									AND n.EventArticle = 1
									AND ne.Recurring = 1
									AND (n.Active = 1 OR n.UserID = @UserID)
			 						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
									IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
									IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
									IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
									ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
									IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
									ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
									SET @sqlcommand = @sqlcommand + N'		
							) AS PermissionsByUser
							UNION
							SELECT ArticleID FROM (
								SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Categories.CategoryID '
									IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
									
									IF @FilterByDNNGroupID <> 0 
										SET @sqlcommand = @sqlcommand + N'
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
									ELSE IF @FilterByDNNUserID <> 0
										SET @sqlcommand = @sqlcommand + N'
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
									
									SET @sqlcommand = @sqlcommand + N' 
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 0
								WHERE ' + @sqlSharingPortal + N' 
									AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
									AND n.HasPermissions = 1
									AND n.EventArticle = 1
									AND ne.Recurring = 0
									AND (n.Active = 1 OR n.UserID = @UserID)
									AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
									IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
									IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
									IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
									IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
									ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
									SET @sqlcommand = @sqlcommand + N'
								UNION ALL
								SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Categories.CategoryID '
									IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
									
									IF @FilterByDNNGroupID <> 0 
										SET @sqlcommand = @sqlcommand + N'
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
									ELSE IF @FilterByDNNUserID <> 0
										SET @sqlcommand = @sqlcommand + N'
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
									
									SET @sqlcommand = @sqlcommand + N' 
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 1
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = '
									IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
									SET @sqlcommand = @sqlcommand + N' 
										CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
											 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
												THEN 1
												ELSE 0
											END '
									ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
										SET @sqlcommand = @sqlcommand + N' 
										CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
											THEN 1
											ELSE 0
										END '
								SET @sqlcommand = @sqlcommand + N' 
								WHERE ' + @sqlSharingPortal + N' 
									AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
									AND n.HasPermissions = 1
									AND n.EventArticle = 1
									AND ne.Recurring = 1
									AND (n.Active = 1 OR n.UserID = @UserID)
									AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
									IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
									IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
									IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
									ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
									SET @sqlcommand = @sqlcommand + N'		
							) AS PermissionsByRoles
						) AS PermissionsByUserAndRole
						)
					)
				)
			END		
		END AS ItemsCount
		FROM (
			SELECT	c.*,
				CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
				CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
			FROM ( ' + @sqlCategories + ' ) AS c
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl ON c.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID
		) AS Categories '
		IF @IsPortalSharing = 0
			SET @sqlcommand = @sqlcommand + N' ORDER BY Position; '
		ELSE
			SET @sqlcommand = @sqlcommand + N' ORDER BY PortalID, Position; '
	END
	ELSE -- articles and events
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		SELECT Categories.*,
		CASE Categories.Show
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE @AdminOrSuperUser
				WHEN 1 THEN(
				SELECT ((
					SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
						
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						
					SET @sqlcommand = @sqlcommand + N' 
					WHERE ' + @sqlSharingPortal + N' 
						AND n.EventArticle = 0
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
						IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
						SET @sqlcommand = @sqlcommand + N'
					)+(
					SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
						
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						
						SET @sqlcommand = @sqlcommand + N' 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 0
					WHERE ' + @sqlSharingPortal + N' 
						AND n.EventArticle = 1
						AND ne.Recurring = 0
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
						IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
						IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
						SET @sqlcommand = @sqlcommand + N'	
					)+(
					SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
						
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						
						SET @sqlcommand = @sqlcommand + N' 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = '
						IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
						SET @sqlcommand = @sqlcommand + N' 
							CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
									THEN 1
									ELSE 0
								END '
						ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
							SET @sqlcommand = @sqlcommand + N' 
							CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
								THEN 1
								ELSE 0
							END '
					SET @sqlcommand = @sqlcommand + N' 
					WHERE ' + @sqlSharingPortal + N' 
						AND n.EventArticle = 1
						AND ne.Recurring = 1
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
						IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
						SET @sqlcommand = @sqlcommand + N'	
					))
				)
				WHEN 0 THEN(
					SELECT ((
						SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
							
							IF @FilterByDNNGroupID <> 0 
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							ELSE IF @FilterByDNNUserID <> 0
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							
						SET @sqlcommand = @sqlcommand + N' 
						WHERE ' + @sqlSharingPortal + N' 
							AND n.HasPermissions = 0
							AND n.EventArticle = 0 
							AND (n.Active = 1 OR n.UserID = @UserID)
							AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
							IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
							IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
							SET @sqlcommand = @sqlcommand + N'	
						)+(
						SELECT COUNT(n.[ArticleID]) AS cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
							
							IF @FilterByDNNGroupID <> 0 
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							ELSE IF @FilterByDNNUserID <> 0
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							
							SET @sqlcommand = @sqlcommand + N' 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 0
						WHERE ' + @sqlSharingPortal + N' 
							AND n.HasPermissions = 0
							AND n.EventArticle = 1
							AND ne.Recurring = 0
							AND (n.Active = 1 OR n.UserID = @UserID)
							AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
							IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
							IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
							IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
							SET @sqlcommand = @sqlcommand + N'	
						)+(
						SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
							
							IF @FilterByDNNGroupID <> 0 
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							ELSE IF @FilterByDNNUserID <> 0
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							
							SET @sqlcommand = @sqlcommand + N' 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = '
							IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
							SET @sqlcommand = @sqlcommand + N' 
							CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
									THEN 1
									ELSE 0
								END '
							ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
								SET @sqlcommand = @sqlcommand + N' 
								CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
									THEN 1
									ELSE 0
								END '
						SET @sqlcommand = @sqlcommand + N' 
						WHERE ' + @sqlSharingPortal + N' 
							AND n.HasPermissions = 0
							AND n.EventArticle = 1
							AND ne.Recurring = 1
							AND (n.Active = 1 OR n.UserID = @UserID)
							AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
							IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
							IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
							SET @sqlcommand = @sqlcommand + N'	
						)+(
						SELECT COUNT(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Categories.CategoryID '
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
							
							IF @FilterByDNNGroupID <> 0 
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							ELSE IF @FilterByDNNUserID <> 0
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							
							SET @sqlcommand = @sqlcommand + N'
						WHERE ' + @sqlSharingPortal + N' 
							AND n.HasPermissions = 1
							AND n.EventArticle = 0
							AND (n.Active = 1 OR n.UserID = @UserID)
			 				AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
							IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
							IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
							ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
							IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
							SET @sqlcommand = @sqlcommand + N'	
						)+(
						SELECT COUNT([ArticleID]) FROM (
							SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Categories.CategoryID '
								IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
								
								IF @FilterByDNNGroupID <> 0 
									SET @sqlcommand = @sqlcommand + N'
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
								ELSE IF @FilterByDNNUserID <> 0
									SET @sqlcommand = @sqlcommand + N'
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
								
								SET @sqlcommand = @sqlcommand + N' 
							WHERE ' + @sqlSharingPortal + N' 
								AND n.HasPermissions = 1
								AND n.EventArticle = 0
								AND (n.Active = 1 OR n.UserID = @UserID)
			 					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
								IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
								IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
								IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
								ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
								IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
								ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
								SET @sqlcommand = @sqlcommand + N'	
							UNION
							SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Categories.CategoryID '
								IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
								
								IF @FilterByDNNGroupID <> 0 
									SET @sqlcommand = @sqlcommand + N'
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
								ELSE IF @FilterByDNNUserID <> 0
									SET @sqlcommand = @sqlcommand + N'
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
								
								SET @sqlcommand = @sqlcommand + N' 
							WHERE ' + @sqlSharingPortal + N' 
								AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
								AND n.HasPermissions = 1
								AND n.EventArticle = 0
								AND (n.Active = 1 OR n.UserID = @UserID)
								AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
								IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
								IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
								IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
								ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
								SET @sqlcommand = @sqlcommand + N'	
						) AS UserAndRolePermissions						
						)
						)+(
						SELECT COUNT(ArticleID) FROM (			
							SELECT ArticleID FROM (
								SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Categories.CategoryID '
									IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
									
									IF @FilterByDNNGroupID <> 0 
										SET @sqlcommand = @sqlcommand + N'
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
									ELSE IF @FilterByDNNUserID <> 0
										SET @sqlcommand = @sqlcommand + N'
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
									
									SET @sqlcommand = @sqlcommand + N' 
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 0
								WHERE ' + @sqlSharingPortal + N' 
									AND n.HasPermissions = 1
									AND n.EventArticle = 1
									AND ne.Recurring = 0
									AND (n.Active = 1 OR n.UserID = @UserID)
			 						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
									IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
									IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
									IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
									IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
									ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
									IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
									ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
									SET @sqlcommand = @sqlcommand + N'	
								UNION ALL
								SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Categories.CategoryID '
									IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
									
									IF @FilterByDNNGroupID <> 0 
										SET @sqlcommand = @sqlcommand + N'
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
									ELSE IF @FilterByDNNUserID <> 0
										SET @sqlcommand = @sqlcommand + N'
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
									
									SET @sqlcommand = @sqlcommand + N' 
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 1
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = '
									IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
									SET @sqlcommand = @sqlcommand + N' 
										CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
											 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
												THEN 1
												ELSE 0
											END '
									ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
										SET @sqlcommand = @sqlcommand + N' 
										CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
											THEN 1
											ELSE 0
										END '
								SET @sqlcommand = @sqlcommand + N' 
								WHERE ' + @sqlSharingPortal + N' 
									AND n.HasPermissions = 1
									AND n.EventArticle = 1
									AND ne.Recurring = 1
									AND (n.Active = 1 OR n.UserID = @UserID)
			 						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
									IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
									IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
									IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
									ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
									IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
									ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
									SET @sqlcommand = @sqlcommand + N'						
							) AS PermissionsByUser
							UNION
							SELECT ArticleID FROM (
								SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Categories.CategoryID '
									IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
									
									IF @FilterByDNNGroupID <> 0 
										SET @sqlcommand = @sqlcommand + N'
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
									ELSE IF @FilterByDNNUserID <> 0
										SET @sqlcommand = @sqlcommand + N'
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
									
									SET @sqlcommand = @sqlcommand + N' 
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 0
								WHERE ' + @sqlSharingPortal + N' 
									AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
									AND n.HasPermissions = 1
									AND n.EventArticle = 1
									AND ne.Recurring = 0
									AND (n.Active = 1 OR n.UserID = @UserID)
									AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
									IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
									IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
									IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
									IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
									ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
									SET @sqlcommand = @sqlcommand + N'	
								UNION ALL
								SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Categories.CategoryID '
									IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
									
									IF @FilterByDNNGroupID <> 0 
										SET @sqlcommand = @sqlcommand + N'
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
									ELSE IF @FilterByDNNUserID <> 0
										SET @sqlcommand = @sqlcommand + N'
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
									
									SET @sqlcommand = @sqlcommand + N' 
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 1
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = '
									IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
									SET @sqlcommand = @sqlcommand + N' 
										CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
											 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
												THEN 1
												ELSE 0
											END '
									ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
										SET @sqlcommand = @sqlcommand + N' 
										CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
											THEN 1
											ELSE 0
										END '
								SET @sqlcommand = @sqlcommand + N' 
								WHERE ' + @sqlSharingPortal + N' 
									AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
									AND n.HasPermissions = 1
									AND n.EventArticle = 1
									AND ne.Recurring = 1
									AND (n.Active = 1 OR n.UserID = @UserID)
									AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
									IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
									IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
									IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID '
									ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
									SET @sqlcommand = @sqlcommand + N'
							) AS PermissionsByRoles
						) AS PermissionsByUserAndRole
					)
				)
			END
		END AS ItemsCount
		FROM (
			SELECT c.*,
				CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
				CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
			FROM ( ' + @sqlCategories + ' ) AS c
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl ON c.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID
		) AS Categories '
		IF @IsPortalSharing = 0
			SET @sqlcommand = @sqlcommand + N' ORDER BY Position; '
		ELSE
			SET @sqlcommand = @sqlcommand + N' ORDER BY PortalID, Position; '
	END
END

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N' DROP TABLE #SharingPortals;';

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@MenuModuleID = @MenuModuleID
	,@DefaultTabID = @DefaultTabID
    ,@DefaultModuleID = @DefaultModuleID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CountItems = @CountItems
	,@CountArticles = @CountArticles
	,@CountEvents = @CountEvents
	,@CountEventsLimitByDays = @CountEventsLimitByDays
	,@IsSocialInstance = @IsSocialInstance
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@LocaleCode = @LocaleCode
	,@ShowAllAuthors = @ShowAllAuthors
	,@CategoryFilterType = @CategoryFilterType
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@PermissionsModuleID = @PermissionsModuleID
	,@UserCanApprove = @UserCanApprove
	,@IsPortalSharing = @IsPortalSharing

IF OBJECT_ID('tempdb..#UserInRoles') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID('tempdb..#ViewCategories') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID('tempdb..#ViewCategoriesWithFilter') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@DateRange BIT = 0,
	@DateRangeType TINYINT = 0,
	@StartDate DATETIME = NULL,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL,
	@eToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange TINYINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	
	@FieldsTemplateID INT = NULL,
	@SearchOnlySelectedCFGroup BIT = 0,
	@CFGeneratedSQL NVARCHAR(MAX) = NULL,
	@SimpleSearchFindCondition NVARCHAR(300) = NULL,
	@SimpleSearchType TINYINT = NULL,
	@SysDatesWhereCondition NVARCHAR(1000) = NULL,
	@OrderByID INT = NULL,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRange BIT
	,@DateRangeType TINYINT
	,@StartDate DATETIME
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange TINYINT
	,@FieldsTemplateID INT
	,@SimpleSearchFindCondition NVARCHAR(300)
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT'

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (Id INT PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX), CategoryURL NVARCHAR(1500)); '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #UserEditCategories (CategoryID INT PRIMARY KEY);
	INSERT INTO #UserEditCategories
	SELECT CategoryID
	FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)

	DECLARE @HasEditCategories BIT;

	IF EXISTS (SELECT 1 FROM #UserEditCategories)
		SET @HasEditCategories = 1;
	ELSE
		SET @HasEditCategories = 0; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS Id,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryURL ELSE cl.CategoryURL END AS CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategories) '
	
SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

IF @CFGeneratedSQL IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' DECLARE @tempArticles TABLE (ArticleID INT PRIMARY KEY); ' + @CFGeneratedSQL;

IF @SimpleSearchFindCondition IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	DECLARE @SearchTable TABLE (Words NVARCHAR(100) NOT NULL);
	DECLARE @word NVARCHAR(100), @PosWord INT
	SET @SimpleSearchFindCondition = LTRIM(RTRIM(@SimpleSearchFindCondition))+ '':''
	SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
	IF REPLACE(@SimpleSearchFindCondition, '':'', '''') <> ''''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SimpleSearchFindCondition, @PosWord - 1)))
			IF @word <> ''''
			BEGIN
				SET @word = replace( 
							replace( 
							replace( 
							replace( @word
							,''\'', ''\\'' )
							,''%'', ''\%'' )
							,''_'', ''\_'' )
							,''['', ''\['' )
				INSERT INTO @SearchTable (Words) VALUES (''% ''+@word+''%'')
				INSERT INTO @SearchTable (Words) VALUES (@word+''%'')
			END
			SET @SimpleSearchFindCondition = RIGHT(@SimpleSearchFindCondition, LEN(@SimpleSearchFindCondition) - @PosWord)
			SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
		END
	END ';

SET @TopInnerFilter = N'';
	IF @CFGeneratedSQL IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID '

	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''''
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID '

	IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
		SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '

	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

	IF @SimpleSearchFindCondition IS NOT NULL
	BEGIN
		IF @LocaleCode IS NULL
		BEGIN
			IF @SimpleSearchType = 2
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.CleanArticleData LIKE st.Words ESCAPE ''\'') '
			ELSE IF @SimpleSearchType = 1
			SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE ''\'' OR na.SubTitle LIKE st.Words ESCAPE ''\'') '
			ELSE
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE ''\'' OR na.SubTitle LIKE st.Words ESCAPE ''\'' OR na.CleanArticleData LIKE st.Words ESCAPE ''\'') '	
		END
		ELSE
		BEGIN
			IF @SimpleSearchType = 2
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (ncl.CleanArticleData LIKE st.Words ESCAPE ''\'') '
			ELSE IF @SimpleSearchType = 1
			SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (ncl.Title LIKE st.Words ESCAPE ''\'' OR ncl.SubTitle LIKE st.Words ESCAPE ''\'') '
			ELSE
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (ncl.Title LIKE st.Words ESCAPE ''\'' OR ncl.SubTitle LIKE st.Words ESCAPE ''\'' OR ncl.CleanArticleData LIKE st.Words ESCAPE ''\'') '
		END
	END

	IF @FilterByTags = 1 SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
	IF @FilterByArticles = 1 SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
SET @TopInnerFilter = @TopInnerFilter + N'
WHERE ' + @sqlSharingPortal

	IF @SysDatesWhereCondition IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + @SysDatesWhereCondition

	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '
	IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
	
	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 '
		SET @TopInnerFilter = @TopInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
	END

	IF @SearchOnlySelectedCFGroup = 1
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.CFGroupeID = @FieldsTemplateID '

IF @SimpleSearchFindCondition IS NOT NULL
BEGIN

	DECLARE @TopTagInnerFilter NVARCHAR(MAX);
	SET @TopTagInnerFilter = N'';
		IF @CFGeneratedSQL IS NOT NULL
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'
		INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID '

	IF @GoogleMapsFilter = 2
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''''
	ELSE IF @GoogleMapsFilter = 1
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID '

	IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '

	IF @FilterByDNNGroupID <> 0 
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

	IF @FilterByTags = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
	IF @FilterByArticles = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
	SET @TopTagInnerFilter = @TopTagInnerFilter + N'
	WHERE ' + @sqlSharingPortal

	IF @SysDatesWhereCondition IS NOT NULL
		SET @TopTagInnerFilter = @TopTagInnerFilter + @SysDatesWhereCondition

	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.Featured = 1 '
	IF @FilterByDNNUserID <> 0
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
	
	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopTagInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.Approved = 1 '
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
	END

	IF @SearchOnlySelectedCFGroup = 1
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.CFGroupeID = @FieldsTemplateID '
END

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);
DECLARE @ControlTypeID INT;

IF @OrderByID IS NOT NULL
BEGIN
	DECLARE @CfOrderByID INT;
	DECLARE @SysOrderByID INT;
	DECLARE @SortOrder NCHAR(4);

	SELECT @CfOrderByID = CfIdOrderable
		,@SysOrderByID = SysIdOrderable
		,@SortOrder = SortOrder
	FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsOrderByItems] AS obi
	WHERE obi.Id = @OrderByID
		--AND obi.CustomFieldID IN (
		--	SELECT CustomFieldID
		--	FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems]
		--	WHERE FieldsTemplateID = @FieldsTemplateID
		--	)

	IF @CfOrderByID IS NOT NULL
	BEGIN

		SELECT @ControlTypeID = [ControlTypeID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNfields]
		WHERE CustomFieldID = @CfOrderByID
			AND IsOrderable = 1;

		IF @ControlTypeID IS NOT NULL
		BEGIN
			SELECT @OrderByColumnName = CASE @ControlTypeID
					WHEN 1
						THEN N'[Text]'
					WHEN 3
						THEN N'[Int]'
					WHEN 4
						THEN N'[Decimal]'
					WHEN 5
						THEN N'[Decimal]'
					WHEN 6
						THEN N'[Text]'
					WHEN 9
						THEN N'[DateTime]'
					WHEN 10
						THEN N'[Text]'
					ELSE NULL
					END

			IF @OrderByColumnName IS NULL
			BEGIN
				SET @OrderByID = NULL;
				SET @CfOrderByID = NULL;
				SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
				SET @OrderByDirection = N'DESC';
				SET @OrderByColumnName = N'[PublishDate]';
			END
			ELSE
			BEGIN
				SET @OrderByCustomFieldID = @CfOrderByID;
				SET @OrderByDirection = @SortOrder;
			END
		END
		ELSE
		BEGIN
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByDirection = N'DESC';
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
		IF @SysOrderByID IS NOT NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			
			SELECT @OrderByColumnName = CASE @SysOrderByID
					WHEN 0
						THEN N'[DateAdded]'
					WHEN 1
						THEN N'[LastModified]'
					WHEN 2
						THEN N'[PublishDate]'
					WHEN 3
						THEN N'[ExpireDate]'
					WHEN 4
						THEN N'[NumberOfViews]'
					WHEN 5
						THEN N'[RatingValue]'
					WHEN 6
						THEN N'[Title]'
					WHEN 7
						THEN N'[StartDate]'
					WHEN 8
						THEN N'CommentedDate'
					WHEN 9
						THEN N'[NumberOfComments]'
					WHEN 10
						THEN N'NEWID()'
					ELSE N'[PublishDate]'
					END
			
			SET @OrderByDirection = @SortOrder;
		END
		ELSE
		BEGIN	
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
			SET @OrderByDirection = N'DESC';
			SET @OrderByColumnName = N'[PublishDate]';
		END
END
ELSE IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END

IF @OrderByColumnName = N'NEWID()'
BEGIN
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
	SET @OrderByDirection = N''
END
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

SET @MainContentFilter = N'
;WITH AllContent AS( '

	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT ArticleID, CommentedDate,RecurringID,StartDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,inner_all.RecurringID
			,inner_all.StartDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID], inner_all.RecurringID ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @MainContentFilter = @MainContentFilter + N'inner_all.Featured DESC, '
			
			SET @MainContentFilter = @MainContentFilter + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
			
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc
		INNER JOIN (';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT n.ArticleID,n.Featured,
		CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
		CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND '
	IF @DateRangeType = 2
		SET @MainContentFilter = @MainContentFilter + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 1
		BEGIN
			IF @ListArchive = 0
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
			ELSE
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
		END
	ELSE IF @DateRangeType = 0
		SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE
		SET @MainContentFilter = @MainContentFilter + N' 1 = 0'
	
	SET @MainContentFilter = @MainContentFilter + N'
	WHERE n.ArticleID IN( '
	 
	 -- tu bi trebal staviti okolo da se filtrira po and !!!
	 
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.ArticleID IN ( ';
	END
	 
	 SET @MainContentFilter = @MainContentFilter + N'
		SELECT [ArticleID] FROM (
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

				AND na.EventArticle = 0 '

			IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

			IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL
				SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '

		SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

				AND na.EventArticle = 1
				AND ne.Recurring = 0 '

			IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

			IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
				ELSE
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
			END
			ELSE IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

		SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
			IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N'
				((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
			ELSE IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
					ELSE
						SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
				END
			ELSE IF @DateRangeType = 0
				SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
			ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND na.EventArticle = 1
				AND ne.Recurring = 1 '

			IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

		IF @SimpleSearchFindCondition IS NOT NULL
		BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION
			SELECT ArticleID
			FROM (
				SELECT ArticleID
				FROM (
					SELECT ti.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
					INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
					WHERE t.' + @sqlSharingPortalAll
					IF @SimpleSearchType = 4
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT di.ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] AS d
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentItems] AS di ON di.DocumentID = d.DocEntryID
						INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
						WHERE d.' + @sqlSharingPortalAll + N'
							AND d.Visible = 1
						UNION
						SELECT li.ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsLinks] AS l
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsLinkItems] AS li ON li.LinkID = l.LinkID
						INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
						WHERE l.' + @sqlSharingPortalAll
					END
				SET @MainContentFilter = @MainContentFilter + N'
				) AS allSearchFields
				INTERSECT
				SELECT ArticleID
				FROM (
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) '

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
						AND na.EventArticle = 0 '
					IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL
					SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
						AND na.EventArticle = 1
						AND ne.Recurring = 0 '

					IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
						AND na.EventArticle = 1
						AND ne.Recurring = 1 '

					IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

				SET @MainContentFilter = @MainContentFilter + N') AS permissionPerArticle';
			SET @MainContentFilter = @MainContentFilter + N') AS tagsdocumentsLinks';
		END

		SET @MainContentFilter = @MainContentFilter + N'
		) AS NoPermissionsPerArticle '

	IF @QueryPermissionsPerArticles = 1
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		UNION ALL
		SELECT [ArticleID]
		FROM (
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND na.HasPermissions = 1
				AND na.EventArticle = 0 '
			IF @CanEditAllContent = 0
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
				IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
				ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
			END
			IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL
				SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '

		SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 0 '
			IF @CanEditAllContent = 0
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
				IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
				ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
			END
			IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
				ELSE
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
			END
			ELSE IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

		SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
			IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N'
				((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
			ELSE IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
					ELSE
						SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
				END
			ELSE IF @DateRangeType = 0
				SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
			ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 1 '
			IF @CanEditAllContent = 0
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
				IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
				ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
			END

			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION
			SELECT ArticleID
			FROM (
				SELECT ArticleID
				FROM (
					SELECT ti.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
					INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
					WHERE t.' + @sqlSharingPortalAll
					IF @SimpleSearchType = 4
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT di.ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] AS d
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentItems] AS di ON di.DocumentID = d.DocEntryID
						INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
						WHERE d.' + @sqlSharingPortalAll + N'
							AND d.Visible = 1
						UNION
						SELECT li.ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsLinks] AS l
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsLinkItems] AS li ON li.LinkID = l.LinkID
						INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
						WHERE l.' + @sqlSharingPortalAll
					END
				SET @MainContentFilter = @MainContentFilter + N'
				) AS allSearchFields
				INTERSECT
				SELECT ArticleID
				FROM (
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
					AND na.HasPermissions = 1
					AND na.EventArticle = 0 '

					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL
						SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)  '

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
						AND na.HasPermissions = 1
						AND na.EventArticle = 1
						AND ne.Recurring = 0 '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
						AND na.HasPermissions = 1
						AND na.EventArticle = 1
						AND ne.Recurring = 1 '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END

				SET @MainContentFilter = @MainContentFilter + N') AS permissionPerArticle';
			SET @MainContentFilter = @MainContentFilter + N') AS tagsdocumentsLinks';
		END

				SET @MainContentFilter = @MainContentFilter + N'
		) AS WithNoRolePermissions '

			IF @UserID <> -1
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N'
				UNION
				SELECT [ArticleID] FROM (
					SELECT DISTINCT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '
					
					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
					
					AND na.HasPermissions = 1
					AND na.EventArticle = 0 '
					IF @CanEditAllContent = 0
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '

					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL
						SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '

				SET @MainContentFilter = @MainContentFilter + N'
					UNION ALL
					SELECT DISTINCT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 0 '
					IF @CanEditAllContent = 0
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
						END
						ELSE IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION All
					SELECT DISTINCT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 1 '
					IF @CanEditAllContent = 0
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '


			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION
			SELECT ArticleID
			FROM (
				SELECT ArticleID
				FROM (
					SELECT ti.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
					INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
					WHERE t.' + @sqlSharingPortalAll
					IF @SimpleSearchType = 4
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT di.ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] AS d
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentItems] AS di ON di.DocumentID = d.DocEntryID
						INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
						WHERE d.' + @sqlSharingPortalAll + N'
							AND d.Visible = 1
						UNION
						SELECT li.ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsLinks] AS l
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsLinkItems] AS li ON li.LinkID = l.LinkID
						INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
						WHERE l.' + @sqlSharingPortalAll
					END
				SET @MainContentFilter = @MainContentFilter + N'
				) AS allSearchFields
				INTERSECT
				SELECT ArticleID
				FROM (
					SELECT DISTINCT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'

					AND na.HasPermissions = 1
					AND na.EventArticle = 0 '
					IF @CanEditAllContent = 0
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '

					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL
						SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION ALL
					SELECT DISTINCT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 0 '
					IF @CanEditAllContent = 0
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '

					IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
						END
						ELSE IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION ALL
					SELECT DISTINCT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'

					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 1 '
					IF @CanEditAllContent = 0
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '

				SET @MainContentFilter = @MainContentFilter + N') AS permissionPerArticle';
			SET @MainContentFilter = @MainContentFilter + N') AS tagsdocumentsLinks';
		END

				SET @MainContentFilter = @MainContentFilter + N'
				) AS ByRolePermissions '
			END

		END
	
	-- treba desti ako se koristi AND operator
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	
	SET @MainContentFilter = @MainContentFilter + N' 
	) '
	
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON nc.ArticleID = inner_all.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1'
	END
	
SET @MainContentFilter = @MainContentFilter + N' 
) '


SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent '

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
	,e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], '
ELSE
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], ';

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N'0 AS CanEdit, '
ELSE IF @CanEditAllContent = 1
	SET @sqlcommand = @sqlcommand + N'1 AS CanEdit, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE WHEN @HasEditCategories = 0
	THEN 
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	ELSE
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE '
			IF @EditOnlyAsOwner = 1
				SET @sqlcommand = @sqlcommand + N' n.UserID = @UserID AND '

			SET @sqlcommand = @sqlcommand + N' c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	END
	AS CanEdit, '
END

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '
ELSE
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", lc.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.Id
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N' 0 AS Published, 0 AS Approve, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE n.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	END AS Published, '
	IF @UserCanApprove = 0
		SET @sqlcommand = @sqlcommand + N'0 AS Approve, '
	ELSE
		SET @sqlcommand = @sqlcommand + N'
			CASE n.Approved
				WHEN 1 THEN 0
				WHEN 0 THEN n.Active
			END AS Approve, '
END

SET @sqlcommand = @sqlcommand + N' @AllContentCount AS ContentCount '

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N',e_fsd.' + @OrderByColumnName + ',(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END)
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
				,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC'
					SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
		END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
END

SET @sqlcommand = @sqlcommand + N' ORDER BY '
	IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'Featured DESC, '
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
		SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#UserEditCategories'') IS NOT NULL
		DROP TABLE #UserEditCategories; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
		DROP TABLE #LocalizedCategories; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRange = @DateRange
	,@DateRangeType = @DateRangeType
	,@StartDate = @StartDate
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@FieldsTemplateID = @FieldsTemplateID
	,@SimpleSearchFindCondition = @SimpleSearchFindCondition
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@DateRange BIT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@FilterByTagID INT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	
	@FieldsTemplateID INT = NULL,
	@SearchOnlySelectedCFGroup BIT = 0,
	@CFGeneratedSQL NVARCHAR(MAX) = NULL,
	@SimpleSearchFindCondition NVARCHAR(300) = NULL,
	@SimpleSearchType TINYINT = NULL,
	@SysDatesWhereCondition NVARCHAR(1000) = NULL,
	@OrderByID INT = NULL,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRange BIT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@LocaleCode NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@FilterByTagID INT
	,@FieldsTemplateID INT
	,@SimpleSearchFindCondition NVARCHAR(300)
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT'

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (Id INT PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX), CategoryURL NVARCHAR(1500)); '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #UserEditCategories (CategoryID INT PRIMARY KEY);
	INSERT INTO #UserEditCategories
	SELECT CategoryID
	FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)

	DECLARE @HasEditCategories BIT;

	IF EXISTS (SELECT 1 FROM #UserEditCategories)
		SET @HasEditCategories = 1;
	ELSE
		SET @HasEditCategories = 0; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS Id,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryURL ELSE cl.CategoryURL END AS CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategories) '
	
SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

IF @CFGeneratedSQL IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' DECLARE @tempArticles TABLE (ArticleID INT PRIMARY KEY); ' + @CFGeneratedSQL;

IF @SimpleSearchFindCondition IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	DECLARE @SearchTable TABLE (Words NVARCHAR(100) NOT NULL);
	DECLARE @word NVARCHAR(100), @PosWord INT
	SET @SimpleSearchFindCondition = LTRIM(RTRIM(@SimpleSearchFindCondition))+ '':''
	SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
	IF REPLACE(@SimpleSearchFindCondition, '':'', '''') <> ''''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SimpleSearchFindCondition, @PosWord - 1)))
			IF @word <> ''''
			BEGIN
				SET @word = replace( 
							replace( 
							replace( 
							replace( @word
							,''\'', ''\\'' )
							,''%'', ''\%'' )
							,''_'', ''\_'' )
							,''['', ''\['' )
				INSERT INTO @SearchTable (Words) VALUES (''% ''+@word+''%'')
				INSERT INTO @SearchTable (Words) VALUES (@word+''%'')
			END
			SET @SimpleSearchFindCondition = RIGHT(@SimpleSearchFindCondition, LEN(@SimpleSearchFindCondition) - @PosWord)
			SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
		END
	END ';

SET @TopInnerFilter = N'';

	IF @CFGeneratedSQL IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID '
		
	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''''
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID '

	IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
		SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

	IF @SimpleSearchFindCondition IS NOT NULL
	BEGIN
		IF @LocaleCode IS NULL
		BEGIN
			IF @SimpleSearchType = 1
				SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE ''\'' OR na.SubTitle LIKE st.Words ESCAPE ''\'') '
			ELSE IF @SimpleSearchType = 2
				SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @SearchTable AS st ON (na.CleanArticleData LIKE st.Words ESCAPE ''\'') '
			ELSE
				SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE ''\'' OR na.SubTitle LIKE st.Words ESCAPE ''\'' OR na.CleanArticleData LIKE st.Words ESCAPE ''\'') '
		END
		ELSE
		BEGIN
			IF @SimpleSearchType = 1
				SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @SearchTable AS st ON (ncl.Title LIKE st.Words ESCAPE ''\'' OR ncl.SubTitle LIKE st.Words ESCAPE ''\'') '
			ELSE IF @SimpleSearchType = 2
				SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @SearchTable AS st ON (ncl.CleanArticleData LIKE st.Words ESCAPE ''\'') '
			ELSE
				SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @SearchTable AS st ON (ncl.Title LIKE st.Words ESCAPE ''\'' OR ncl.SubTitle LIKE st.Words ESCAPE ''\'' OR ncl.CleanArticleData LIKE st.Words ESCAPE ''\'') '
		END
	END

	IF @FilterByTags = 1 SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
	IF @FilterByArticles = 1 SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
SET @TopInnerFilter = @TopInnerFilter + N'
WHERE ' + @sqlSharingPortal + '
	AND na.EventArticle = 0 '
	
	IF @SysDatesWhereCondition IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + @SysDatesWhereCondition
	
	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @DateRange = 2 SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate '
		ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @DateRange = 2 OR @DateRange = 1 SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '
	IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 '
		SET @TopInnerFilter = @TopInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
	END

IF @SimpleSearchFindCondition IS NOT NULL
BEGIN

	DECLARE @TopTagInnerFilter NVARCHAR(MAX);
	SET @TopTagInnerFilter = N'';

		IF @CFGeneratedSQL IS NOT NULL
			SET @TopTagInnerFilter = @TopTagInnerFilter + N'
			INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID '
			
		IF @GoogleMapsFilter = 2
			SET @TopTagInnerFilter = @TopTagInnerFilter + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''''
		ELSE IF @GoogleMapsFilter = 1
			SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID '

		IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
			SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
		
		IF @FilterByDNNGroupID <> 0 
			SET @TopTagInnerFilter = @TopTagInnerFilter + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID '
		ELSE IF @FilterByDNNUserID <> 0
			SET @TopTagInnerFilter = @TopTagInnerFilter + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

		IF @FilterByTags = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
		IF @FilterByArticles = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
	SET @TopTagInnerFilter = @TopTagInnerFilter + N'
	WHERE ' + @sqlSharingPortal + '
		AND na.EventArticle = 0 '
		
		IF @SysDatesWhereCondition IS NOT NULL
			SET @TopTagInnerFilter = @TopTagInnerFilter + @SysDatesWhereCondition
		
		IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
		BEGIN
			IF @DateRange = 2 SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate '
			ELSE SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
		END
		ELSE IF @DateRange = 2 OR @DateRange = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		ELSE SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			
		IF @LocaleCode IS NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.HideDefaultLocale = 0 '
		IF @Featured = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.Featured = 1 '
		IF @FilterByDNNUserID <> 0
			SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
		ELSE IF @sqlAuthors IS NOT NULL
			SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

		IF @QueryModulePermissions = 0
			SET @TopInnerFilter = @TopTagInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
		ELSE IF @CanEditAllContent = 0
		BEGIN
			IF @UserCanApprove = 0 SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.Approved = 1 '
			SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
		END
END

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);
DECLARE @ControlTypeID INT;

IF @OrderByID IS NOT NULL
BEGIN
	DECLARE @CfOrderByID INT;
	DECLARE @SysOrderByID INT;
	DECLARE @SortOrder NCHAR(4);

	SELECT @CfOrderByID = CfIdOrderable
		,@SysOrderByID = SysIdOrderable
		,@SortOrder = SortOrder
	FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsOrderByItems] AS obi
	WHERE obi.Id = @OrderByID
		--AND obi.CustomFieldID IN (
		--	SELECT CustomFieldID
		--	FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems]
		--	WHERE FieldsTemplateID = @FieldsTemplateID
		--	)

	IF @CfOrderByID IS NOT NULL
	BEGIN

		SELECT @ControlTypeID = [ControlTypeID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNfields]
		WHERE CustomFieldID = @CfOrderByID
			AND IsOrderable = 1;

		IF @ControlTypeID IS NOT NULL
		BEGIN
			SELECT @OrderByColumnName = CASE @ControlTypeID
					WHEN 1
						THEN N'[Text]'
					WHEN 3
						THEN N'[Int]'
					WHEN 4
						THEN N'[Decimal]'
					WHEN 5
						THEN N'[Decimal]'
					WHEN 6
						THEN N'[Text]'
					WHEN 9
						THEN N'[DateTime]'
					WHEN 10
						THEN N'[Text]'
					ELSE NULL
					END

			IF @OrderByColumnName IS NULL
			BEGIN
				SET @OrderByID = NULL;
				SET @CfOrderByID = NULL;
				SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
				SET @OrderByDirection = N'DESC';
				SET @OrderByColumnName = N'[PublishDate]';
			END
			ELSE
			BEGIN
				SET @OrderByCustomFieldID = @CfOrderByID;
				SET @OrderByDirection = @SortOrder;
			END
		END
		ELSE
		BEGIN
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByDirection = N'DESC';
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
		IF @SysOrderByID IS NOT NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			
			SELECT @OrderByColumnName = CASE @SysOrderByID
					WHEN 0
						THEN N'[DateAdded]'
					WHEN 1
						THEN N'[LastModified]'
					WHEN 2
						THEN N'[PublishDate]'
					WHEN 3
						THEN N'[ExpireDate]'
					WHEN 4
						THEN N'[NumberOfViews]'
					WHEN 5
						THEN N'[RatingValue]'
					WHEN 6
						THEN N'[Title]'
					WHEN 7
						THEN N'[PublishDate]'-- EventStartDate - only articles
					WHEN 8
						THEN N'CommentedDate'
					WHEN 9
						THEN N'[NumberOfComments]'
					WHEN 10
						THEN N'NEWID()'
					ELSE N'[PublishDate]'
					END
			
			SET @OrderByDirection = @SortOrder;
		END
		ELSE
		BEGIN	
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
			SET @OrderByDirection = N'DESC';
			SET @OrderByColumnName = N'[PublishDate]';
		END
END
ELSE IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END

IF @OrderByColumnName = N'NEWID()'
BEGIN
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
	SET @OrderByDirection = N''
END
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;
	
SET @MainContentFilter = N'
;WITH AllContent AS( '
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT ArticleID, CommentedDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID] ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @MainContentFilter = @MainContentFilter + N'n.Featured DESC, '
			
			SET @MainContentFilter = @MainContentFilter + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc ON nc.ArticleID = n.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		WHERE nc.ArticleID IN (';
	END
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.ArticleID IN ( ';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) '

		SET @MainContentFilter = @MainContentFilter + @TopInnerFilter

		IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

	IF @SimpleSearchFindCondition IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		UNION
		SELECT na.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
		INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words '

		SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter
		
		IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

		IF @SimpleSearchType = 4
		BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION
			SELECT ArticleID
			FROM (
				SELECT ArticleID 
				FROM (
					SELECT di.ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] AS d
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentItems] AS di ON di.DocumentID = d.DocEntryID
					INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
					WHERE d.' + @sqlSharingPortalAll + N'
						AND d.Visible = 1
					UNION
					SELECT li.ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsLinks] AS l
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsLinkItems] AS li ON li.LinkID = l.LinkID
					INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
					WHERE l.' + @sqlSharingPortalAll + N'
				) AS allSearchFields
				INTERSECT
				SELECT na.[ArticleID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) '

				SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter

				IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

			SET @MainContentFilter = @MainContentFilter + N') AS documentsLinks';
		END
	END
	
	IF @QueryPermissionsPerArticles = 1
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		UNION ALL
		SELECT ArticleID FROM (
			SELECT ArticleID FROM (
			SELECT aup.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup '
				IF @CanEditAllContent = 0
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N' WHERE aup.Show = 1 '
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
					ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
				END
			IF @UserID <> -1
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N'
				UNION
				SELECT arp.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' WHERE arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					END
			END
			SET @MainContentFilter = @MainContentFilter + N'
			) AS PermissionsByArticle
			INTERSECT
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

			AND na.HasPermissions = 1 ' 
		
			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words '

				SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
		
				AND na.HasPermissions = 1 '

			IF @SimpleSearchType = 4
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N'
				UNION
				SELECT ArticleId
				FROM (
					SELECT ArticleId 
					FROM (
						SELECT di.ArticleId
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] AS d
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentItems] AS di ON di.DocumentID = d.DocEntryID
						INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
						WHERE d.' + @sqlSharingPortalAll + N'
							AND d.Visible = 1
						UNION
						SELECT li.ArticleId
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsLinks] AS l
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsLinkItems] AS li ON li.LinkID = l.LinkID
						INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
						WHERE l.' + @sqlSharingPortalAll + N'
					) AS allSearchFields
					INTERSECT
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '
		
					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
		
					AND na.HasPermissions = 1
				) AS documentsLinks '
			END

			END
			
		SET @MainContentFilter = @MainContentFilter + N'
		) AS HasPermissionsTrue '
	END
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	END
	
	IF @OrderByColumnName = N'CommentedDate'
	SET @MainContentFilter = @MainContentFilter + N'
		)
	) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1
	'
SET @MainContentFilter = @MainContentFilter + N'
) '
SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent '

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID],n.[ContactEmail], ';
ELSE
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],n.[ContactEmail], ';

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N'0 AS CanEdit, '
ELSE IF @CanEditAllContent = 1
	SET @sqlcommand = @sqlcommand + N'1 AS CanEdit, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE WHEN @HasEditCategories = 0
	THEN 
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	ELSE
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE '
			IF @EditOnlyAsOwner = 1
				SET @sqlcommand = @sqlcommand + N' n.UserID = @UserID AND '

			SET @sqlcommand = @sqlcommand + N' c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	END
	AS CanEdit, '
END

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '
ELSE
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", lc.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.Id
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N' 0 AS Published, 0 AS Approve, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE n.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	END AS Published, '
	IF @UserCanApprove = 0
		SET @sqlcommand = @sqlcommand + N'0 AS Approve, '
	ELSE
		SET @sqlcommand = @sqlcommand + N'
			CASE n.Approved
				WHEN 1 THEN 0
				WHEN 0 THEN n.Active
			END AS Approve, '
END

SET @sqlcommand = @sqlcommand + N' @AllContentCount AS ContentCount '

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

					SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],fv.' + @OrderByColumnName + '
				,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		WHERE n.ArticleID IN (
			SELECT finalSelection.ArticleID
			FROM (
				SELECT inner_n.ArticleID, ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'inner_n.Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				
				SET @sqlcommand = @sqlcommand + N' ' + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				WHERE inner_n.ArticleID IN (SELECT ArticleID FROM AllContent)
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		)';
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN  (
			SELECT finalSelection.[ArticleID],finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				 SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],fv.' + @OrderByColumnName + '
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, fv.'

				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode
		WHERE n.ArticleID IN (
			SELECT finalSelection.ArticleID
			FROM (
				SELECT inner_n.ArticleID, ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'inner_n.Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + N' ' + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				WHERE inner_n.ArticleID IN (SELECT ArticleID FROM AllContent)
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		)';
	END
END

SET @sqlcommand = @sqlcommand + N' ORDER BY '
	IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'Featured DESC, '
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
		SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#UserEditCategories'') IS NOT NULL
		DROP TABLE #UserEditCategories; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
		DROP TABLE #LocalizedCategories; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRange = @DateRange
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@LocaleCode = @LocaleCode
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@FilterByTagID = @FilterByTagID
	,@FieldsTemplateID = @FieldsTemplateID
	,@SimpleSearchFindCondition = @SimpleSearchFindCondition
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT = 1,
	@ItemsTo INT = 5,
	@DateRangeType TINYINT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 0,
	@FillterSettingsSource BIT = 0,
	@StartDate DATETIME = NULL,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange TINYINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	
	@FieldsTemplateID INT = NULL,
	@SearchOnlySelectedCFGroup BIT = 0,
	@CFGeneratedSQL NVARCHAR(MAX) = NULL,
	@SimpleSearchFindCondition NVARCHAR(300) = NULL,
	@SimpleSearchType TINYINT = NULL,
	@SysDatesWhereCondition NVARCHAR(1000) = NULL,
	@OrderByID INT = NULL,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRangeType TINYINT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@StartDate DATETIME
	,@OuterModuleID INT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange TINYINT
	,@FieldsTemplateID INT
	,@SimpleSearchFindCondition NVARCHAR(300)
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT'

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (Id INT PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX), CategoryURL NVARCHAR(1500)); '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #UserEditCategories (CategoryID INT PRIMARY KEY);
	INSERT INTO #UserEditCategories
	SELECT CategoryID
	FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)

	DECLARE @HasEditCategories BIT;

	IF EXISTS (SELECT 1 FROM #UserEditCategories)
		SET @HasEditCategories = 1;
	ELSE
		SET @HasEditCategories = 0; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS Id,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryURL ELSE cl.CategoryURL END AS CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategories) '
	
SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

IF @CFGeneratedSQL IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' DECLARE @tempArticles TABLE (ArticleID INT PRIMARY KEY); ' + @CFGeneratedSQL;

IF @SimpleSearchFindCondition IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	DECLARE @SearchTable TABLE (Words NVARCHAR(100) NOT NULL);
	DECLARE @word NVARCHAR(100), @PosWord INT
	SET @SimpleSearchFindCondition = LTRIM(RTRIM(@SimpleSearchFindCondition))+ '':''
	SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
	IF REPLACE(@SimpleSearchFindCondition, '':'', '''') <> ''''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SimpleSearchFindCondition, @PosWord - 1)))
			IF @word <> ''''
			BEGIN
				SET @word = replace( 
							replace( 
							replace( 
							replace( @word
							,''\'', ''\\'' )
							,''%'', ''\%'' )
							,''_'', ''\_'' )
							,''['', ''\['' )
				INSERT INTO @SearchTable (Words) VALUES (''% ''+@word+''%'')
				INSERT INTO @SearchTable (Words) VALUES (@word+''%'')
			END
			SET @SimpleSearchFindCondition = RIGHT(@SimpleSearchFindCondition, LEN(@SimpleSearchFindCondition) - @PosWord)
			SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
		END
	END ';

SET @TopInnerFilter = N'';
	IF @CFGeneratedSQL IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID '
		
	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''' '
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID '

	IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
		SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '

	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

	IF @SimpleSearchFindCondition IS NOT NULL
	BEGIN
		IF @LocaleCode IS NULL
		BEGIN
			IF @SimpleSearchType = 2
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.CleanArticleData LIKE st.Words ESCAPE ''\'') '
			ELSE IF @SimpleSearchType = 1
			SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE ''\'' OR na.SubTitle LIKE st.Words ESCAPE ''\'') '
			ELSE
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE ''\'' OR na.SubTitle LIKE st.Words ESCAPE ''\'' OR na.CleanArticleData LIKE st.Words ESCAPE ''\'') '	
		END
		ELSE
		BEGIN
			IF @SimpleSearchType = 2
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (ncl.CleanArticleData LIKE st.Words ESCAPE ''\'') '
			ELSE IF @SimpleSearchType = 1
			SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (ncl.Title LIKE st.Words ESCAPE ''\'' OR ncl.SubTitle LIKE st.Words ESCAPE ''\'') '
			ELSE
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (ncl.Title LIKE st.Words ESCAPE ''\'' OR ncl.SubTitle LIKE st.Words ESCAPE ''\'' OR ncl.CleanArticleData LIKE st.Words ESCAPE ''\'') '
		END
	END

	IF @FilterByTags = 1 SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
	IF @FilterByArticles = 1 SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
	
SET @TopInnerFilter = @TopInnerFilter + N'
WHERE ' + @sqlSharingPortal + '
	AND na.EventArticle = 1 '
	
	IF @SysDatesWhereCondition IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + @SysDatesWhereCondition
	
	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '
	IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 '
		SET @TopInnerFilter = @TopInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
	END
	
	IF @SearchOnlySelectedCFGroup = 1
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.CFGroupeID = @FieldsTemplateID '

IF @SimpleSearchFindCondition IS NOT NULL
BEGIN

	DECLARE @TopTagInnerFilter NVARCHAR(MAX);
	SET @TopTagInnerFilter = N'';
		IF @CFGeneratedSQL IS NOT NULL
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'
		INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID '
		
	IF @GoogleMapsFilter = 2
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''' '
	ELSE IF @GoogleMapsFilter = 1
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID '

	IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '

	IF @FilterByDNNGroupID <> 0 
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

	IF @FilterByTags = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
	IF @FilterByArticles = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
	
	SET @TopTagInnerFilter = @TopTagInnerFilter + N'
	WHERE ' + @sqlSharingPortal + '
	AND na.EventArticle = 1 '
	
	IF @SysDatesWhereCondition IS NOT NULL
		SET @TopTagInnerFilter = @TopTagInnerFilter + @SysDatesWhereCondition
	
	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.Featured = 1 '
	IF @FilterByDNNUserID <> 0
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopTagInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.Approved = 1 '
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
	END
	
	IF @SearchOnlySelectedCFGroup = 1
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.CFGroupeID = @FieldsTemplateID '
END

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);
DECLARE @ControlTypeID INT;

IF @OrderByID IS NOT NULL
BEGIN
	DECLARE @CfOrderByID INT;
	DECLARE @SysOrderByID INT;
	DECLARE @SortOrder NCHAR(4);

	SELECT @CfOrderByID = CfIdOrderable
		,@SysOrderByID = SysIdOrderable
		,@SortOrder = SortOrder
	FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsOrderByItems] AS obi
	WHERE obi.Id = @OrderByID
		--AND obi.CustomFieldID IN (
		--	SELECT CustomFieldID
		--	FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems]
		--	WHERE FieldsTemplateID = @FieldsTemplateID
		--	)

	IF @CfOrderByID IS NOT NULL
	BEGIN

		SELECT @ControlTypeID = [ControlTypeID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNfields]
		WHERE CustomFieldID = @CfOrderByID
			AND IsOrderable = 1;

		IF @ControlTypeID IS NOT NULL
		BEGIN
			SELECT @OrderByColumnName = CASE @ControlTypeID
					WHEN 1
						THEN N'[Text]'
					WHEN 3
						THEN N'[Int]'
					WHEN 4
						THEN N'[Decimal]'
					WHEN 5
						THEN N'[Decimal]'
					WHEN 6
						THEN N'[Text]'
					WHEN 9
						THEN N'[DateTime]'
					WHEN 10
						THEN N'[Text]'
					ELSE NULL
					END

			IF @OrderByColumnName IS NULL
			BEGIN
				SET @OrderByID = NULL;
				SET @CfOrderByID = NULL;
				SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
				SET @OrderByDirection = N'DESC';
				SET @OrderByColumnName = N'[PublishDate]';
			END
			ELSE
			BEGIN
				SET @OrderByCustomFieldID = @CfOrderByID;
				SET @OrderByDirection = @SortOrder;
			END
		END
		ELSE
		BEGIN
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByDirection = N'DESC';
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
		IF @SysOrderByID IS NOT NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			
			SELECT @OrderByColumnName = CASE @SysOrderByID
					WHEN 0
						THEN N'[DateAdded]'
					WHEN 1
						THEN N'[LastModified]'
					WHEN 2
						THEN N'[PublishDate]'
					WHEN 3
						THEN N'[ExpireDate]'
					WHEN 4
						THEN N'[NumberOfViews]'
					WHEN 5
						THEN N'[RatingValue]'
					WHEN 6
						THEN N'[Title]'
					WHEN 7
						THEN N'[StartDate]'
					WHEN 8
						THEN N'CommentedDate'
					WHEN 9
						THEN N'[NumberOfComments]'
					WHEN 10
						THEN N'NEWID()'
					ELSE N'[PublishDate]'
					END
			
			SET @OrderByDirection = @SortOrder;
		END
		ELSE
		BEGIN	
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
			SET @OrderByDirection = N'DESC';
			SET @OrderByColumnName = N'[PublishDate]';
		END
END
ELSE IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END

IF @OrderByColumnName = N'NEWID()'
BEGIN
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
	SET @OrderByDirection = N''
END
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

SET @MainContentFilter = N'
;WITH AllContent AS( '

	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT ArticleID, CommentedDate,RecurringID,StartDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,inner_all.RecurringID
			,inner_all.StartDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID], inner_all.RecurringID ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @MainContentFilter = @MainContentFilter + N'inner_all.Featured DESC, '
			
			SET @MainContentFilter = @MainContentFilter + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
			
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc
		INNER JOIN (';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT n.ArticleID,n.Featured,
		CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate,
		CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
	IF @DateRangeType = 2
		SET @MainContentFilter = @MainContentFilter + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 1
		BEGIN
			IF @ListArchive = 0
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
			ELSE
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
		END
	ELSE IF @DateRangeType = 0
		SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE
		SET @MainContentFilter = @MainContentFilter + N' 1 = 0'
	
	SET @MainContentFilter = @MainContentFilter + N'
	WHERE n.ArticleID IN( '
	 
	 -- tu bi trebal staviti okolo da se filtrira po and !!!
	 
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID]
		FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.ArticleID IN ( ';
	END
	 
	SET @MainContentFilter = @MainContentFilter + N'
		SELECT [ArticleID]
		FROM (
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND ne.Recurring = 0 '

			IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

			IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
				ELSE
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
			END
			ELSE IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '


		SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 1
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
			IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N'
				((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
			ELSE IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
					ELSE
						SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
				END
			ELSE IF @DateRangeType = 0
				SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
			ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND ne.Recurring = 1 '

			IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N'
				UNION
				SELECT ArticleID
				FROM (
					SELECT ArticleID
					FROM (
						SELECT ti.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
						INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
						WHERE t.' + @sqlSharingPortalAll
						IF @SimpleSearchType = 4
						BEGIN
							SET @MainContentFilter = @MainContentFilter + N'
							UNION
							SELECT di.ArticleID
							FROM {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] AS d
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentItems] AS di ON di.DocumentID = d.DocEntryID
							INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
							WHERE d.' + @sqlSharingPortalAll + N'
								AND d.Visible = 1
							UNION
							SELECT li.ArticleID
							FROM {databaseOwner}[{objectQualifier}EasyDNNNewsLinks] AS l
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsLinkItems] AS li ON li.LinkID = l.LinkID
							INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
							WHERE l.' + @sqlSharingPortalAll
						END
					SET @MainContentFilter = @MainContentFilter + N'
					) AS allSearchFields
					INTERSECT
					SELECT ArticleID
					FROM (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

						SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
							AND ne.Recurring = 0 '

						IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

						IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
						END
						ELSE IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
								ELSE
									SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
							END
						ELSE IF @DateRangeType = 0
							SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

						SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
							AND ne.Recurring = 1 '

						IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

					SET @MainContentFilter = @MainContentFilter + N') AS permissionPerArticle';
				SET @MainContentFilter = @MainContentFilter + N') AS tagsdocumentsLinks';
			END

		SET @MainContentFilter = @MainContentFilter + N'
		) AS HasPermissionsFalse '

		IF @QueryPermissionsPerArticles = 1
		BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT [ArticleID] FROM (
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

					AND na.HasPermissions = 1
					AND ne.Recurring = 0 '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

					AND na.HasPermissions = 1
					AND ne.Recurring = 0 '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					IF @SimpleSearchFindCondition IS NOT NULL
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT ArticleID
						FROM (
							SELECT ArticleID
							FROM (
								SELECT ti.[ArticleID]
								FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
								INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
								WHERE t.' + @sqlSharingPortalAll
								IF @SimpleSearchType = 4
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N'
									UNION
									SELECT di.ArticleID
									FROM {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] AS d
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentItems] AS di ON di.DocumentID = d.DocEntryID
									INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
									WHERE d.' + @sqlSharingPortalAll + N'
										AND d.Visible = 1
									UNION
									SELECT li.ArticleID
									FROM {databaseOwner}[{objectQualifier}EasyDNNNewsLinks] AS l
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsLinkItems] AS li ON li.LinkID = l.LinkID
									INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
									WHERE l.' + @sqlSharingPortalAll
								END
							SET @MainContentFilter = @MainContentFilter + N'
							) AS allSearchFields
							INTERSECT
							SELECT ArticleID
							FROM (
								SELECT na.[ArticleID]
								FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID '

								SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
								AND na.HasPermissions = 1
								AND ne.Recurring = 0 '
								IF @CanEditAllContent = 0
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
									IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
									ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
								END
								IF @DateRangeType = 1
								BEGIN
									IF @ListArchive = 0
										SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
									ELSE
										SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
								END
								ELSE IF @DateRangeType = 2
									SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

								SET @MainContentFilter = @MainContentFilter + N'
								UNION
								SELECT na.[ArticleID]
								FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

								SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
								AND na.HasPermissions = 1
								AND ne.Recurring = 0 '
								IF @CanEditAllContent = 0
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
								END
								IF @DateRangeType = 1
								BEGIN
									IF @ListArchive = 0
										SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
									ELSE
										SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
								END
								ELSE IF @DateRangeType = 2
									SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

							SET @MainContentFilter = @MainContentFilter + N') AS permissionPerArticle';

						SET @MainContentFilter = @MainContentFilter + N') AS tagsdocumentsLinks';
					END
				
				SET @MainContentFilter = @MainContentFilter + N'
				) AS NotRecurring
				UNION ALL
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
				IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N'
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
					END
				ELSE IF @DateRangeType = 0
					SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
				ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

					AND na.HasPermissions = 1
					AND ne.Recurring = 1 '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					
				SET @MainContentFilter = @MainContentFilter + N' 
					UNION
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

					AND na.HasPermissions = 1
					AND ne.Recurring = 1 '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					END

					IF @SimpleSearchFindCondition IS NOT NULL
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT ArticleID
						FROM (
							SELECT ArticleID
							FROM (
								SELECT ti.[ArticleID]
								FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
								INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
								WHERE t.' + @sqlSharingPortalAll
								IF @SimpleSearchType = 4
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N'
									UNION
									SELECT di.ArticleID
									FROM {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] AS d
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentItems] AS di ON di.DocumentID = d.DocEntryID
									INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
									WHERE d.' + @sqlSharingPortalAll + N'
										AND d.Visible = 1
									UNION
									SELECT li.ArticleID
									FROM {databaseOwner}[{objectQualifier}EasyDNNNewsLinks] AS l
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsLinkItems] AS li ON li.LinkID = l.LinkID
									INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
									WHERE l.' + @sqlSharingPortalAll
								END
							SET @MainContentFilter = @MainContentFilter + N'
							) AS allSearchFields
							INTERSECT
							SELECT ArticleID
							FROM (
								SELECT na.[ArticleID]
								FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
								IF @DateRangeType = 2
									SET @MainContentFilter = @MainContentFilter + N'
									((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
										 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
								ELSE IF @DateRangeType = 1
									BEGIN
										IF @ListArchive = 0
											SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
										ELSE
											SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
									END
								ELSE IF @DateRangeType = 0
									SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
								ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

								SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'

								AND na.HasPermissions = 1
								AND ne.Recurring = 1 '
								IF @CanEditAllContent = 0
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
									IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
									ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
								END

								SET @MainContentFilter = @MainContentFilter + N'
								UNION
								SELECT na.[ArticleID]
								FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
								IF @DateRangeType = 2
									SET @MainContentFilter = @MainContentFilter + N'
									((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
										 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
								ELSE IF @DateRangeType = 1
									BEGIN
										IF @ListArchive = 0
											SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
										ELSE
											SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
									END
								ELSE IF @DateRangeType = 0
									SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
								ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

								SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'

								AND na.HasPermissions = 1
								AND ne.Recurring = 1 '
								IF @CanEditAllContent = 0
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
								END

							SET @MainContentFilter = @MainContentFilter + N') AS permissionPerArticle';

						SET @MainContentFilter = @MainContentFilter + N') AS tagsdocumentsLinks';
					END

				SET @MainContentFilter = @MainContentFilter + N' 
				) AS Recurring
			) AS HasPermissionsTrue '
		END
	-- treba desti ako se koristi AND operator
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	
	SET @MainContentFilter = @MainContentFilter + N'
	) '
	
	IF @OrderByColumnName = N'CommentedDate'
		SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON nc.ArticleID = inner_all.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1'
	
SET @MainContentFilter = @MainContentFilter + N' 
) '

SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent '

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
	,e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], '
ELSE
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], ';


IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N'0 AS CanEdit, '
ELSE IF @CanEditAllContent = 1
	SET @sqlcommand = @sqlcommand + N'1 AS CanEdit, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE WHEN @HasEditCategories = 0
	THEN 
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	ELSE
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE '
			IF @EditOnlyAsOwner = 1
				SET @sqlcommand = @sqlcommand + N' n.UserID = @UserID AND '

			SET @sqlcommand = @sqlcommand + N' c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	END
	AS CanEdit, '
END

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '
ELSE
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", lc.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.Id
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N' 0 AS Published, 0 AS Approve, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE n.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	END AS Published, '
	IF @UserCanApprove = 0
		SET @sqlcommand = @sqlcommand + N'0 AS Approve, '
	ELSE
		SET @sqlcommand = @sqlcommand + N'
			CASE n.Approved
				WHEN 1 THEN 0
				WHEN 0 THEN n.Active
			END AS Approve, '
END
SET @sqlcommand = @sqlcommand + N' @AllContentCount AS ContentCount '

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N',e_fsd.' + @OrderByColumnName + ',(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END)
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
				,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC'
					SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
END

SET @sqlcommand = @sqlcommand + N' ORDER BY '
	IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'Featured DESC, '
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
		SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#UserEditCategories'') IS NOT NULL
		DROP TABLE #UserEditCategories; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
		DROP TABLE #LocalizedCategories; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '
		
EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRangeType = @DateRangeType
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@StartDate = @StartDate
	,@OuterModuleID = @OuterModuleID
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@FieldsTemplateID = @FieldsTemplateID
	,@SimpleSearchFindCondition = @SimpleSearchFindCondition
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewAllContent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewAllContent] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewAllContent]
	@PortalID INT,
	@UserID INT,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@MenuModuleID INT,
	@DefaultTabID INT,
    @DefaultModuleID INT,
	@AdminOrSuperUser BIT  = 0,
	@CountEventsLimitByDays INT = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@LocaleCode NVARCHAR(20) = NULL,	
	@Perm_ViewAllCategores BIT = 1,
	@ShowAllAuthors BIT = 1,
	@CategoryFilterType TINYINT = 0,
	@HideUnlocalizedItems BIT = 0,
	@EditOnlyAsOwner BIT = 0,
	@PermissionSettingsSource TINYINT = 0,
	@PermissionsModuleID INT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
DECLARE @sqlcommand NVARCHAR(MAX);

DECLARE @sqlSharingPortal VARCHAR(300);
DECLARE @PortalsCount INT;
DECLARE @IsPortalSharing BIT;

CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY);

INSERT INTO #SharingPortals
SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @MenuModuleID;

SELECT @PortalsCount = @@ROWCOUNT;

IF @PortalsCount = 0
BEGIN
	SET @IsPortalSharing = 0;
	INSERT INTO #SharingPortals SELECT @PortalID
	SET @sqlSharingPortal = N' = @PortalID ';
END
ELSE
BEGIN
	SET @IsPortalSharing = 1;
	IF @PortalsCount = 1
	BEGIN
		SET @PortalID = (SELECT PortalID FROM #SharingPortals); -- because of social dnn tvf
		SET @sqlSharingPortal = N' = @PortalID ';
	END
	ELSE
		SET @sqlSharingPortal = N' IN (SELECT PortalID FROM #SharingPortals) ';
END

IF @UserID <> -1
BEGIN
	INSERT INTO #UserInRoles
	EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsUserRoles] @PortalID,@UserID,@IsPortalSharing;
END

INSERT INTO #ViewCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsViewCategories] @PortalID,@PermissionsModuleID,@UserID,@AdminOrSuperUser,@PermissionSettingsSource,@IsPortalSharing;

INSERT INTO #FilterCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsFilterCategories] @PortalID,@MenuModuleID,@CategoryFilterType,NULL,NULL,NULL,@MenuModuleID;

INSERT INTO #ViewCategoriesWithFilter
SELECT c.CategoryID FROM #ViewCategories AS c WHERE c.CategoryID IN (SELECT CategoryID FROM #FilterCategories);

SET @paramList = N'
	 @PortalID INT
	,@UserID INT
	,@OrderByColumnName VARCHAR(30)
	,@OrderByDirection VARCHAR(4)
	,@OrderByCustomFieldID INT
	,@MenuModuleID INT
	,@DefaultTabID INT
    ,@DefaultModuleID INT
	,@AdminOrSuperUser BIT
	,@CountEventsLimitByDays INT
	,@IsSocialInstance BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@LocaleCode NVARCHAR(20)	
	,@Perm_ViewAllCategores BIT
	,@ShowAllAuthors BIT
	,@CategoryFilterType TINYINT
	,@HideUnlocalizedItems BIT
	,@EditOnlyAsOwner BIT
	,@PermissionSettingsSource TINYINT
	,@PermissionsModuleID INT'

DECLARE @DateRangeType TINYINT;
SET @DateRangeType = 0;

IF @CountEventsLimitByDays IS NOT NULL
	SET @DateRangeType = 2;

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @StartDate DATETIME;

DECLARE @DateRangeType TINYINT;
SET @DateRangeType = 0;
IF @CountEventsLimitByDays IS NOT NULL
BEGIN
	SET @StartDate = DATEADD(DD, -@CountEventsLimitByDays, @CurrentDate);
	SET @DateRangeType = 2;
END '

SET @sqlcommand = @sqlcommand + N' 
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
IF @IsSocialInstance = 0
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @MenuModuleID
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @MenuModuleID
	END
END

DECLARE @tempMenuCats TABLE(
	[CategoryID] INT PRIMARY KEY,
	[PortalID] INT,
	[CategoryName] NVARCHAR(200),
	[Position] INT,
	[ParentCategory] INT,
	[Level] INT,
	[CategoryURL] NVARCHAR(1500),
	[CategoryImage] NVARCHAR(1500),
	[CategoryText] NVARCHAR(MAX),
	[Color] NVARCHAR(16),
	[Show] BIT)

IF @LocaleCode IS NOT NULL
BEGIN
	INSERT INTO @tempMenuCats
	SELECT c.[CategoryID],c.[PortalID],
	CASE WHEN cl.CategoryID IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS CategoryName,
	c.[Position],c.[ParentCategory],c.[Level],
	CASE WHEN cl.CategoryID IS NULL THEN c.[CategoryURL] ELSE cl.[CategoryURL] END AS CategoryURL,c.[CategoryImage],
	CASE WHEN cl.CategoryID IS NULL THEN c.[CategoryText] ELSE cl.[CategoryText] END AS CategoryName, c.[Color],''1'' AS Show
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) AND PortalID ' + @sqlSharingPortal + '
	UNION ALL
	SELECT [CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText],[Color],''0'' AS Show
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cat
	WHERE cat.CategoryID NOT IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) AND PortalID ' + @sqlSharingPortal + '
END
ELSE
BEGIN
	INSERT @tempMenuCats
	SELECT [CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText],[Color],''1'' AS Show
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cat
	WHERE cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) AND PortalID ' + @sqlSharingPortal + '
	UNION ALL
	SELECT [CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText],[Color],''0'' AS Show
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cat
	WHERE cat.CategoryID NOT IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) AND PortalID ' + @sqlSharingPortal + '
END
  
SELECT TOP 1 @DefaultTabID = TabID
FROM {databaseOwner}[{objectQualifier}TabModules]
WHERE ModuleID = @DefaultModuleID;

DECLARE @TempCategoryIDAndCount TABLE (CategoryID INT PRIMARY KEY, PortalID INT NOT NULL, CategoryName NVARCHAR(200) NOT NULL, Position INT NOT NULL, ParentCategory INT, Level INT NOT NULL, CategoryURL NVARCHAR(1500), Show BIT NOT NULL, Count INT NOT NULL, NewsModuleID INT NOT NULL,TabID INT NOT NULL); ';

DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
IF @IsSocialInstance = 1
BEGIN
	IF @FilterByDNNGroupID <> 0
	BEGIN	
		SET @FilterBySocialGroup = 1;
	END
END

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END

IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

SET @sqlcommand = @sqlcommand +	N'
INSERT INTO @TempCategoryIDAndCount
SELECT CategoryID, PortalID, CategoryName, Position, ParentCategory, Level, CategoryURL, Show,
CASE Show
	WHEN 0 THEN 0
	WHEN 1 THEN	
		CASE @AdminOrSuperUser
		WHEN 1 THEN(
		SELECT ((
			SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
			WHERE n.PortalID ' + @sqlSharingPortal + '
				AND n.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
				AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
				AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
			)+(
			SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 0 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
			WHERE n.PortalID ' + @sqlSharingPortal + '
				AND n.EventArticle = 1
				AND ne.Recurring = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
				AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
				AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
				AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
			)+(
			SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 =
				CASE WHEN @CountEventsLimitByDays IS NOT NULL THEN -- @StartDate min value
					CASE WHEN ne.UpcomingOccurrences > 1
					THEN
						CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
							THEN 1
							ELSE 0
						END
					ELSE
						CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(1) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
							THEN 1
							ELSE 0
						END
					END
				ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
					CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY RecurringID)
						THEN 1
						ELSE 0
					END
				END	 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
			WHERE n.PortalID ' + @sqlSharingPortal + '
				AND n.EventArticle = 1
				AND ne.Recurring = 1 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
				AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
				AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
			))
		)
		WHEN 0 THEN(
			SELECT ((
				SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
				WHERE n.PortalID ' + @sqlSharingPortal + '
					AND n.HasPermissions = 0
					AND n.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
					AND n.Approved = 1
					AND (n.Active=1 OR n.UserID=@UserID)
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				)+(
				SELECT COUNT(n.[ArticleID]) AS cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 0 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
				WHERE n.PortalID ' + @sqlSharingPortal + '
					AND n.HasPermissions = 0
					AND n.EventArticle = 1
					AND ne.Recurring = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
					AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
					AND n.Approved = 1
					AND (n.Active=1 OR n.UserID=@UserID)
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				)+(
				SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 =
					CASE WHEN @CountEventsLimitByDays IS NOT NULL THEN -- @StartDate min value
						CASE WHEN ne.UpcomingOccurrences > 1
						THEN
							CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
								THEN 1
								ELSE 0
							END
						ELSE
							CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(1) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
								THEN 1
								ELSE 0
							END
						END
					ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
						CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY RecurringID)
							THEN 1
							ELSE 0
						END
					END	 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
				WHERE n.PortalID ' + @sqlSharingPortal + '
					AND n.HasPermissions = 0
					AND n.EventArticle = 1
					AND ne.Recurring = 1 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
					AND n.Approved = 1
					AND (n.Active=1 OR n.UserID=@UserID)
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				)+(
				SELECT COUNT(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
				WHERE n.PortalID ' + @sqlSharingPortal + '
					AND n.HasPermissions = 1
					AND n.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
	 				AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
					AND n.Approved = 1
					AND (n.Active=1 OR n.UserID=@UserID)	
					AND ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				)+(
				SELECT COUNT([ArticleID]) FROM (
					SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
					WHERE n.PortalID ' + @sqlSharingPortal + '
						AND n.HasPermissions = 1
						AND n.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
	 					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
						AND n.Approved = 1
						AND (n.Active=1 OR n.UserID=@UserID)	
						AND ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
					UNION
					SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
					WHERE n.PortalID ' + @sqlSharingPortal + '
						AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
						AND n.HasPermissions = 1
						AND n.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
						AND n.Approved = 1
						AND (n.Active=1 OR n.UserID=@UserID)
						AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				) AS UserAndRolePermissions						
				)
				)+(
				SELECT COUNT(ArticleID) FROM (			
					SELECT ArticleID FROM (
						SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 0 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
						WHERE n.PortalID ' + @sqlSharingPortal + '
							AND n.HasPermissions = 1
							AND n.EventArticle = 1
							AND ne.Recurring = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
	 						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
	 						AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
							AND n.Approved = 1
							AND (n.Active=1 OR n.UserID=@UserID)	
							AND ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
						UNION ALL
						SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 =
							CASE WHEN @CountEventsLimitByDays IS NOT NULL THEN -- @StartDate min value
								CASE WHEN ne.UpcomingOccurrences > 1
								THEN
									CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
										THEN 1
										ELSE 0
									END
								ELSE
									CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									 OR (nerd.RecurringID IN (SELECT TOP(1) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
										THEN 1
										ELSE 0
									END
								END
							ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
								CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY RecurringID)
									THEN 1
									ELSE 0
								END
							END '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
						WHERE n.PortalID ' + @sqlSharingPortal + '
							AND n.HasPermissions = 1
							AND n.EventArticle = 1
							AND ne.Recurring = 1 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
	 						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
							AND n.Approved = 1
							AND (n.Active=1 OR n.UserID=@UserID)	
							AND ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
						
					) AS PermissionsByUser
					UNION
					SELECT ArticleID FROM (
						SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 0 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
						WHERE n.PortalID ' + @sqlSharingPortal + '
							AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
							AND n.HasPermissions = 1
							AND n.EventArticle = 1
							AND ne.Recurring = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
							AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
							AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
							AND n.Approved = 1
							AND (n.Active=1 OR n.UserID=@UserID)
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
						UNION ALL
						SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 =
							CASE WHEN @CountEventsLimitByDays IS NOT NULL THEN -- @StartDate min value
								CASE WHEN ne.UpcomingOccurrences > 1
								THEN
									CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
										THEN 1
										ELSE 0
									END
								ELSE
									CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									 OR (nerd.RecurringID IN (SELECT TOP(1) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
										THEN 1
										ELSE 0
									END
								END
							ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
								CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY RecurringID)
									THEN 1
									ELSE 0
								END
							END '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
						WHERE n.PortalID ' + @sqlSharingPortal + '
							AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
							AND n.HasPermissions = 1
							AND n.EventArticle = 1
							AND ne.Recurring = 1 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
							AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
							AND n.Approved = 1
							AND (n.Active=1 OR n.UserID=@UserID)
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
					) AS PermissionsByRoles
				) AS PermissionsByUserAndRole
			)
		)
	END		
END AS ''Count'',NewsModuleID,TabID
FROM (
	SELECT	ncl.[CategoryID],
			ncl.[PortalID],
			ncl.[CategoryName],
			ncl.[Position],
			ncl.[ParentCategory],
			ncl.[Level],
			ncl.[CategoryURL],
			ncl.Show,
	CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
	CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats AS ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl
	ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID
) AS Result;

SELECT * FROM @TempCategoryIDAndCount ORDER BY PortalID, Position; '

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand +	N'
SELECT n.ArticleID, CASE WHEN n.[EventArticle] = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS ''RecurringID'', n.Title,n.TitleLink,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified, '
ELSE
SET @sqlcommand = @sqlcommand +	N'
SELECT n.ArticleID, CASE WHEN n.[EventArticle] = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS ''RecurringID'', CASE WHEN ncl.Title IS NULL THEN n.Title ELSE ncl.Title END AS Title, CASE WHEN ncl.clTitleLink IS NULL THEN n.TitleLink ELSE ncl.clTitleLink END AS TitleLink,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified, '

IF @OrderByCustomFieldID IS NOT NULL
SET @sqlcommand = @sqlcommand +	N'fv.' + @OrderByColumnName + ',';

IF @OrderByColumnName = N'StartDate'
SET @sqlcommand = @sqlcommand +	N' CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate, ';


SET @sqlcommand = @sqlcommand +	N'
	n.HasPermissions, n.Active, n.Approved, n.NumberOfComments,n.UserID, c.[CategoryID], tci.[Position], tci.Count, tci.NewsModuleID,tci.TabID, n.DetailType, n.DetailTypeData
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] c ON n.ArticleID = c.ArticleID 
	INNER JOIN @TempCategoryIDAndCount AS tci ON tci.CategoryID = c.CategoryID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = c.CategoryID AND cidl.Show = 1
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND '
	IF @DateRangeType = 2
		SET @sqlcommand = @sqlcommand + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 0
		SET @sqlcommand = @sqlcommand + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
	
	IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
	ELSE IF @LocaleCode IS NOT NULL SET @sqlcommand = @sqlcommand + N' LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON n.ArticleID = ncl.ArticleID AND ncl.LocaleCode = @LocaleCode '

	IF @IsSocialInstance <> 0
	BEGIN
		IF @FilterBySocialGroup = 1
		BEGIN
			SET @sqlcommand = @sqlcommand +	N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
		END
		ELSE IF @FilterByDNNUserID <> 0
		BEGIN
			SET @sqlcommand = @sqlcommand +	N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
		END
	END
	
	IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
	SET @sqlcommand = @sqlcommand +	N'
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID '
	END
	
SET @sqlcommand = @sqlcommand + N' 
WHERE n.ArticleID IN(
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 0
		AND na.EventArticle = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND (na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserID))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL -- simple event
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND (na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserID))
		AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL -- recurring event
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
		IF @DateRangeType = 2
			SET @sqlcommand = @sqlcommand + N'
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
		ELSE IF @DateRangeType = 0
			SET @sqlcommand = @sqlcommand + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
		ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
	SET @sqlcommand = @sqlcommand + N'
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 1 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND (na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserID))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
			AND aup.Show = 1 AND na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserID)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
			AND aup.Show = 1 AND na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserID)
		))
		AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
		IF @DateRangeType = 2
			SET @sqlcommand = @sqlcommand + N'
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
		ELSE IF @DateRangeType = 0
			SET @sqlcommand = @sqlcommand + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
		ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
	SET @sqlcommand = @sqlcommand + N'
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
			AND aup.Show = 1 AND na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserID)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((na.Approved=1
			AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION All
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((na.Approved=1
			AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
		))
		AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION All
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
		IF @DateRangeType = 2
			SET @sqlcommand = @sqlcommand + N'
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
		ELSE IF @DateRangeType = 0
			SET @sqlcommand = @sqlcommand + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
		ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
	SET @sqlcommand = @sqlcommand + N'
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((na.Approved=1
			AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
) '
IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';

SET @sqlcommand = @sqlcommand + N'
ORDER BY tci.PortalID, tci.Position, '

IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
	SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@OrderByColumnName = @OrderByColumnName
	,@OrderByDirection = @OrderByDirection
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@MenuModuleID = @MenuModuleID
	,@DefaultTabID = @DefaultTabID
    ,@DefaultModuleID = @DefaultModuleID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CountEventsLimitByDays = @CountEventsLimitByDays
	,@IsSocialInstance = @IsSocialInstance
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@LocaleCode = @LocaleCode	
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@ShowAllAuthors = @ShowAllAuthors
	,@CategoryFilterType = @CategoryFilterType
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@PermissionsModuleID = @PermissionsModuleID
	
IF OBJECT_ID('tempdb..#SharingPortals') IS NOT NULL
	DROP TABLE #SharingPortals;
IF OBJECT_ID('tempdb..#UserInRoles') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID('tempdb..#ViewCategories') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID('tempdb..#FilterCategories') IS NOT NULL
	DROP TABLE #FilterCategories;
IF OBJECT_ID('tempdb..#ViewCategoriesWithFilter') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewArticles]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewArticles] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewArticles]
	@PortalID INT,
	@UserID INT,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@MenuModuleID INT,
	@DefaultTabID INT,
    @DefaultModuleID INT,
	@AdminOrSuperUser BIT  = 0,
	@CountEventsLimitByDays INT = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@LocaleCode NVARCHAR(20) = NULL,	
	@Perm_ViewAllCategores BIT = 1,
	@ShowAllAuthors BIT = 1,
	@CategoryFilterType TINYINT = 0,
	@HideUnlocalizedItems BIT = 0,
	@EditOnlyAsOwner BIT = 0,
	@PermissionSettingsSource TINYINT = 0,
	@PermissionsModuleID INT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
DECLARE @sqlcommand NVARCHAR(MAX);

DECLARE @sqlSharingPortal VARCHAR(300);
DECLARE @PortalsCount INT;
DECLARE @IsPortalSharing BIT;

CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY);

INSERT INTO #SharingPortals
SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @MenuModuleID;

SELECT @PortalsCount = @@ROWCOUNT;

IF @PortalsCount = 0
BEGIN
	SET @IsPortalSharing = 0;
	INSERT INTO #SharingPortals SELECT @PortalID
	SET @sqlSharingPortal = N' = @PortalID ';
END
ELSE
BEGIN
	SET @IsPortalSharing = 1;
	IF @PortalsCount = 1
	BEGIN
		SET @PortalID = (SELECT PortalID FROM #SharingPortals); -- because of social dnn tvf
		SET @sqlSharingPortal = N' = @PortalID ';
	END
	ELSE
		SET @sqlSharingPortal = N' IN (SELECT PortalID FROM #SharingPortals) ';
END

IF @UserID <> -1
BEGIN
	INSERT INTO #UserInRoles
	EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsUserRoles] @PortalID,@UserID,@IsPortalSharing;
END

INSERT INTO #ViewCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsViewCategories] @PortalID,@PermissionsModuleID,@UserID,@AdminOrSuperUser,@PermissionSettingsSource,@IsPortalSharing;

INSERT INTO #FilterCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsFilterCategories] @PortalID,@MenuModuleID,@CategoryFilterType,NULL,NULL,NULL,@MenuModuleID;

INSERT INTO #ViewCategoriesWithFilter
SELECT c.CategoryID FROM #ViewCategories AS c WHERE c.CategoryID IN (SELECT CategoryID FROM #FilterCategories);

SET @paramList = N'
	 @PortalID INT
	,@UserID INT
	,@OrderByColumnName VARCHAR(30)
	,@OrderByDirection VARCHAR(4)
	,@OrderByCustomFieldID INT
	,@MenuModuleID INT
	,@DefaultTabID INT
    ,@DefaultModuleID INT
	,@AdminOrSuperUser BIT
	,@CountEventsLimitByDays INT
	,@IsSocialInstance BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@LocaleCode NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@ShowAllAuthors BIT
	,@CategoryFilterType TINYINT
	,@HideUnlocalizedItems BIT
	,@EditOnlyAsOwner BIT
	,@PermissionSettingsSource TINYINT
	,@PermissionsModuleID INT'

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @StartDate DATETIME;

DECLARE @DateRangeType TINYINT;
SET @DateRangeType = 0;
IF @CountEventsLimitByDays IS NOT NULL
BEGIN
	SET @StartDate = DATEADD(DD, -@CountEventsLimitByDays, @CurrentDate);
	SET @DateRangeType = 2;
END '

SET @sqlcommand = @sqlcommand + N' 
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
IF @IsSocialInstance = 0
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @MenuModuleID
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @MenuModuleID
	END
END

DECLARE @tempMenuCats TABLE(
	[CategoryID] INT PRIMARY KEY,
	[PortalID] INT,
	[CategoryName] NVARCHAR(200),
	[Position] INT,
	[ParentCategory] INT,
	[Level] INT,
	[CategoryURL] NVARCHAR(1500),
	[CategoryImage] NVARCHAR(1500),
	[CategoryText] NVARCHAR(MAX),
	[Color] NVARCHAR(16),
	[Show] BIT)

IF @LocaleCode IS NOT NULL
BEGIN
	INSERT INTO @tempMenuCats
	SELECT c.[CategoryID],c.[PortalID],
	CASE WHEN cl.CategoryID IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS CategoryName,
	c.[Position],c.[ParentCategory],c.[Level],
	CASE WHEN cl.CategoryID IS NULL THEN c.[CategoryURL] ELSE cl.[CategoryURL] END AS CategoryURL,c.[CategoryImage],
	CASE WHEN cl.CategoryID IS NULL THEN c.[CategoryText] ELSE cl.[CategoryText] END AS CategoryName, c.[Color],''1'' AS Show
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) AND PortalID ' + @sqlSharingPortal + '
	UNION ALL
	SELECT [CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText],[Color],''0'' AS Show
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cat
	WHERE cat.CategoryID NOT IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) AND PortalID ' + @sqlSharingPortal + '
END
ELSE
BEGIN
	INSERT @tempMenuCats
	SELECT [CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText],[Color],''1'' AS Show
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cat
	WHERE cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) AND PortalID ' + @sqlSharingPortal + '
	UNION ALL
	SELECT [CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText],[Color],''0'' AS Show
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cat
	WHERE cat.CategoryID NOT IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) AND PortalID ' + @sqlSharingPortal + '
END
  
SELECT TOP 1 @DefaultTabID = TabID
FROM {databaseOwner}[{objectQualifier}TabModules]
WHERE ModuleID = @DefaultModuleID;

DECLARE @TempCategoryIDAndCount TABLE (CategoryID INT PRIMARY KEY, PortalID INT NOT NULL, CategoryName NVARCHAR(200) NOT NULL, Position INT NOT NULL, ParentCategory INT, Level INT NOT NULL, CategoryURL NVARCHAR(1500), Show BIT NOT NULL, Count INT NOT NULL, NewsModuleID INT NOT NULL,TabID INT NOT NULL); ';

DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
IF @IsSocialInstance = 1
BEGIN
	IF @FilterByDNNGroupID <> 0
	BEGIN	
		SET @FilterBySocialGroup = 1;
	END
END

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END

IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;


SET @sqlcommand = @sqlcommand +	N'
INSERT INTO @TempCategoryIDAndCount

SELECT CategoryID, PortalID, CategoryName, Position, ParentCategory, Level, CategoryURL, Show,
CASE Show
	WHEN 0 THEN 0
	WHEN 1 THEN	
		CASE @AdminOrSuperUser
		WHEN 1 THEN(
			SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
			WHERE n.PortalID ' + @sqlSharingPortal + '
				AND n.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
				AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
				AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))			 
		)
		WHEN 0 THEN(
			SELECT ((
				SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID '
					IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @IsSocialInstance <> 0
					BEGIN
						IF @FilterBySocialGroup = 1
						BEGIN
							SET @sqlcommand = @sqlcommand +	N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						END
						ELSE IF @FilterByDNNUserID <> 0
						BEGIN
							SET @sqlcommand = @sqlcommand +	N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						END
					END
				SET @sqlcommand = @sqlcommand +	N'
				WHERE n.PortalID ' + @sqlSharingPortal + '
					AND n.HasPermissions = 0
					AND n.EventArticle = 0 '
					IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
					IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
					SET @sqlcommand = @sqlcommand +	N'
					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
					AND n.Approved = 1
					AND (n.Active=1 OR n.UserID=@UserID)
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				)+(
				SELECT COUNT([ArticleID]) FROM (
					SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @IsSocialInstance <> 0
						BEGIN
							IF @FilterBySocialGroup = 1
							BEGIN
								SET @sqlcommand = @sqlcommand +	N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							END
							ELSE IF @FilterByDNNUserID <> 0
							BEGIN
								SET @sqlcommand = @sqlcommand +	N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							END
						END
					SET @sqlcommand = @sqlcommand +	N'
					WHERE n.PortalID ' + @sqlSharingPortal + '
						AND n.HasPermissions = 1
						AND n.EventArticle = 0 '
						IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
						SET @sqlcommand = @sqlcommand +	N'
	 					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
						AND n.Approved = 1
						AND (n.Active=1 OR n.UserID=@UserID)	
						AND ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
					UNION
					SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @IsSocialInstance <> 0
						BEGIN
							IF @FilterBySocialGroup = 1
							BEGIN
								SET @sqlcommand = @sqlcommand +	N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							END
							ELSE IF @FilterByDNNUserID <> 0
							BEGIN
								SET @sqlcommand = @sqlcommand +	N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							END
						END
					SET @sqlcommand = @sqlcommand +	N'
					WHERE n.PortalID ' + @sqlSharingPortal + '
						AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
						AND n.HasPermissions = 1
						AND n.EventArticle = 0 '
						IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
						SET @sqlcommand = @sqlcommand +	N'
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
						AND n.Approved = 1
						AND (n.Active=1 OR n.UserID=@UserID)
						AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				) AS UserAndRolePermissions
			))
		)
	END		
END AS ''Count'',NewsModuleID,TabID
FROM (
	SELECT	ncl.[CategoryID],
			ncl.[PortalID],
			ncl.[CategoryName],
			ncl.[Position],
			ncl.[ParentCategory],
			ncl.[Level],
			ncl.[CategoryURL],
			ncl.Show,
	CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
	CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats AS ncl
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID
) AS Result;

SELECT * FROM @TempCategoryIDAndCount ORDER BY PortalID, Position; '

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand +	N'
SELECT n.ArticleID, NULL AS ''RecurringID'', n.Title,n.TitleLink,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified, '
ELSE
SET @sqlcommand = @sqlcommand +	N'
SELECT n.ArticleID, NULL AS ''RecurringID'', CASE WHEN ncl.Title IS NULL THEN n.Title ELSE ncl.Title END AS Title, CASE WHEN ncl.clTitleLink IS NULL THEN n.TitleLink ELSE ncl.clTitleLink END AS TitleLink,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified, '

IF @OrderByCustomFieldID IS NOT NULL
SET @sqlcommand = @sqlcommand +	N'fv.' + @OrderByColumnName + ',';

SET @sqlcommand = @sqlcommand +	N'
	n.HasPermissions, n.Active, n.Approved, n.NumberOfComments,n.UserID, c.[CategoryID], tci.[Position], tci.Count, tci.NewsModuleID,tci.TabID, n.DetailType, n.DetailTypeData
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] c ON n.ArticleID = c.ArticleID 
	INNER JOIN @TempCategoryIDAndCount AS tci ON tci.CategoryID = c.CategoryID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = c.CategoryID AND cidl.Show = 1 '
IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
ELSE IF @LocaleCode IS NOT NULL SET @sqlcommand = @sqlcommand + N' LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON n.ArticleID = ncl.ArticleID AND ncl.LocaleCode = @LocaleCode '

IF @IsSocialInstance <> 0
BEGIN
	IF @FilterBySocialGroup = 1
	BEGIN
		SET @sqlcommand = @sqlcommand +	N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
	END
	ELSE IF @FilterByDNNUserID <> 0
	BEGIN
		SET @sqlcommand = @sqlcommand +	N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
	END
END

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
SET @sqlcommand = @sqlcommand +	N'
LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID '
END

SET @sqlcommand = @sqlcommand +	N'
WHERE n.ArticleID IN(
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID=@UserID))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
			AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID=@UserID)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((na.Approved = 1
			AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
) '
IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';

SET @sqlcommand = @sqlcommand + N'
ORDER BY tci.PortalID, tci.Position, '

IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
	SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@OrderByColumnName = @OrderByColumnName
	,@OrderByDirection = @OrderByDirection
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@MenuModuleID = @MenuModuleID
	,@DefaultTabID = @DefaultTabID
    ,@DefaultModuleID = @DefaultModuleID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CountEventsLimitByDays = @CountEventsLimitByDays
	,@IsSocialInstance = @IsSocialInstance
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@LocaleCode = @LocaleCode	
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@ShowAllAuthors = @ShowAllAuthors
	,@CategoryFilterType = @CategoryFilterType
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@PermissionsModuleID = @PermissionsModuleID
	
IF OBJECT_ID('tempdb..#SharingPortals') IS NOT NULL
	DROP TABLE #SharingPortals;
IF OBJECT_ID('tempdb..#UserInRoles') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID('tempdb..#ViewCategories') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID('tempdb..#FilterCategories') IS NOT NULL
	DROP TABLE #FilterCategories;
IF OBJECT_ID('tempdb..#ViewCategoriesWithFilter') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewEvents] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewEvents]
	@PortalID INT,
	@UserID INT,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@MenuModuleID INT,
	@DefaultTabID INT,
    @DefaultModuleID INT,
	@AdminOrSuperUser BIT  = 0,
	@CountEventsLimitByDays INT = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@LocaleCode NVARCHAR(20) = NULL,	
	@Perm_ViewAllCategores BIT = 1,
	@ShowAllAuthors BIT = 1,
	@CategoryFilterType TINYINT = 0,
	@HideUnlocalizedItems BIT = 0,
	@EditOnlyAsOwner BIT = 0,
	@PermissionSettingsSource TINYINT = 0,
	@PermissionsModuleID INT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
DECLARE @sqlcommand NVARCHAR(MAX);

DECLARE @sqlSharingPortal VARCHAR(300);
DECLARE @PortalsCount INT;
DECLARE @IsPortalSharing BIT;

CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY);

INSERT INTO #SharingPortals
SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @MenuModuleID;

SELECT @PortalsCount = @@ROWCOUNT;

IF @PortalsCount = 0
BEGIN
	SET @IsPortalSharing = 0;
	INSERT INTO #SharingPortals SELECT @PortalID
	SET @sqlSharingPortal = N' = @PortalID ';
END
ELSE
BEGIN
	SET @IsPortalSharing = 1;
	IF @PortalsCount = 1
	BEGIN
		SET @PortalID = (SELECT PortalID FROM #SharingPortals); -- because of social dnn tvf
		SET @sqlSharingPortal = N' = @PortalID ';
	END
	ELSE
		SET @sqlSharingPortal = N' IN (SELECT PortalID FROM #SharingPortals) ';
END

IF @UserID <> -1
BEGIN
	INSERT INTO #UserInRoles
	EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsUserRoles] @PortalID,@UserID,@IsPortalSharing;
END

INSERT INTO #ViewCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsViewCategories] @PortalID,@PermissionsModuleID,@UserID,@AdminOrSuperUser,@PermissionSettingsSource,@IsPortalSharing;

INSERT INTO #FilterCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsFilterCategories] @PortalID,@MenuModuleID,@CategoryFilterType,NULL,NULL,NULL,@MenuModuleID;

INSERT INTO #ViewCategoriesWithFilter
SELECT c.CategoryID FROM #ViewCategories AS c WHERE c.CategoryID IN (SELECT CategoryID FROM #FilterCategories);

SET @paramList = N'
	 @PortalID INT
	,@UserID INT
	,@OrderByColumnName VARCHAR(30)
	,@OrderByDirection VARCHAR(4)
	,@OrderByCustomFieldID INT
	,@MenuModuleID INT
	,@DefaultTabID INT
    ,@DefaultModuleID INT
	,@AdminOrSuperUser BIT
	,@CountEventsLimitByDays INT
	,@IsSocialInstance BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@LocaleCode NVARCHAR(20)	
	,@Perm_ViewAllCategores BIT
	,@ShowAllAuthors BIT
	,@CategoryFilterType TINYINT
	,@HideUnlocalizedItems BIT
	,@EditOnlyAsOwner BIT
	,@PermissionSettingsSource TINYINT
	,@PermissionsModuleID INT'

DECLARE @DateRangeType TINYINT;
SET @DateRangeType = 0;

IF @CountEventsLimitByDays IS NOT NULL
	SET @DateRangeType = 2;

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @StartDate DATETIME;

DECLARE @DateRangeType TINYINT;
SET @DateRangeType = 0;
IF @CountEventsLimitByDays IS NOT NULL
BEGIN
	SET @StartDate = DATEADD(DD, -@CountEventsLimitByDays, @CurrentDate);
	SET @DateRangeType = 2;
END '

SET @sqlcommand = @sqlcommand + N' 
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
IF @IsSocialInstance = 0
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @MenuModuleID
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @MenuModuleID
	END
END

DECLARE @tempMenuCats TABLE(
	[CategoryID] INT PRIMARY KEY,
	[PortalID] INT,
	[CategoryName] NVARCHAR(200),
	[Position] INT,
	[ParentCategory] INT,
	[Level] INT,
	[CategoryURL] NVARCHAR(1500),
	[CategoryImage] NVARCHAR(1500),
	[CategoryText] NVARCHAR(MAX),
	[Color] NVARCHAR(16),
	[Show] BIT)

IF @LocaleCode IS NOT NULL
BEGIN
	INSERT INTO @tempMenuCats
	SELECT c.[CategoryID],c.[PortalID],
	CASE WHEN cl.CategoryID IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS CategoryName,
	c.[Position],c.[ParentCategory],c.[Level],
	CASE WHEN cl.CategoryID IS NULL THEN c.[CategoryURL] ELSE cl.[CategoryURL] END AS CategoryURL,c.[CategoryImage],
	CASE WHEN cl.CategoryID IS NULL THEN c.[CategoryText] ELSE cl.[CategoryText] END AS CategoryName, c.[Color],''1'' AS Show
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) AND PortalID ' + @sqlSharingPortal + '
	UNION ALL
	SELECT [CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText],[Color],''0'' AS Show
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cat
	WHERE cat.CategoryID NOT IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) AND PortalID ' + @sqlSharingPortal + '
END
ELSE
BEGIN
	INSERT @tempMenuCats
	SELECT [CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText],[Color],''1'' AS Show
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cat
	WHERE cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) AND PortalID ' + @sqlSharingPortal + '
	UNION ALL
	SELECT [CategoryID],[PortalID],[CategoryName],[Position],[ParentCategory],[Level],[CategoryURL],[CategoryImage],[CategoryText],[Color],''0'' AS Show
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cat
	WHERE cat.CategoryID NOT IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) AND PortalID ' + @sqlSharingPortal + '
END
  
SELECT TOP 1 @DefaultTabID = TabID
FROM {databaseOwner}[{objectQualifier}TabModules]
WHERE ModuleID = @DefaultModuleID;

DECLARE @TempCategoryIDAndCount TABLE (CategoryID INT PRIMARY KEY, PortalID INT NOT NULL, CategoryName NVARCHAR(200) NOT NULL, Position INT NOT NULL, ParentCategory INT, Level INT NOT NULL, CategoryURL NVARCHAR(1500), Show BIT NOT NULL, Count INT NOT NULL, NewsModuleID INT NOT NULL,TabID INT NOT NULL); ';

DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
IF @IsSocialInstance = 1
BEGIN
	IF @FilterByDNNGroupID <> 0
	BEGIN	
		SET @FilterBySocialGroup = 1;
	END
END

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END

IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

SET @sqlcommand = @sqlcommand +	N'
INSERT INTO @TempCategoryIDAndCount
SELECT CategoryID, PortalID, CategoryName, Position, ParentCategory, Level, CategoryURL, Show,
CASE Show
	WHEN 0 THEN 0
	WHEN 1 THEN	
		CASE @AdminOrSuperUser
		WHEN 1 THEN(
		SELECT ((
			SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
			WHERE n.PortalID ' + @sqlSharingPortal + '
				AND n.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
				AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
				AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
			)+(
			SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 0 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
			WHERE n.PortalID ' + @sqlSharingPortal + '
				AND n.EventArticle = 1
				AND ne.Recurring = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
				AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
				AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
				AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
			)+(
			SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 =
				CASE WHEN @CountEventsLimitByDays IS NOT NULL THEN -- @StartDate min value
					CASE WHEN ne.UpcomingOccurrences > 1
					THEN
						CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
							THEN 1
							ELSE 0
						END
					ELSE
						CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(1) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
							THEN 1
							ELSE 0
						END
					END
				ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
					CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY RecurringID)
						THEN 1
						ELSE 0
					END
				END	 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
			WHERE n.PortalID ' + @sqlSharingPortal + '
				AND n.EventArticle = 1
				AND ne.Recurring = 1 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
				AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
				AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
			))
		)
		WHEN 0 THEN(
			SELECT ((
				SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
				WHERE n.PortalID ' + @sqlSharingPortal + '
					AND n.HasPermissions = 0
					AND n.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
					AND n.Approved = 1
					AND (n.Active=1 OR n.UserID=@UserID)
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				)+(
				SELECT COUNT(n.[ArticleID]) AS cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 0 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
				WHERE n.PortalID ' + @sqlSharingPortal + '
					AND n.HasPermissions = 0
					AND n.EventArticle = 1
					AND ne.Recurring = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
					AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
					AND n.Approved = 1
					AND (n.Active=1 OR n.UserID=@UserID)
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				)+(
				SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 =
					CASE WHEN @CountEventsLimitByDays IS NOT NULL THEN -- @StartDate min value
						CASE WHEN ne.UpcomingOccurrences > 1
						THEN
							CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
								THEN 1
								ELSE 0
							END
						ELSE
							CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(1) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
								THEN 1
								ELSE 0
							END
						END
					ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
						CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY RecurringID)
							THEN 1
							ELSE 0
						END
					END	 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
				WHERE n.PortalID ' + @sqlSharingPortal + '
					AND n.HasPermissions = 0
					AND n.EventArticle = 1
					AND ne.Recurring = 1 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
					AND n.Approved = 1
					AND (n.Active=1 OR n.UserID=@UserID)
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				)+(
				SELECT COUNT(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
				WHERE n.PortalID ' + @sqlSharingPortal + '
					AND n.HasPermissions = 1
					AND n.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
	 				AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
					AND n.Approved = 1
					AND (n.Active=1 OR n.UserID=@UserID)	
					AND ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				)+(
				SELECT COUNT([ArticleID]) FROM (
					SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
					WHERE n.PortalID ' + @sqlSharingPortal + '
						AND n.HasPermissions = 1
						AND n.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
	 					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
						AND n.Approved = 1
						AND (n.Active=1 OR n.UserID=@UserID)	
						AND ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
					UNION
					SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
					WHERE n.PortalID ' + @sqlSharingPortal + '
						AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
						AND n.HasPermissions = 1
						AND n.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
						AND n.Approved = 1
						AND (n.Active=1 OR n.UserID=@UserID)
						AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				) AS UserAndRolePermissions						
				)
				)+(
				SELECT COUNT(ArticleID) FROM (			
					SELECT ArticleID FROM (
						SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 0 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
						WHERE n.PortalID ' + @sqlSharingPortal + '
							AND n.HasPermissions = 1
							AND n.EventArticle = 1
							AND ne.Recurring = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
	 						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
	 						AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
							AND n.Approved = 1
							AND (n.Active=1 OR n.UserID=@UserID)	
							AND ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
						UNION ALL
						SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 =
							CASE WHEN @CountEventsLimitByDays IS NOT NULL THEN -- @StartDate min value
								CASE WHEN ne.UpcomingOccurrences > 1
								THEN
									CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
										THEN 1
										ELSE 0
									END
								ELSE
									CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									 OR (nerd.RecurringID IN (SELECT TOP(1) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
										THEN 1
										ELSE 0
									END
								END
							ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
								CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY RecurringID)
									THEN 1
									ELSE 0
								END
							END '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
						WHERE n.PortalID ' + @sqlSharingPortal + '
							AND n.HasPermissions = 1
							AND n.EventArticle = 1
							AND ne.Recurring = 1 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
	 						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
							AND n.Approved = 1
							AND (n.Active=1 OR n.UserID=@UserID)	
							AND ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
						
					) AS PermissionsByUser
					UNION
					SELECT ArticleID FROM (
						SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 0 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
						WHERE n.PortalID ' + @sqlSharingPortal + '
							AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
							AND n.HasPermissions = 1
							AND n.EventArticle = 1
							AND ne.Recurring = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
							AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
							AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
							AND n.Approved = 1
							AND (n.Active=1 OR n.UserID=@UserID)
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
						UNION ALL
						SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 =
							CASE WHEN @CountEventsLimitByDays IS NOT NULL THEN -- @StartDate min value
								CASE WHEN ne.UpcomingOccurrences > 1
								THEN
									CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
										THEN 1
										ELSE 0
									END
								ELSE
									CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									 OR (nerd.RecurringID IN (SELECT TOP(1) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
										THEN 1
										ELSE 0
									END
								END
							ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
								CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY RecurringID)
									THEN 1
									ELSE 0
								END
							END '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDNNUserID <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
						WHERE n.PortalID ' + @sqlSharingPortal + '
							AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
							AND n.HasPermissions = 1
							AND n.EventArticle = 1
							AND ne.Recurring = 1 '
				IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
							AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate]
							AND n.Approved = 1
							AND (n.Active=1 OR n.UserID=@UserID)
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
					) AS PermissionsByRoles
				) AS PermissionsByUserAndRole
			)
		)
	END		
END AS ''Count'',NewsModuleID,TabID
FROM (
	SELECT	ncl.[CategoryID],
			ncl.[PortalID],
			ncl.[CategoryName],
			ncl.[Position],
			ncl.[ParentCategory],
			ncl.[Level],
			ncl.[CategoryURL],
			ncl.Show,
	CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
	CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats AS ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl
	ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID
) AS Result;

SELECT * FROM @TempCategoryIDAndCount ORDER BY PortalID, Position; '

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand +	N'
SELECT n.ArticleID, CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS ''RecurringID'', n.Title,n.TitleLink,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified, '
ELSE
SET @sqlcommand = @sqlcommand +	N'
SELECT n.ArticleID, CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS ''RecurringID'', CASE WHEN ncl.Title IS NULL THEN n.Title ELSE ncl.Title END AS Title, CASE WHEN ncl.clTitleLink IS NULL THEN n.TitleLink ELSE ncl.clTitleLink END AS TitleLink,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified, '

IF @OrderByCustomFieldID IS NOT NULL
SET @sqlcommand = @sqlcommand +	N'fv.' + @OrderByColumnName + ',';

IF @OrderByColumnName = N'StartDate'
SET @sqlcommand = @sqlcommand +	N' CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate, ';

SET @sqlcommand = @sqlcommand +	N'
	n.HasPermissions, n.Active, n.Approved, n.NumberOfComments,n.UserID, c.[CategoryID], tci.[Position], tci.Count, tci.NewsModuleID,tci.TabID, n.DetailType, n.DetailTypeData
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] c ON n.ArticleID = c.ArticleID 
	INNER JOIN @TempCategoryIDAndCount AS tci ON tci.CategoryID = c.CategoryID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = c.CategoryID AND cidl.Show = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND '
	IF @DateRangeType = 2
		SET @sqlcommand = @sqlcommand + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 0
		SET @sqlcommand = @sqlcommand + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '

	IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
	ELSE IF @LocaleCode IS NOT NULL SET @sqlcommand = @sqlcommand + N' LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON n.ArticleID = ncl.ArticleID AND ncl.LocaleCode = @LocaleCode '

	IF @IsSocialInstance <> 0
	BEGIN
		IF @FilterBySocialGroup = 1
		BEGIN
			SET @sqlcommand = @sqlcommand +	N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
		END
		ELSE IF @FilterByDNNUserID <> 0
		BEGIN
			SET @sqlcommand = @sqlcommand +	N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
		END
	END
	
	IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
	SET @sqlcommand = @sqlcommand +	N'
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID '
	END
	
SET @sqlcommand = @sqlcommand + N' 
WHERE n.ArticleID IN(
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 0
		AND na.EventArticle = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID=@UserID))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL -- simple event
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND (na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserID))
		AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL -- recurring event
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
		IF @DateRangeType = 2
			SET @sqlcommand = @sqlcommand + N'
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
		ELSE IF @DateRangeType = 0
			SET @sqlcommand = @sqlcommand + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
		ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
	SET @sqlcommand = @sqlcommand + N'
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 1 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID=@UserID))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
			AND aup.Show = 1 AND na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserID)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
			AND aup.Show = 1 AND na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserID)
		))
		AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
		IF @DateRangeType = 2
			SET @sqlcommand = @sqlcommand + N'
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
		ELSE IF @DateRangeType = 0
			SET @sqlcommand = @sqlcommand + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
		ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
	SET @sqlcommand = @sqlcommand + N'
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
			AND aup.Show = 1 AND na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserID)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((na.Approved = 1
			AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION All
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((na.Approved = 1
			AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
		))
		AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION All
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
		IF @DateRangeType = 2
			SET @sqlcommand = @sqlcommand + N'
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
		ELSE IF @DateRangeType = 0
			SET @sqlcommand = @sqlcommand + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
		ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
	SET @sqlcommand = @sqlcommand + N'
	WHERE na.PortalID ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((na.Approved=1
			AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
) '
IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
IF @IsSocialInstance <> 0 AND @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDNNUserID ';

SET @sqlcommand = @sqlcommand + N'
ORDER BY tci.PortalID, tci.Position, '

IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
	SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@OrderByColumnName = @OrderByColumnName
	,@OrderByDirection = @OrderByDirection
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@MenuModuleID = @MenuModuleID
	,@DefaultTabID = @DefaultTabID
    ,@DefaultModuleID = @DefaultModuleID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CountEventsLimitByDays = @CountEventsLimitByDays
	,@IsSocialInstance = @IsSocialInstance
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@LocaleCode = @LocaleCode	
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@ShowAllAuthors = @ShowAllAuthors
	,@CategoryFilterType = @CategoryFilterType
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@PermissionsModuleID = @PermissionsModuleID
	
IF OBJECT_ID('tempdb..#SharingPortals') IS NOT NULL
	DROP TABLE #SharingPortals;
IF OBJECT_ID('tempdb..#UserInRoles') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID('tempdb..#ViewCategories') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID('tempdb..#FilterCategories') IS NOT NULL
	DROP TABLE #FilterCategories;
IF OBJECT_ID('tempdb..#ViewCategoriesWithFilter') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
GO