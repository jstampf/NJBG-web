IF NOT EXISTS (SELECT UpdateVersion FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUpdate] WHERE UpdateVersion = '08.01.00')
BEGIN
	INSERT {databaseOwner}[{objectQualifier}EasyDNNNewsUpdate]([UpdateVersion],[Finished],[InstallType]) VALUES(N'08.01.00',0, N'DNN')
END
GO
UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] SET UseAdminNoSkinUrl = 1;

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[DF_{objectQualifier}EasyDNNNewsPortalSettings_UseAdminNoSkinUrl]') AND type = 'D')
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] DROP CONSTRAINT [DF_{objectQualifier}EasyDNNNewsPortalSettings_UseAdminNoSkinUrl]
GO
EXECUTE(N'ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_UseAdminNoSkinUrl DEFAULT (1) FOR [UseAdminNoSkinUrl]')
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'GoogleRecaptchaSiteKey')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD GoogleRecaptchaSiteKey NVARCHAR(128) NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'GoogleRecaptchaSecretKey')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD GoogleRecaptchaSecretKey  NVARCHAR(128) NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'ContactFormEnableCaptcha')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD ContactFormEnableCaptcha  BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_ContactFormEnableCaptcha DEFAULT (0) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'ContactFormEnableCaptcha')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD ContactFormEnableCaptcha  BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_ContactFormEnableCaptcha DEFAULT (0) NOT NULL
END
GO
BEGIN TRY
IF EXISTS(
	SELECT 1 FROM sys.foreign_keys
	WHERE is_not_trusted = 1
		AND [name] = N'FK_{objectQualifier}EasyDNNNewsCategories_EasyDNNNews'
)
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] WITH CHECK CHECK CONSTRAINT FK_{objectQualifier}EasyDNNNewsCategories_EasyDNNNews;

IF EXISTS(
	SELECT 1
	FROM sys.foreign_keys
	WHERE is_not_trusted = 1
		AND [name] = N'FK_{objectQualifier}EasyDNNNewsModuleCategory_EasyDNNNewsCategoryList'
)
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WITH CHECK CHECK CONSTRAINT FK_{objectQualifier}EasyDNNNewsCategories_EasyDNNNews;
END TRY
BEGIN CATCH
END CATCH
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNnewsContentBlocksSettings' and column_name = 'Visibility')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNnewsContentBlocksSettings] ADD Visibility TINYINT CONSTRAINT DF_{objectQualifier}EasyDNNnewsContentBlocksSettings_Visibility DEFAULT(0) NOT NULL;
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNnewsLatestArticlesSettings' and column_name = 'Visibility')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNnewsLatestArticlesSettings] ADD Visibility TINYINT CONSTRAINT DF_{objectQualifier}EasyDNNnewsLatestArticlesSettings_Visibility DEFAULT(0) NOT NULL;
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNnewsRecentCommentsSettings' and column_name = 'Visibility')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNnewsRecentCommentsSettings] ADD Visibility TINYINT CONSTRAINT DF_{objectQualifier}EasyDNNnewsRecentCommentsSettings_Visibility DEFAULT(0) NOT NULL;
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsWidgetsFilterMenu' and column_name = 'Visibility')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsWidgetsFilterMenu] ADD Visibility TINYINT CONSTRAINT DF_{objectQualifier}EasyDNNNewsWidgetsFilterMenu_Visibility DEFAULT(0) NOT NULL;
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'FilterByArticlesOpenArticleDetails')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD FilterByArticlesOpenArticleDetails  BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_FilterByArticlesOpenArticleDetails DEFAULT (1) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'FilterByArticlesOpenArticleDetails')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD FilterByArticlesOpenArticleDetails  BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_FilterByArticlesOpenArticleDetails DEFAULT (1) NOT NULL
END
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EDS_SearchTable]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION {databaseOwner}[{objectQualifier}EDS_SearchTable]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EDS_SearchTable]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION {databaseOwner}[{objectQualifier}EDS_SearchTable]
(
	@SimpleSearchFindCondition	nvarchar(max)
)
RETURNS @SearchTable TABLE 
(
	Words	NVARCHAR(100) NOT NULL
)
AS
BEGIN
	DECLARE @word NVARCHAR(100), @PosWord INT
	SET @SimpleSearchFindCondition = LTRIM(RTRIM(@SimpleSearchFindCondition)) + '':''
	SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
	IF REPLACE(@SimpleSearchFindCondition, '':'', '''') <> ''''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SimpleSearchFindCondition, @PosWord - 1)))
			IF @word <> ''''
			BEGIN
				SET @word = replace(
							replace(
							replace(
							replace( @word
							,''\'', ''\\'' )
							,''%'', ''\%'' )
							,''_'', ''\_'' )
							,''['', ''\['' )
				INSERT INTO @SearchTable (Words) VALUES (''% ''+@word+''%'')
				INSERT INTO @SearchTable (Words) VALUES (@word+''%'')
			END
			SET @SimpleSearchFindCondition = RIGHT(@SimpleSearchFindCondition, LEN(@SimpleSearchFindCondition) - @PosWord)
			SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
		END
	END
RETURN
END'
END

GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewEvents]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewArticles]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewArticles]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewAllContent]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewAllContent]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories_NoCount]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories_NoCount]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetUpcomingEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetUpcomingEvents]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetEvents]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetArticles]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetArticles]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetAllContent]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetAllContent]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarArchive]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarArchive]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsTagCloudGetTags]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsTagCloudGetTags]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetGroupsAndAuthors]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetGroupsAndAuthors]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetGroupsAndAuthors]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetGroupsAndAuthors] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetGroupsAndAuthors]
	@PortalID INT,
	@ModuleID INT,
	@NotInGroupPosition BIT, -- 0 gore, 1 dolje - uvjek false
	@DisplayAll BIT = 1,
	@RoleID INT = -1, -- -1 if role id is not main filter
	@FilterPortals NVARCHAR(MAX) = NULL
AS 
SET NOCOUNT ON;
DECLARE @PortalsTable TABLE (SharingPortalID INT NOT NULL PRIMARY KEY);

IF @FilterPortals IS NULL
	INSERT INTO @PortalsTable
	SELECT [SharingPortalID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;
ELSE IF @FilterPortals <> '-1' -- force current portal
	INSERT INTO @PortalsTable
	SELECT fp.KeyID FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@FilterPortals) AS fp

IF NOT EXISTS(SELECT 1 FROM @PortalsTable)
	INSERT INTO @PortalsTable SELECT @PortalID;

DECLARE @i INT, @MaxI INT, @GroupID INT;
DECLARE @TableGroups Table (
	[PortalID] INT NOT NULL
	,[GroupID] INT NOT NULL
	,[GroupName] NVARCHAR(250) NOT NULL
	,[GroupInfo] NVARCHAR(4000) NULL
	,[GroupImage] NVARCHAR(1000) NULL
	,[FacebookURL] NVARCHAR(1000) NULL
	,[TwitterURL] NVARCHAR(1000) NULL
	,[GooglePlusURL] NVARCHAR(1000) NULL
	,[LinkedInURL] NVARCHAR(1000) NULL
	,[Parent] INT NULL
	,[Level] INT NOT NULL
	,[Position] INT NOT NULL
	,[GroupLinkType] tinyINT NOT NULL
	,[GroupURL] NVARCHAR(1000) NULL
	,[MyRowCount] Int IDENTITY(1,1));
DECLARE @resultTable Table (
	[OrderBy] INT IDENTITY(1,1)
	,[UserID] INT NULL
	,[UserPortalID] INT NULL
	,[Username] NVARCHAR(100) NULL
	,[FirstName] NVARCHAR(50) NULL
	,[LastName] NVARCHAR(50) NULL
	,[Email] NVARCHAR(256) NULL
	,[DisplayName] NVARCHAR(128) NULL
	,[AuthorProfileID] INT NULL
	,[ShortInfo] NVARCHAR(350) NULL
	,[ProfileImage] NVARCHAR(1000) NULL
	,[FacebookURL] NVARCHAR(1000) NULL
	,[TwitterURL] NVARCHAR(1000) NULL
	,[GooglePlusURL] NVARCHAR(1000) NULL
	,[LinkedInURL] NVARCHAR(1000) NULL
	,[DateAdded] DATETIME NULL
	,[Active] BIT NULL
	,[ArticleCount] INT NULL
	,[AuthorLinkType] TINYINT NULL
	,[AuthorURL] NVARCHAR(1000) NULL
	,[GroupID] INT NULL
	,[PortalID] INT NULL
	,[GroupName] NVARCHAR(250) NULL
	,[GroupInfo] NVARCHAR(4000) NULL
	,[GroupImage] NVARCHAR(1000) NULL
	,[GFacebookURL] NVARCHAR(1000) NULL
	,[GTwitterURL] NVARCHAR(1000) NULL
	,[GGooglePlusURL] NVARCHAR(1000) NULL
	,[GLinkedInURL] NVARCHAR(1000) NULL
	,[Parent] INT NULL
	,[Level] INT NULL
	,[Position] INT NULL
	,[GroupLinkType] TINYINT NULL
	,[GroupURL] NVARCHAR(1000) NULL);

IF @RoleID <> -1
BEGIN
	INSERT INTO @resultTable
		SELECT u.[UserID]
			,ap.PortalID AS UserPortalID
			,u.[Username]
			,u.[FirstName]
			,u.[LastName]
			,u.[Email]
			,u.[DisplayName]
			,ap.[AuthorProfileID]
			,ap.[ShortInfo]
			,ap.[ProfileImage]
			,ap.[FacebookURL]
			,ap.[TwitterURL]
			,ap.[GooglePlusURL]
			,ap.[LinkedInURL]
			,ap.[DateAdded]
			,ap.[Active]
			,ap.[ArticleCount]
			,ap.[LinkType] AS AuthorLinkType
			,ap.[AuthorURL]
			,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
		FROM {databaseOwner}[{objectQualifier}Users] AS u
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap ON u.UserID = ap.UserID
			INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.UserID = ap.UserID
			INNER JOIN @PortalsTable AS pt ON pt.SharingPortalID = ap.PortalID
		WHERE ur.RoleID = @RoleID
		ORDER BY u.DisplayName
END
ELSE
BEGIN
	IF @NotInGroupPosition = 0 -- autori koji nisu u grupi su gore
	BEGIN
		IF @DisplayAll = 1 -- prikazi sve autore
		BEGIN
			INSERT INTO @resultTable
			SELECT u.[UserID]
				,ap.PortalID AS UserPortalID
				,u.[Username]
				,u.[FirstName]
				,u.[LastName]
				,u.[Email]
				,u.[DisplayName]
				,ap.[AuthorProfileID]
				,ap.[ShortInfo]
				,ap.[ProfileImage]
				,ap.[FacebookURL]
				,ap.[TwitterURL]
				,ap.[GooglePlusURL]
				,ap.[LinkedInURL]
				,ap.[DateAdded]
				,ap.[Active]
				,ap.[ArticleCount]
				,ap.[LinkType] AS AuthorLinkType
				,ap.[AuthorURL]
				,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
			FROM {databaseOwner}[{objectQualifier}Users] AS u
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap ON u.UserID = ap.UserID
				INNER JOIN @PortalsTable AS pt ON pt.SharingPortalID = ap.PortalID
			WHERE ap.AuthorProfileID NOT IN (
				SELECT AuthorProfileID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems]
			)
			ORDER BY u.DisplayName
		END
		ELSE
		BEGIN
			INSERT INTO @resultTable
			SELECT u.[UserID]
				,ap.PortalID AS UserPortalID
				,u.[Username]
				,u.[FirstName]
				,u.[LastName]
				,u.[Email]
				,u.[DisplayName]
				,ap.[AuthorProfileID]
				,ap.[ShortInfo]
				,ap.[ProfileImage]
				,ap.[FacebookURL]
				,ap.[TwitterURL]
				,ap.[GooglePlusURL]
				,ap.[LinkedInURL]
				,ap.[DateAdded]
				,ap.[Active]
				,ap.[ArticleCount]
				,ap.[LinkType] AS AuthorLinkType
				,ap.[AuthorURL]
				,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
			FROM {databaseOwner}[{objectQualifier}Users] AS u
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap ON u.UserID = ap.UserID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] as mai ON mai.UserID = ap.UserID AND mai.ModuleID = @ModuleID
				INNER JOIN @PortalsTable AS pt ON pt.SharingPortalID = ap.PortalID
			WHERE ap.AuthorProfileID NOT IN (
				SELECT AuthorProfileID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] as agi
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] as mgi ON agi.GroupId = mgi.GroupID
				WHERE mgi.ModuleID = @ModuleID)
			ORDER BY u.DisplayName
		END
	END
	
	IF @DisplayAll = 1
	BEGIN
		INSERT INTO @TableGroups
		SELECT nag.[PortalID]
			,nag.[GroupID]
			,nag.[GroupName]
			,nag.[GroupInfo]
			,nag.[GroupImage]
			,nag.[FacebookURL]
			,nag.[TwitterURL]
			,nag.[GooglePlusURL]
			,nag.[LinkedInURL]
			,nag.[Parent]
			,nag.[Level]
			,nag.[Position]
			,nag.[LinkType] as GroupLinkType
			,nag.[GroupURL]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorGroups] AS nag
		WHERE nag.[GroupID] IN (
			SELECT DISTINCT nag.GroupID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorGroups] as nag
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON agi.GroupID = nag.GroupID
				INNER JOIN @PortalsTable AS pt ON pt.SharingPortalID = nag.PortalID
		)
		ORDER BY nag.Position;
	END
	ELSE
	BEGIN
		INSERT INTO @TableGroups
		SELECT DISTINCT nag.[PortalID]
			,nag.[GroupID]
			,nag.[GroupName]
			,nag.[GroupInfo]
			,nag.[GroupImage]
			,nag.[FacebookURL]
			,nag.[TwitterURL]
			,nag.[GooglePlusURL]
			,nag.[LinkedInURL]
			,nag.[Parent]
			,nag.[Level]
			,nag.[Position]
			,nag.[LinkType] as GroupLinkType
			,nag.[GroupURL]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorGroups] AS nag
		WHERE nag.[GroupID] IN (
			SELECT DISTINCT nag.GroupID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorGroups] as nag
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON agi.GroupID = nag.GroupID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON nag.GroupID = mgi.GroupID
				INNER JOIN @PortalsTable AS pt ON pt.SharingPortalID = nag.PortalID
			WHERE mgi.ModuleID = @ModuleID
		)
		ORDER BY nag.Position;
	END
	
	SELECT @MaxI = @@RowCount;
	SELECT @i = 0;
    WHILE @i < @MaxI
	BEGIN
		SET @i = @i + 1;
		SELECT @GroupID = GroupID FROM @TableGroups Where MyRowCount = @i
		
		INSERT INTO @resultTable
		SELECT
			NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
			,[GroupID]
			,[PortalID]
			,[GroupName]
			,[GroupInfo]
			,[GroupImage]
			,[FacebookURL]
			,[TwitterURL]
			,[GooglePlusURL]
			,[LinkedInURL]
			,[Parent]
			,[Level]
			,[Position]
			,[GroupLinkType]
			,[GroupURL]
		FROM @TableGroups WHERE MyRowCount = @i
		
		INSERT INTO @resultTable
		SELECT u.[UserID]
			,ap.PortalID AS UserPortalID
			,u.[Username]
			,u.[FirstName]
			,u.[LastName]
			,u.[Email]
			,u.[DisplayName]
			,ap.[AuthorProfileID]
			,ap.[ShortInfo]
			,ap.[ProfileImage]
			,ap.[FacebookURL]
			,ap.[TwitterURL]
			,ap.[GooglePlusURL]
			,ap.[LinkedInURL]
			,ap.[DateAdded]
			,ap.[Active]
			,ap.[ArticleCount]
			,ap.[LinkType] AS AuthorLinkType
			,ap.[AuthorURL]
			,@GroupID AS GroupID,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
		FROM {databaseOwner}[{objectQualifier}Users] AS u
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap ON u.UserID = ap.UserID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON agi.AuthorProfileID = ap.AuthorProfileID
		WHERE agi.GroupID = @GroupID
		ORDER BY u.DisplayName
	END
	IF @NotInGroupPosition = 1
	BEGIN
		IF @DisplayAll = 1
		BEGIN
			INSERT INTO @resultTable
			SELECT u.[UserID]
				,ap.PortalID AS UserPortalID
				,u.[Username]
				,u.[FirstName]
				,u.[LastName]
				,u.[Email]
				,u.[DisplayName]
				,ap.[AuthorProfileID]
				,ap.[ShortInfo]
				,ap.[ProfileImage]
				,ap.[FacebookURL]
				,ap.[TwitterURL]
				,ap.[GooglePlusURL]
				,ap.[LinkedInURL]
				,ap.[DateAdded]
				,ap.[Active]
				,ap.[ArticleCount]
				,ap.[LinkType] AS AuthorLinkType
				,ap.[AuthorURL]
				,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
			FROM {databaseOwner}[{objectQualifier}Users] AS u
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap ON u.UserID = ap.UserID
				INNER JOIN @PortalsTable AS pt ON pt.SharingPortalID = ap.PortalID
			WHERE ap.AuthorProfileID NOT IN (
				SELECT AuthorProfileID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems]
			)
			ORDER BY u.DisplayName
		END
		ELSE
		BEGIN
			INSERT INTO @resultTable
				SELECT u.[UserID]
					,ap.PortalID AS UserPortalID
					,u.[Username]
					,u.[FirstName]
					,u.[LastName]
					,u.[Email]
					,u.[DisplayName]
					,ap.[AuthorProfileID]
					,ap.[ShortInfo]
					,ap.[ProfileImage]
					,ap.[FacebookURL]
					,ap.[TwitterURL]
					,ap.[GooglePlusURL]
					,ap.[LinkedInURL]
					,ap.[DateAdded]
					,ap.[Active]
					,ap.[ArticleCount]
					,ap.[LinkType] AS AuthorLinkType
					,ap.[AuthorURL]
					,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
				FROM {databaseOwner}[{objectQualifier}Users] AS u
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap ON u.UserID = ap.UserID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] as mai ON mai.UserID = ap.UserID AND mai.ModuleID = @ModuleID
					INNER JOIN @PortalsTable AS pt ON pt.SharingPortalID = ap.PortalID
				WHERE ap.AuthorProfileID NOT IN (
					SELECT AuthorProfileID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] as agi
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] as mgi ON agi.GroupId = mgi.GroupID
					WHERE mgi.ModuleID = @ModuleID
				)
				ORDER BY u.DisplayName
	  END
	END
 END 
 
 SELECT * FROM @resultTable ORDER BY OrderBy;
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsTagCloudGetTags]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsTagCloudGetTags] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsTagCloudGetTags]
	@PortalId  INT,
	@UserId INT,
	@ModuleId INT,
	@OrderBy NVARCHAR(20) = 'Size DESC',
	@AdminOrSuperUser BIT  = 0,
	@RowCount INT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDnnUserId INT = 0,
	@FilterByDnnGroupId INT = 0,
	@ShowAllAuthors BIT = 1,
	@CategoryFilterType TINYINT = 0,
	@OnlyOneCategory INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@SatellitePermissionsSource TINYINT = 0,
	@PermissionsModuleId INT = 0,
	@FilterByArticles BIT = 1,
	@FilterByEvents BIT = 0
AS
SET NOCOUNT ON;
DECLARE @PortalsCount INT;
DECLARE @IsPortalSharing BIT
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY);

INSERT INTO #SharingPortals
SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleId;

SELECT @PortalsCount = @@ROWCOUNT;

IF @PortalsCount = 0
BEGIN
	SET @IsPortalSharing = 0;
	INSERT INTO #SharingPortals SELECT @PortalId
END
ELSE
BEGIN
	SET @IsPortalSharing = 1;
	IF @PortalsCount = 1
	BEGIN
		SET @PortalId = (SELECT PortalID FROM #SharingPortals); -- because of social dnn tvf
	END
END

IF @UserId <> -1
BEGIN
	INSERT INTO #UserInRoles
	EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsUserRoles] @PortalId,@UserId,@IsPortalSharing;
END

INSERT INTO #ViewCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsViewCategories] @PortalId,@PermissionsModuleId,@UserId,@AdminOrSuperUser,@SatellitePermissionsSource,@IsPortalSharing;

INSERT INTO #FilterCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsFilterCategories] @PortalId,@ModuleId,@CategoryFilterType,NULL,NULL,NULL,@ModuleId;

INSERT INTO #ViewCategoriesWithFilter
SELECT c.CategoryID FROM #ViewCategories AS c WHERE c.CategoryID IN (SELECT CategoryID FROM #FilterCategories);

DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDnnGroupId <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
		END
	END
ELSE
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleId
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @ModuleId
	END
END

IF @RowCount = 0
BEGIN
	SET @RowCount = 500;
END;

IF @LocaleCode IS NULL
BEGIN
	IF @IsSocialInstance = 0
	BEGIN
		IF @FilterByArticles = 1 AND @FilterByEvents = 0 -- only articles
		BEGIN
			SELECT TOP(@RowCount) *
			FROM (
				SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			)
			GROUP BY ti.TagID, nt.Name) AS FinalContent
			ORDER BY
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
		ELSE IF @FilterByArticles = 0 AND @FilterByEvents = 1 -- only events
		BEGIN
			SELECT TOP(@RowCount) * FROM (
				SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			)
			GROUP BY ti.TagID, nt.Name) AS FinalContent
			ORDER BY
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
		ELSE -- articles and events
		BEGIN
			SELECT TOP(@RowCount) * FROM (
				SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			)
			GROUP BY ti.TagID, nt.Name) AS FinalContent ORDER BY
			CASE WHEN @OrderBy ='Name ASC' THEN Name END,
			CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
			CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
			CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
	END
	ELSE IF @FilterBySocialGroup = 1
	BEGIN
		IF @FilterByArticles = 1 AND @FilterByEvents = 0 -- only articles
		BEGIN
			SELECT TOP(@RowCount) * FROM (
				SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
			)
			GROUP BY ti.TagID, nt.Name) AS FinalContent
			ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
		ELSE IF @FilterByArticles = 0 AND @FilterByEvents = 1 -- only events
		BEGIN
			SELECT TOP(@RowCount) * FROM (
				SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
			)
			GROUP BY ti.TagID, nt.Name) AS FinalContent
			ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
		ELSE -- articles and events
		BEGIN
			SELECT TOP(@RowCount) * FROM (
				SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
			)
			GROUP BY ti.TagID, nt.Name) AS FinalContent
			ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
	END
	ELSE IF @FilterByDnnUserId <> 0
	BEGIN
		IF @FilterByArticles = 1 AND @FilterByEvents = 0 -- only articles
		BEGIN
			SELECT TOP(@RowCount) * FROM (
				SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND na.UserID = @FilterByDnnUserId
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND na.UserID = @FilterByDnnUserId
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1  AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND na.UserID = @FilterByDnnUserId
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
			)
			GROUP BY ti.TagID, nt.Name) AS FinalContent
			ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
		ELSE IF @FilterByArticles = 0 AND @FilterByEvents = 1 -- only events
		BEGIN
			SELECT TOP(@RowCount) * FROM (
				SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND na.UserID = @FilterByDnnUserId
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND na.UserID = @FilterByDnnUserId
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1  AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND na.UserID = @FilterByDnnUserId
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
			)
			GROUP BY ti.TagID, nt.Name) AS FinalContent
			ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
		ELSE -- articles and events
		BEGIN
			SELECT TOP(@RowCount) * FROM (
				SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND na.UserID = @FilterByDnnUserId
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND na.UserID = @FilterByDnnUserId
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1  AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND na.UserID = @FilterByDnnUserId
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
			)
			GROUP BY ti.TagID, nt.Name) AS FinalContent
			ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;	
		END
	END
END
ELSE
BEGIN
	IF @IsSocialInstance = 0
	BEGIN
		IF @FilterByArticles = 1 AND @FilterByEvents = 0 -- only articles
		BEGIN
			;WITH AllTags(TagID, Size, Name) AS (
				SELECT TOP(@RowCount) * FROM (
					SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
					WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals) 
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
					)
					GROUP BY ti.TagID, nt.Name) AS Result
					ORDER BY 
						CASE WHEN @OrderBy ='Name ASC' THEN Name END,
						CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
						CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
						CASE WHEN @OrderBy ='Size ASC' THEN Size END
			),
			LocalizedTags(TagID, Size, Name) AS (
				SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
			),
			NotLocalizedTags(TagID, Size, Name) AS(
				SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
			)
			SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS FinalContent ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
		ELSE IF @FilterByArticles = 0 AND @FilterByEvents = 1 -- only events
		BEGIN
			;WITH AllTags(TagID, Size, Name) AS (
				SELECT TOP(@RowCount) * FROM (
					SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
					WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
						AND ti.ArticleID IN (
							SELECT na.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
							WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
								AND na.HasPermissions = 0
								AND na.EventArticle = 1
								AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
								AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
								AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
								AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
							UNION ALL
							SELECT na.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
							WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
								AND na.EventArticle = 1
								AND na.HasPermissions = 1
								AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
								AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
									AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
								))
								AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
								AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
							UNION
							SELECT na.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
							WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
								AND na.EventArticle = 1
								AND na.HasPermissions = 1
								AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
								AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
									AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
								))
								AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
								AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
					)
					GROUP BY ti.TagID, nt.Name) AS Result
					ORDER BY 
						CASE WHEN @OrderBy ='Name ASC' THEN Name END,
						CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
						CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
						CASE WHEN @OrderBy ='Size ASC' THEN Size END
			),
			LocalizedTags(TagID, Size, Name) AS (
				SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
			),
			NotLocalizedTags(TagID, Size, Name) AS(
				SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
			)
			SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS FinalContent ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;	
		END
		ELSE -- articles and events
		BEGIN
			;WITH AllTags(TagID, Size, Name) AS (
				SELECT TOP(@RowCount) * FROM (
					SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
					WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
						AND ti.ArticleID IN (
							SELECT na.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
							WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
								AND na.HasPermissions = 0
								AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
								AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
								AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
								AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
							UNION ALL
							SELECT na.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
							WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
								AND na.HasPermissions = 1
								AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
								AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
									AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
								))
								AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
								AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
							UNION
							SELECT na.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
							WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
								AND na.HasPermissions = 1
								AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
								AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
									AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
								))
								AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
								AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
					)
					GROUP BY ti.TagID, nt.Name) AS Result
					ORDER BY 
						CASE WHEN @OrderBy ='Name ASC' THEN Name END,
						CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
						CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
						CASE WHEN @OrderBy ='Size ASC' THEN Size END
			),
			LocalizedTags(TagID, Size, Name) AS (
				SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
			),
			NotLocalizedTags(TagID, Size, Name) AS(
				SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
			)
			SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS FinalContent ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;	
		END
	END
	ELSE IF @FilterBySocialGroup = 1
	BEGIN
		IF @FilterByArticles = 1 AND @FilterByEvents = 0 -- only articles
		BEGIN
			;WITH AllTags(TagID, Size, Name) AS (
			SELECT TOP(@RowCount) * FROM (SELECT nt.TagID, COUNT(*) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
				GROUP BY ti.TagID, nt.TagID, nt.Name) AS Result
				ORDER BY 
					CASE WHEN @OrderBy ='Name ASC' THEN Name END,
					CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
					CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
					CASE WHEN @OrderBy ='Size ASC' THEN Size END
			),
			LocalizedTags(TagID, Size, Name) AS (
				SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
			),
			NotLocalizedTags(TagID, Size, Name) AS(
				SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
			)
			SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS FinalContent ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
		ELSE IF @FilterByArticles = 0 AND @FilterByEvents = 1 -- only events
		BEGIN
			;WITH AllTags(TagID, Size, Name) AS (
			SELECT TOP(@RowCount) * FROM (SELECT nt.TagID, COUNT(*) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
				GROUP BY ti.TagID, nt.TagID, nt.Name) AS Result ORDER BY 
					CASE WHEN @OrderBy ='Name ASC' THEN Name END,
					CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
					CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
					CASE WHEN @OrderBy ='Size ASC' THEN Size END
			),
			LocalizedTags(TagID, Size, Name) AS (
				SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
			),
			NotLocalizedTags(TagID, Size, Name) AS(
				SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
			)
			SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS FinalContent ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;		
		END
		ELSE -- articles and events
		BEGIN
			;WITH AllTags(TagID, Size, Name) AS (
			SELECT TOP(@RowCount) * FROM (SELECT nt.TagID, COUNT(*) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
				GROUP BY ti.TagID, nt.TagID, nt.Name) AS Result
				ORDER BY 
					CASE WHEN @OrderBy ='Name ASC' THEN Name END,
					CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
					CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
					CASE WHEN @OrderBy ='Size ASC' THEN Size END
			),
			LocalizedTags(TagID, Size, Name) AS (
				SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
			),
			NotLocalizedTags(TagID, Size, Name) AS(
				SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
			)
			SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS FinalContent ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;		
		END
	END
	ELSE IF @FilterByDnnUserId <> 0
	BEGIN
		IF @FilterByArticles = 1 AND @FilterByEvents = 0 -- only articles
		BEGIN
			;WITH AllTags(TagID, Size, Name) AS (
			SELECT TOP(@RowCount) * FROM (SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 0
							AND na.UserID = @FilterByDnnUserId
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.UserID = @FilterByDnnUserId
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.UserID = @FilterByDnnUserId
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
				GROUP BY ti.TagID, nt.Name) AS Result
				ORDER BY 
					CASE WHEN @OrderBy ='Name ASC' THEN Name END,
					CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
					CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
					CASE WHEN @OrderBy ='Size ASC' THEN Size END
			),
			LocalizedTags(TagID, Size, Name) AS (
				SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
			),
			NotLocalizedTags(TagID, Size, Name) AS(
				SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
			)
			SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS FinalContent ORDER BY 
					CASE WHEN @OrderBy ='Name ASC' THEN Name END,
					CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
					CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
					CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
		ELSE IF @FilterByArticles = 0 AND @FilterByEvents = 1 -- only events
		BEGIN
			;WITH AllTags(TagID, Size, Name) AS (
			SELECT TOP(@RowCount) * FROM (SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 0
							AND na.UserID = @FilterByDnnUserId
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.UserID = @FilterByDnnUserId
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.UserID = @FilterByDnnUserId
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
				GROUP BY ti.TagID, nt.Name) AS Result
				ORDER BY 
					CASE WHEN @OrderBy ='Name ASC' THEN Name END,
					CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
					CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
					CASE WHEN @OrderBy ='Size ASC' THEN Size END
			),
			LocalizedTags(TagID, Size, Name) AS (
				SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
			),
			NotLocalizedTags(TagID, Size, Name) AS(
				SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
			)
			SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS FinalContent ORDER BY 
					CASE WHEN @OrderBy ='Name ASC' THEN Name END,
					CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
					CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
					CASE WHEN @OrderBy ='Size ASC' THEN Size END;		
		END
		ELSE -- articles and events
		BEGIN
			;WITH AllTags(TagID, Size, Name) AS (
			SELECT TOP(@RowCount) * FROM (SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 0
							AND na.UserID = @FilterByDnnUserId
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.UserID = @FilterByDnnUserId
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.UserID = @FilterByDnnUserId
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
				GROUP BY ti.TagID, nt.Name) AS Result
				ORDER BY 
					CASE WHEN @OrderBy ='Name ASC' THEN Name END,
					CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
					CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
					CASE WHEN @OrderBy ='Size ASC' THEN Size END
			),
			LocalizedTags(TagID, Size, Name) AS (
				SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
			),
			NotLocalizedTags(TagID, Size, Name) AS(
				SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
			)
			SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS FinalContent ORDER BY 
					CASE WHEN @OrderBy ='Name ASC' THEN Name END,
					CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
					CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
					CASE WHEN @OrderBy ='Size ASC' THEN Size END;	
		END
	END
END

IF OBJECT_ID('tempdb..#SharingPortals') IS NOT NULL
	DROP TABLE #SharingPortals;
IF OBJECT_ID('tempdb..#UserInRoles') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID('tempdb..#ViewCategories') IS NOT NULL
	DROP TABLE #ViewCategories;
	IF OBJECT_ID('tempdb..#FilterCategories') IS NOT NULL
	DROP TABLE #FilterCategories;
IF OBJECT_ID('tempdb..#ViewCategoriesWithFilter') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarArchive]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarArchive] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarArchive]
	@PortalId INT,
	@UserId INT,
	@ModuleId INT,
	@AdminOrSuperUser BIT  = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDnnUserId INT = 0,
	@FilterByDnnGroupId INT = 0,
	@ShowAllAuthors BIT = 1,
	@CategoryFilterType TINYINT = 0,
	@SatellitePermissionsSource TINYINT = 0,
	@PermissionsModuleId INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@DateTimeOffset INT,
	@OnlyArticles BIT = 0,
	@OnlyEvents BIT = 0,
	@FilterCategoryId INT = NULL,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(1000);
SET @paramList = N'
	@PortalId INT,
	@UserId INT,
	@ModuleId INT,
	@LocaleCode NVARCHAR(20),
	@FilterByDnnUserId INT,
	@FilterByDnnGroupId INT,
	@PermissionsModuleId INT,
	@DateTimeOffset INT,
	@FilterCategoryId INT'

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); 

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleId;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalId ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalId ';
END

IF @UserId <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleId
			AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

IF @AdminOrSuperUser = 1 OR @SatellitePermissionsSource = 0
BEGIN
	SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #ViewCategories
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.' + @sqlSharingPortalAll
END
ELSE IF @UserId = -1
BEGIN
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalId  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID IS NULL
					AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.ModuleID = @PermissionsModuleId AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID = @PermissionsModuleId
					AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @IsPortalSharing = 1
	BEGIN -- only can be by module settings, roles from current portal!
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
	ELSE
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId;
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
END


IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
	WHERE ' + @sqlSharingPortalAll
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
	WHERE ModuleID = @ModuleId; '
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	;WITH hierarchy AS(
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
			WHERE ci.ModuleID = @ModuleId
				AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
		)
		AND cl.' + @sqlSharingPortalAll + '
		UNION ALL
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
	)
	INSERT INTO #FilterCategories
	SELECT DISTINCT CategoryID
	FROM hierarchy; '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDnnGroupId <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
		END
	END
ELSE
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleId
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @ModuleId '
	END
END


IF @OnlyArticles = 1 AND @OnlyEvents = 0 -- only articles
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	SELECT MONTH(final.PublishDate) AS [Month], YEAR(final.PublishDate) AS [Year], COUNT(*) AS [Count]
	FROM (
		SELECT DISTINCT na.[ArticleID],DATEADD(hh, @DateTimeOffset, na.[PublishDate]) AS [PublishDate]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN #ViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	
	SET @sqlcommand = @sqlcommand + N'
		WHERE ' + @sqlSharingPortal + N' 
			AND na.HasPermissions = 0
			AND na.EventArticle = 0
			AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
			ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
	SET @sqlcommand = @sqlcommand + N'
		UNION ALL
		SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) AS [PublishDate]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	
	SET @sqlcommand = @sqlcommand + N'
		WHERE ' + @sqlSharingPortal + N' 
			AND na.HasPermissions = 1
			AND na.EventArticle = 0
			AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			IF @AdminOrSuperUser = 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
				IF @UserId = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
				ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserId '
			END
			IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
			ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
		
	SET @sqlcommand = @sqlcommand + N'
		UNION
		SELECT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) AS [PublishDate]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID '
	IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	
	SET @sqlcommand = @sqlcommand + N'
		WHERE ' + @sqlSharingPortal + N' 
		AND na.HasPermissions = 1
			AND na.EventArticle = 0
			AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)) '
			IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
			ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
SET @sqlcommand = @sqlcommand + N'
) AS final
GROUP BY MONTH(PublishDate), YEAR(PublishDate)
ORDER BY [Year] DESC, [Month] DESC '
END
ELSE IF @OnlyEvents = 1 AND @OnlyArticles = 0 -- only events
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	SELECT MONTH(final.StartDate) AS [Month], YEAR(final.StartDate) AS [Year], COUNT(*) AS [Count]
	FROM (
		SELECT DISTINCT na.[ArticleID],DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [StartDate]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN #ViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
	IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	
	SET @sqlcommand = @sqlcommand + N'
		WHERE ' + @sqlSharingPortal + N' 
			AND na.HasPermissions = 0
			AND na.EventArticle = 1
			AND ne.Recurring = 0
			AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
			AND ne.EndDate < @CurrentDate '
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
			ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
	SET @sqlcommand = @sqlcommand + N'
		UNION ALL
		SELECT DISTINCT na.[ArticleID],DATEADD(hh, @DateTimeOffset, nerd.[StartDateTime]) AS [StartDate]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN #ViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = CASE WHEN nerd.EndDateTime < @CurrentDate THEN 1 ELSE 0 END '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	
	SET @sqlcommand = @sqlcommand + N'
		WHERE ' + @sqlSharingPortal + N' 
			AND na.HasPermissions = 0
			AND na.EventArticle = 1
			AND ne.Recurring = 1
			AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
			ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
		
	SET @sqlcommand = @sqlcommand + N'
		UNION ALL
		SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [StartDate]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	
	SET @sqlcommand = @sqlcommand + N'
		WHERE ' + @sqlSharingPortal + N' 
			AND na.HasPermissions = 1
			AND na.EventArticle = 1
			AND ne.Recurring = 0
			AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
			AND ne.EndDate < @CurrentDate '
			IF @AdminOrSuperUser = 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
				IF @UserId = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
				ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserId '
			END
			IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
			ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
			
	SET @sqlcommand = @sqlcommand + N'
		UNION ALL
		SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [StartDate]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = CASE WHEN nerd.EndDateTime < @CurrentDate THEN 1 ELSE 0 END '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	
	SET @sqlcommand = @sqlcommand + N'
		WHERE ' + @sqlSharingPortal + N' 
			AND na.HasPermissions = 1
			AND na.EventArticle = 1
			AND ne.Recurring = 1
			AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			IF @AdminOrSuperUser = 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
				IF @UserId = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
				ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserId '
			END
			IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
			ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
			
	SET @sqlcommand = @sqlcommand + N'
		UNION
		SELECT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [StartDate]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	
	SET @sqlcommand = @sqlcommand + N'
		WHERE ' + @sqlSharingPortal + N' 
			AND na.HasPermissions = 1
			AND na.EventArticle = 1
			AND ne.Recurring = 0
			AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
			AND ne.EndDate < @CurrentDate '
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)) '
			IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
			ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '

	SET @sqlcommand = @sqlcommand + N'
		UNION ALL
		SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [StartDate]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = CASE WHEN nerd.EndDateTime < @CurrentDate THEN 1 ELSE 0 END '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	
	SET @sqlcommand = @sqlcommand + N'
		WHERE ' + @sqlSharingPortal + N' 
			AND na.HasPermissions = 1
			AND na.EventArticle = 1
			AND ne.Recurring = 1
			AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)) '
			IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
			ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '

	SET @sqlcommand = @sqlcommand + N'
) AS final
GROUP BY MONTH(StartDate), YEAR(StartDate)
ORDER BY [Year] DESC, [Month] DESC '
END
ELSE -- articles and events
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	SELECT MONTH(final.CombinedDate) AS [Month], YEAR(final.CombinedDate) AS [Year], COUNT(*) AS [Count]
	FROM (
		SELECT DISTINCT na.[ArticleID],DATEADD(hh, @DateTimeOffset, na.[PublishDate]) AS [CombinedDate]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN #ViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	
	SET @sqlcommand = @sqlcommand + N'
		WHERE ' + @sqlSharingPortal + N' 
			AND na.HasPermissions = 0
			AND na.EventArticle = 0
			AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
			ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
		
	SET @sqlcommand = @sqlcommand + N'
		UNION ALL
		SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) AS [CombinedDate]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	
	SET @sqlcommand = @sqlcommand + N'
		WHERE ' + @sqlSharingPortal + N' 
			AND na.HasPermissions = 1
			AND na.EventArticle = 0
			AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			IF @AdminOrSuperUser = 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
				IF @UserId = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
				ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserId '
			END
			IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
			ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
		
	SET @sqlcommand = @sqlcommand + N'
		UNION
		SELECT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) AS [CombinedDate]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	
	SET @sqlcommand = @sqlcommand + N'
		WHERE ' + @sqlSharingPortal + N' 
			AND na.HasPermissions = 1
			AND na.EventArticle = 0
			AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)) '
			IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
			ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '

	SET @sqlcommand = @sqlcommand + N'
		UNION ALL
		SELECT DISTINCT na.[ArticleID],DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [CombinedDate]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN #ViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	
	SET @sqlcommand = @sqlcommand + N'
		WHERE ' + @sqlSharingPortal + N' 
			AND na.HasPermissions = 0
			AND na.EventArticle = 1
			AND ne.Recurring = 0
			AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
			AND ne.EndDate < @CurrentDate '
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
			ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
		
	SET @sqlcommand = @sqlcommand + N'
		UNION ALL
		SELECT DISTINCT na.[ArticleID],DATEADD(hh, @DateTimeOffset, nerd.[StartDateTime]) AS [CombinedDate]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN #ViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = CASE WHEN nerd.EndDateTime < @CurrentDate THEN 1 ELSE 0 END '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	
	SET @sqlcommand = @sqlcommand + N'
		WHERE ' + @sqlSharingPortal + N' 
			AND na.HasPermissions = 0
			AND na.EventArticle = 1
			AND ne.Recurring = 1
			AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
			ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
		
	SET @sqlcommand = @sqlcommand + N'
		UNION ALL
		SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [CombinedDate]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	
	SET @sqlcommand = @sqlcommand + N'
		WHERE ' + @sqlSharingPortal + N' 
			AND na.HasPermissions = 1
			AND na.EventArticle = 1
			AND ne.Recurring = 0
			AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
			AND ne.EndDate < @CurrentDate '
			IF @AdminOrSuperUser = 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
				IF @UserId = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
				ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserId '
			END
			IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
			ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
		
	SET @sqlcommand = @sqlcommand + N'
		UNION ALL
		SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [CombinedDate]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = CASE WHEN nerd.EndDateTime < @CurrentDate THEN 1 ELSE 0 END '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	
	SET @sqlcommand = @sqlcommand + N'
		WHERE ' + @sqlSharingPortal + N' 
			AND na.HasPermissions = 1
			AND na.EventArticle = 1
			AND ne.Recurring = 1
			AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			IF @AdminOrSuperUser = 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
				IF @UserId = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
				ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserId '
			END
			IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
			ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
		
	SET @sqlcommand = @sqlcommand + N'
		UNION
		SELECT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [CombinedDate]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	
	SET @sqlcommand = @sqlcommand + N'
		WHERE ' + @sqlSharingPortal + N' 
			AND na.HasPermissions = 1
			AND na.EventArticle = 1
			AND ne.Recurring = 0
			AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
			AND ne.EndDate < @CurrentDate '
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)) '
			IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
			ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '

	SET @sqlcommand = @sqlcommand + N'
		UNION ALL
		SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [CombinedDate]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = CASE WHEN nerd.EndDateTime < @CurrentDate THEN 1 ELSE 0 END '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	
	SET @sqlcommand = @sqlcommand + N'
		WHERE ' + @sqlSharingPortal + N' 
			AND na.HasPermissions = 1
			AND na.EventArticle = 1
			AND ne.Recurring = 1
			AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)) '
			IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId '
			ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '

	SET @sqlcommand = @sqlcommand + N'
) AS final
GROUP BY MONTH(CombinedDate), YEAR(CombinedDate)
ORDER BY [Year] DESC, [Month] DESC '
END

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N' DROP TABLE #SharingPortals;';

EXEC sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalId = @PortalId
	,@UserId = @UserId
	,@ModuleId = @ModuleId
	,@LocaleCode = @LocaleCode
	,@FilterByDnnUserId = @FilterByDnnUserId
	,@FilterByDnnGroupId = @FilterByDnnGroupId
	,@PermissionsModuleId = @PermissionsModuleId
	,@DateTimeOffset = @DateTimeOffset
	,@FilterCategoryId = @FilterCategoryId
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetAllContent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetAllContent] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetAllContent]
	@PortalId INT,
	@UserId INT,
	@ModuleId INT,
	@AdminOrSuperUser BIT  = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL,
	@eToDate DATETIME = NULL,
	@DisplayType TINYINT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDnnUserId INT = 0,
	@FilterByDnnGroupId INT = 0,
	@ShowAllAuthors BIT = 1,
	@CategoryFilterType TINYINT = 0,
	@HideUnlocalizedItems BIT = 0,
	@SatellitePermissionsSource TINYINT = 0,
	@PermissionsModuleId INT = 0,
	@FilterCategoryId INT = NULL,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	@PortalId INT
	,@UserId INT
	,@ModuleId INT
	,@AdminOrSuperUser BIT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@DisplayType TINYINT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FilterByDnnUserId INT
	,@FilterByDnnGroupId INT
	,@ShowAllAuthors BIT
	,@CategoryFilterType TINYINT
	,@HideUnlocalizedItems BIT
	,@SatellitePermissionsSource TINYINT
	,@PermissionsModuleId INT
	,@FilterCategoryId INT'

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); 

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleId;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalId ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalId ';
END

IF @UserId <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleId
			AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

IF @AdminOrSuperUser = 1 OR @SatellitePermissionsSource = 0
BEGIN
	SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #ViewCategories
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.' + @sqlSharingPortalAll
END
ELSE IF @UserId = -1
BEGIN
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalId  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID IS NULL
					AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.ModuleID = @PermissionsModuleId AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID = @PermissionsModuleId
					AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @IsPortalSharing = 1
	BEGIN -- only can be by module settings, roles from current portal!
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
	ELSE
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId;
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
END

IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
	WHERE ' + @sqlSharingPortalAll
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
	WHERE ModuleID = @ModuleId; '
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	;WITH hierarchy AS(
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
			WHERE ci.ModuleID = @ModuleId
				AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
		)
		AND cl.' + @sqlSharingPortalAll + '
		UNION ALL
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
	)
	INSERT INTO #FilterCategories
	SELECT DISTINCT CategoryID
	FROM hierarchy; '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @ShowAllAuthors = 0
BEGIN
	SET @sqlcommand = @sqlcommand  + N'
	DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
	WHERE mai.ModuleID = @ModuleId
	UNION 
	SELECT [UserID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @ModuleId '
END

SET @sqlcommand = @sqlcommand  + N'
;WITH MainFilters AS(
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '
	IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand  + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	IF @FilterByDnnGroupId <> 0 
		SET @sqlcommand = @sqlcommand  + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDnnUserId <> 0
		SET @sqlcommand = @sqlcommand  + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	SET @sqlcommand = @sqlcommand  + N'
	WHERE ' + @sqlSharingPortal + N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand  + N' AND na.HideDefaultLocale = 0 '
		IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand  + N' AND na.UserID = @FilterByDnnUserId '
		ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand  + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
	SET @sqlcommand = @sqlcommand  + N'
)'
IF @LocaleCode IS NOT NULL
BEGIN
SET @sqlcommand = @sqlcommand  + N'
, OnlyArticleIDs (ArticleID) AS (
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
	WHERE na.HasPermissions = 0
		AND na.EventArticle = 0 
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
		AND na.PublishDate BETWEEN @FromDate AND @ToDate '
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
	SET @sqlcommand = @sqlcommand  + N'
	UNION
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate '
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) '
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
	SET @sqlcommand = @sqlcommand  + N'
	UNION
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 '
	IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate '
	ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate '
	ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) '
	SET @sqlcommand = @sqlcommand  + N'
	WHERE na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 1
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
	SET @sqlcommand = @sqlcommand  + N'
	UNION ALL
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
	WHERE na.HasPermissions = 1
		AND na.EventArticle = 0  
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
		AND na.PublishDate BETWEEN @FromDate AND @ToDate '
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			IF @UserId = -1 SET @sqlcommand = @sqlcommand  + N' AND aup.UserID IS NULL '
			ELSE SET @sqlcommand = @sqlcommand  + N' AND aup.UserID = @UserId '
		END 
	SET @sqlcommand = @sqlcommand  + N'
	UNION ALL
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate '
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) '
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			IF @UserId = -1 SET @sqlcommand = @sqlcommand  + N' AND aup.UserID IS NULL '
			ELSE SET @sqlcommand = @sqlcommand  + N' AND aup.UserID = @UserId '
		END 
	SET @sqlcommand = @sqlcommand  + N'
	UNION ALL
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 '
	IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate '
	ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate '
	ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) '
	SET @sqlcommand = @sqlcommand  + N'
	WHERE na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			IF @UserId = -1 SET @sqlcommand = @sqlcommand  + N' AND aup.UserID IS NULL '
			ELSE SET @sqlcommand = @sqlcommand  + N' AND aup.UserID = @UserId '
		END 
	SET @sqlcommand = @sqlcommand  + N'
	UNION
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
	WHERE na.HasPermissions = 1
		AND na.EventArticle = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
		AND na.PublishDate BETWEEN @FromDate AND @ToDate '
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
		END
	SET @sqlcommand = @sqlcommand  + N'
	UNION ALL
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate '
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) '
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
		END
	SET @sqlcommand = @sqlcommand  + N'
	UNION ALL
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 '
	IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate '
	ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate '
	ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) '
	SET @sqlcommand = @sqlcommand  + N'
	WHERE na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
		END
SET @sqlcommand = @sqlcommand  + N'
),
FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
	 SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription
	 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization]
	 WHERE ArticleID IN (SELECT ArticleID FROM OnlyArticleIDs) AND LocaleCode = @LocaleCode
)
SELECT *, StartDate AS CombinedOrderBy, categories.CssCategoryClasses, maps.GoogleMapData, '
	If @CategoryFilterType <> 0
		 SET @sqlcommand = @sqlcommand  + N'link.LinkTabId, link.LinkModuleId '
	ELSE
		SET @sqlcommand = @sqlcommand  + N'NULL AS LinkTabId, NULL AS LinkModuleId'

	SET @sqlcommand = @sqlcommand  + N'
FROM (
	SELECT alr.*,
		CASE WHEN alr.[EventArticle] = 1 THEN CASE WHEN ne.[Recurring] = 1 THEN nerd.[StartDateTime] ELSE ne.[StartDate] END ELSE alr.[PublishDate] END AS StartDate,
		CASE WHEN ne.[Recurring] = 1 THEN nerd.[EndDateTime] ELSE ne.[EndDate] END AS EndDate,
		CASE WHEN ne.[Recurring] = 1 THEN nerd.[RecurringID] ELSE NULL END AS RecurringID,
		ne.[WhloeDay],ne.[ShowEndDate]
		FROM (
			SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[ArticleImage],n.[PublishDate],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[EventArticle],n.[DetailTarget]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			WHERE ArticleID IN (SELECT ArticleID FROM OnlyArticleIDs WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			UNION ALL
			SELECT n.[ArticleID],n.[PortalID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],n.[ArticleImage],n.[PublishDate],fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[EventArticle],n.[DetailTarget]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID
		) As alr
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON alr.ArticleID = ne.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON (ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 '
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate '
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = alr.ArticleID ORDER BY erd.StartDateTime) AND alr.PublishDate >= @FromDate AND alr.PublishDate <= @ToDate '
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = alr.ArticleID ORDER BY erd.StartDateTime) AND alr.PublishDate >= @FromDate AND alr.PublishDate <= @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) '
		SET @sqlcommand = @sqlcommand  + N'
		 )
	) AS alrFinal
	OUTER APPLY 
	(
		SELECT c.CategoryID AS "@id", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #ViewCategories AS uvc ON c.CategoryID = uvc.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cl ON uvc.CategoryID = cl.CategoryID
		WHERE cl.ArticleID = alrFinal.ArticleID
		ORDER BY c.Position
		FOR XML PATH(''category''), ROOT(''categories'')
	) AS categories (CssCategoryClasses)
	OUTER APPLY 
	( 
		SELECT PointData AS GoogleMapData
		FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS md
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS mc ON md.GoogleMapID = mc.GoogleMapID
		WHERE mc.ArticleID = alrFinal.ArticleID
	) maps '
	 
	 If @CategoryFilterType <> 0
		 SET @sqlcommand = @sqlcommand  + N'
		 OUTER APPLY 
		( 
			SELECT TOP 1 tm.[TabID] AS LinkTabId, clink.NewsModuleID AS LinkModuleId
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl ON c.CategoryID = cl.CategoryID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS clink ON clink.CategoryID = cl.CategoryID AND clink.SourceModuleID = @ModuleId
			INNER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON clink.NewsModuleID = tm.ModuleID
			WHERE c.ArticleID = alrFinal.ArticleID
				AND cl.' + @sqlSharingPortalAll + '
			ORDER BY cl.Position
		) link '

	 SET @sqlcommand = @sqlcommand  + N'
	ORDER BY CombinedOrderBy; '
END
ELSE
BEGIN
SET @sqlcommand = @sqlcommand  + N'
	SELECT alr.[ArticleID],alr.[PortalID],alr.[UserID],alr.[RecurringID],alr.[Title],alr.[SubTitle],alr.[Summary],alr.[ArticleImage],alr.[PublishDate],alr.[TitleLink],alr.[DetailType],alr.[DetailTypeData],alr.[EventArticle],alr.[DetailTarget],
	alr.StartDate, alr.EndDate,alr.WhloeDay,alr.ShowEndDate,alr.StartDate AS CombinedOrderBy, categories.CssCategoryClasses, maps.GoogleMapData, '

	If @CategoryFilterType <> 0
		 SET @sqlcommand = @sqlcommand  + N'link.LinkTabId, link.LinkModuleId '
	ELSE
		SET @sqlcommand = @sqlcommand  + N'NULL AS LinkTabId, NULL AS LinkModuleId'

	SET @sqlcommand = @sqlcommand  + N'
	FROM (
		SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[ArticleImage],n.[PublishDate],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[EventArticle],n.[DetailTarget],ne.[WhloeDay],ne.[ShowEndDate],
			CASE WHEN n.[EventArticle] = 1 THEN CASE WHEN ne.[Recurring] = 1 THEN nerd.[StartDateTime] ELSE ne.[StartDate] END ELSE n.[PublishDate] END AS StartDate,
			CASE WHEN ne.[Recurring] = 1 THEN nerd.[EndDateTime] ELSE ne.[EndDate] END AS EndDate,
			CASE WHEN ne.[Recurring] = 1 THEN nerd.[RecurringID] ELSE NULL END AS RecurringID
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON n.ArticleID = ne.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 '
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate '
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = n.ArticleID ORDER BY erd.StartDateTime) AND n.PublishDate >= @FromDate AND n.PublishDate <= @ToDate '
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = n.ArticleID ORDER BY erd.StartDateTime) AND n.PublishDate >= @FromDate AND n.PublishDate <= @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) '
		
		SET @sqlcommand = @sqlcommand  + N' 
		WHERE n.ArticleID IN(
		 	SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
			WHERE na.HasPermissions = 0
				AND na.EventArticle = 0 
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
				AND na.PublishDate BETWEEN @FromDate AND @ToDate '
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			SET @sqlcommand = @sqlcommand  + N'
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
			WHERE na.HasPermissions = 0
				AND na.EventArticle = 1
				AND ne.Recurring = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
				IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate '
				ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
				ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) '
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			SET @sqlcommand = @sqlcommand  + N'
			UNION
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 1
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 '
			IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate '
			ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate '
			ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) '
			SET @sqlcommand = @sqlcommand  + N'
			WHERE na.HasPermissions = 0
				AND na.EventArticle = 1
				AND ne.Recurring = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			SET @sqlcommand = @sqlcommand  + N'
			UNION ALL
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			WHERE na.HasPermissions = 1
				AND na.EventArticle = 0  
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
				AND na.PublishDate BETWEEN @FromDate AND @ToDate '
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
					IF @UserId = -1 SET @sqlcommand = @sqlcommand  + N' AND aup.UserID IS NULL '
					ELSE SET @sqlcommand = @sqlcommand  + N' AND aup.UserID = @UserId '
				END 
			SET @sqlcommand = @sqlcommand  + N'
			UNION ALL
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
			WHERE na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
				IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate '
				ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
				ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) '
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
					IF @UserId = -1 SET @sqlcommand = @sqlcommand  + N' AND aup.UserID IS NULL '
					ELSE SET @sqlcommand = @sqlcommand  + N' AND aup.UserID = @UserId '
				END 
			SET @sqlcommand = @sqlcommand  + N'
			UNION ALL
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 '
			IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate '
			ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate '
			ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) '
			SET @sqlcommand = @sqlcommand  + N'
			WHERE na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
					IF @UserId = -1 SET @sqlcommand = @sqlcommand  + N' AND aup.UserID IS NULL '
					ELSE SET @sqlcommand = @sqlcommand  + N' AND aup.UserID = @UserId '
				END 
			SET @sqlcommand = @sqlcommand  + N'
			UNION
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
			WHERE na.HasPermissions = 1
				AND na.EventArticle = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
				AND na.PublishDate BETWEEN @FromDate AND @ToDate '
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
				END
			SET @sqlcommand = @sqlcommand  + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
			WHERE na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
				IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate '
				ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
				ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) '
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
				END
			SET @sqlcommand = @sqlcommand  + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 '
			IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate '
			ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate '
			ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) '
			SET @sqlcommand = @sqlcommand  + N'
			WHERE na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
				END
			SET @sqlcommand = @sqlcommand  + N'
			)
	) AS alr
	OUTER APPLY 
	(
		SELECT c.CategoryID AS "@id", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #ViewCategories AS uvc ON c.CategoryID = uvc.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cl ON uvc.CategoryID = cl.CategoryID
		WHERE cl.ArticleID = alr.ArticleID
		ORDER BY c.Position
		FOR XML PATH(''category''), ROOT(''categories'')
	) AS categories (CssCategoryClasses)
	OUTER APPLY 
	( 
		SELECT PointData AS GoogleMapData
		FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS md
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS mc ON md.GoogleMapID = mc.GoogleMapID
		WHERE mc.ArticleID = alr.ArticleID
	) maps '
	 
	IF @CategoryFilterType <> 0
	SET @sqlcommand = @sqlcommand  + N'
	OUTER APPLY 
	( 
		SELECT TOP 1 tm.[TabID] AS LinkTabId, clink.NewsModuleID AS LinkModuleId
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl ON c.CategoryID = cl.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS clink ON clink.CategoryID = cl.CategoryID AND clink.SourceModuleID = @ModuleId
		INNER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON clink.NewsModuleID = tm.ModuleID
		WHERE c.ArticleID = alr.ArticleID
			AND cl.' + @sqlSharingPortalAll + '
		ORDER BY cl.Position
	) link '

	 SET @sqlcommand = @sqlcommand  + N'
	 ORDER BY CombinedOrderBy; '
END

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N' DROP TABLE #SharingPortals;';

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalId = @PortalId
	,@UserId = @UserId
	,@ModuleId = @ModuleId
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@DisplayType = @DisplayType
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FilterByDnnUserId = @FilterByDnnUserId
	,@FilterByDnnGroupId = @FilterByDnnGroupId
	,@ShowAllAuthors = @ShowAllAuthors
	,@CategoryFilterType = @CategoryFilterType
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@SatellitePermissionsSource = @SatellitePermissionsSource
	,@PermissionsModuleId = @PermissionsModuleId
	,@FilterCategoryId = @FilterCategoryId
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetArticles]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetArticles] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetArticles]
	@PortalId INT,
	@UserId INT,
	@ModuleId INT,
	@AdminOrSuperUser BIT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL,
	@eToDate DATETIME = NULL,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDnnUserId INT = 0,
	@FilterByDnnGroupId INT = 0,
	@ShowAllAuthors BIT = 1,
	@CategoryFilterType TINYINT = 0,
	@HideUnlocalizedItems BIT = 0,
	@SatellitePermissionsSource TINYINT = 0,
	@PermissionsModuleId INT = 0,
	@FilterCategoryId INT = NULL,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(1000);
SET @paramList = N'
	@PortalId INT
	,@UserId INT
	,@ModuleId INT
	,@AdminOrSuperUser BIT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FilterByDnnUserId INT
	,@FilterByDnnGroupId INT
	,@ShowAllAuthors BIT
	,@CategoryFilterType TINYINT
	,@HideUnlocalizedItems BIT
	,@SatellitePermissionsSource TINYINT
	,@PermissionsModuleID INT
	,@FilterCategoryId INT'

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleId;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalId ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalId ';
END

IF @UserId <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleId
			AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

IF @AdminOrSuperUser = 1 OR @SatellitePermissionsSource = 0
BEGIN
	SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #ViewCategories
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.' + @sqlSharingPortalAll
END
ELSE IF @UserId = -1
BEGIN
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalId  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID IS NULL
					AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.ModuleID = @PermissionsModuleId AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID = @PermissionsModuleId
					AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @IsPortalSharing = 1
	BEGIN -- only can be by module settings, roles from current portal!
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
	ELSE
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId;
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
END

IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
	WHERE ' + @sqlSharingPortalAll
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
	WHERE ModuleID = @ModuleId; '
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	;WITH hierarchy AS(
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
			WHERE ci.ModuleID = @ModuleId
				AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
		)
		AND cl.' + @sqlSharingPortalAll + '
		UNION ALL
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
	)
	INSERT INTO #FilterCategories
	SELECT DISTINCT CategoryID
	FROM hierarchy; '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @ShowAllAuthors = 0
BEGIN
	SET @sqlcommand = @sqlcommand  + N'
	DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleId
	UNION 
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @ModuleId '
END

SET @sqlcommand = @sqlcommand  + N'
;WITH MainFilters AS(
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand  + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
		IF @FilterByDnnGroupId <> 0 
			SET @sqlcommand = @sqlcommand  + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
		ELSE IF @FilterByDnnUserId <> 0
			SET @sqlcommand = @sqlcommand  + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	SET @sqlcommand = @sqlcommand  + N'
	WHERE ' + @sqlSharingPortal + N'
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND na.PublishDate BETWEEN @FromDate AND @ToDate '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand  + N' AND na.HideDefaultLocale = 0 '
		IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand  + N' AND na.UserID = @FilterByDnnUserId '
		ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand  + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
	SET @sqlcommand = @sqlcommand  + N'
)'
IF @LocaleCode IS NOT NULL
BEGIN
SET @sqlcommand = @sqlcommand  + N'
, OnlyArticleIDs (ArticleID) AS (
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
	WHERE na.HasPermissions = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
	SET @sqlcommand = @sqlcommand  + N'
	UNION ALL
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
	WHERE na.HasPermissions = 1
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			IF @UserId = -1 SET @sqlcommand = @sqlcommand  + N' AND aup.UserID IS NULL '
			ELSE SET @sqlcommand = @sqlcommand  + N' AND aup.UserID = @UserId '
		END 
	SET @sqlcommand = @sqlcommand  + N'
	UNION
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
	WHERE na.HasPermissions = 1
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
		END

SET @sqlcommand = @sqlcommand  + N'
),
FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
	 SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM OnlyArticleIDs) AND LocaleCode = @LocaleCode
)
SELECT alr.*,PublishDate AS CombinedOrderBy, categories.CssCategoryClasses, '

If @CategoryFilterType <> 0
		SET @sqlcommand = @sqlcommand  + N'link.LinkTabId, link.LinkModuleId '
ELSE
	SET @sqlcommand = @sqlcommand  + N'NULL AS LinkTabId, NULL AS LinkModuleId'

SET @sqlcommand = @sqlcommand  + N'
FROM (
	SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[ArticleImage],n.[PublishDate],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[EventArticle],n.[DetailTarget]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	WHERE ArticleID IN (SELECT ArticleID FROM OnlyArticleIDs WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
	UNION ALL
	SELECT n.[ArticleID],n.[PortalID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],n.[ArticleImage],n.[PublishDate],fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[EventArticle],n.[DetailTarget]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID
) As alr
OUTER APPLY 
(
	SELECT c.CategoryID AS "@id", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #ViewCategories AS uvc ON c.CategoryID = uvc.CategoryID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cl ON uvc.CategoryID = cl.CategoryID
	WHERE cl.ArticleID = alr.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')
) AS categories (CssCategoryClasses) '
	 
IF @CategoryFilterType <> 0
SET @sqlcommand = @sqlcommand  + N'
OUTER APPLY 
( 
	SELECT TOP 1 tm.[TabID] AS LinkTabId, clink.NewsModuleID AS LinkModuleId
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl ON c.CategoryID = cl.CategoryID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS clink ON clink.CategoryID = cl.CategoryID AND clink.SourceModuleID = @ModuleId
	INNER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON clink.NewsModuleID = tm.ModuleID
	WHERE c.ArticleID = alr.ArticleID
		AND cl.' + @sqlSharingPortalAll + '
	ORDER BY cl.Position
) link '

SET @sqlcommand = @sqlcommand  + N'
ORDER BY alr.PublishDate; '
END
ELSE
BEGIN
SET @sqlcommand = @sqlcommand  + N'
SELECT alr.*,PublishDate AS CombinedOrderBy, categories.CssCategoryClasses, '

If @CategoryFilterType <> 0
		SET @sqlcommand = @sqlcommand  + N'link.LinkTabId, link.LinkModuleId '
ELSE
	SET @sqlcommand = @sqlcommand  + N'NULL AS LinkTabId, NULL AS LinkModuleId'

SET @sqlcommand = @sqlcommand  + N'
FROM (
	SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[ArticleImage],n.[PublishDate],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[EventArticle],n.[DetailTarget]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	WHERE n.ArticleID IN(
		SELECT na.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
		WHERE na.HasPermissions = 0
			AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
		SET @sqlcommand = @sqlcommand  + N'
		UNION ALL
		SELECT na.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		WHERE na.HasPermissions = 1
			AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
			IF @AdminOrSuperUser = 0
			BEGIN
				SET @sqlcommand = @sqlcommand  + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
				IF @UserId = -1 SET @sqlcommand = @sqlcommand  + N' AND aup.UserID IS NULL '
				ELSE SET @sqlcommand = @sqlcommand  + N' AND aup.UserID = @UserId '
			END 
		SET @sqlcommand = @sqlcommand  + N'
		UNION
		SELECT na.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		WHERE na.HasPermissions = 1
			AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
			IF @AdminOrSuperUser = 0
			BEGIN
				SET @sqlcommand = @sqlcommand  + N' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
			END
		SET @sqlcommand = @sqlcommand  + N'
		)
	) AS alr
	OUTER APPLY 
	(
		SELECT c.CategoryID AS "@id", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #ViewCategories AS uvc ON c.CategoryID = uvc.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cl ON uvc.CategoryID = cl.CategoryID
		WHERE cl.ArticleID = alr.ArticleID
		ORDER BY c.Position
		FOR XML PATH(''category''), ROOT(''categories'')
	) AS categories (CssCategoryClasses) '
	 
	IF @CategoryFilterType <> 0
	SET @sqlcommand = @sqlcommand  + N'
	OUTER APPLY 
	( 
		SELECT TOP 1 tm.[TabID] AS LinkTabId, clink.NewsModuleID AS LinkModuleId
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl ON c.CategoryID = cl.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS clink ON clink.CategoryID = cl.CategoryID AND clink.SourceModuleID = @ModuleId
		INNER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON clink.NewsModuleID = tm.ModuleID
		WHERE c.ArticleID = alr.ArticleID
			AND cl.' + @sqlSharingPortalAll + '
		ORDER BY cl.Position
	) link '

	 SET @sqlcommand = @sqlcommand  + N'
	ORDER BY alr.PublishDate; '
END

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N' DROP TABLE #SharingPortals;';

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalId = @PortalId
	,@UserId = @UserId
	,@ModuleId = @ModuleId
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FilterByDnnUserId = @FilterByDnnUserId
	,@FilterByDnnGroupId = @FilterByDnnGroupId
	,@ShowAllAuthors = @ShowAllAuthors
	,@CategoryFilterType = @CategoryFilterType
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@SatellitePermissionsSource = @SatellitePermissionsSource
	,@PermissionsModuleID = @PermissionsModuleID
	,@FilterCategoryId = @FilterCategoryId
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetEvents] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetEvents]
	@PortalId INT,
	@UserId INT,
	@ModuleId INT,
	@AdminOrSuperUser BIT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL,
	@eToDate DATETIME = NULL,
	@DisplayType TINYINT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDnnUserId INT = 0,
	@FilterByDnnGroupId INT = 0,
	@ShowAllAuthors BIT = 1,
	@CategoryFilterType TINYINT = 0,
	@HideUnlocalizedItems BIT = 0,
	@SatellitePermissionsSource TINYINT = 0,
	@PermissionsModuleId INT = 0,
	@FilterCategoryId INT = NULL,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalId INT
	,@UserId INT
	,@ModuleId INT
	,@AdminOrSuperUser BIT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@DisplayType TINYINT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FilterByDnnUserId INT
	,@FilterByDnnGroupId INT
	,@ShowAllAuthors BIT
	,@CategoryFilterType TINYINT
	,@HideUnlocalizedItems BIT
	,@SatellitePermissionsSource TINYINT
	,@PermissionsModuleId INT
	,@FilterCategoryId INT'

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); 

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleId;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalId ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalId ';
END

IF @UserId <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleId
			AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

IF @AdminOrSuperUser = 1 OR @SatellitePermissionsSource = 0
BEGIN
	SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #ViewCategories
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.' + @sqlSharingPortalAll
END
ELSE IF @UserId = -1
BEGIN
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalId  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID IS NULL
					AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.ModuleID = @PermissionsModuleId AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID = @PermissionsModuleId
					AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @IsPortalSharing = 1
	BEGIN -- only can be by module settings, roles from current portal!
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
	ELSE
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId;
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
END

IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
	WHERE ' + @sqlSharingPortalAll
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
	WHERE ModuleID = @ModuleId; '
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	;WITH hierarchy AS(
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
			WHERE ci.ModuleID = @ModuleId
				AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
		)
		AND cl.' + @sqlSharingPortalAll + '
		UNION ALL
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
	)
	INSERT INTO #FilterCategories
	SELECT DISTINCT CategoryID
	FROM hierarchy; '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @ShowAllAuthors = 0
BEGIN
	SET @sqlcommand = @sqlcommand  + N'
	DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleId
	UNION 
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @ModuleId '
END

SET @sqlcommand = @sqlcommand  + N'
;WITH MainFilters AS(
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand  + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
		IF @FilterByDnnGroupId <> 0 
			SET @sqlcommand = @sqlcommand  + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
		ELSE IF @FilterByDnnUserId <> 0
			SET @sqlcommand = @sqlcommand  + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	SET @sqlcommand = @sqlcommand  + N'
	WHERE ' + @sqlSharingPortal + N'
		AND na.EventArticle = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand  + N' AND na.HideDefaultLocale = 0 '
		IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand  + N' AND na.UserID = @FilterByDnnUserId '
		ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand  + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
	SET @sqlcommand = @sqlcommand  + N'
)'
IF @LocaleCode IS NOT NULL
BEGIN
SET @sqlcommand = @sqlcommand  + N'
, OnlyArticleIDs (ArticleID) AS (
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE na.HasPermissions = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
		AND ne.Recurring = 0 '
	IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate '
	ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
	ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) '

	IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
	SET @sqlcommand = @sqlcommand  + N'
	UNION ALL
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 '
	IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate '
	ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate '
	ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) '
	SET @sqlcommand = @sqlcommand  + N'
	WHERE na.HasPermissions = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
		AND ne.Recurring = 1 '
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
	SET @sqlcommand = @sqlcommand  + N'
	UNION ALL
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE na.HasPermissions = 1
		AND ne.Recurring = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate '
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) '
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			IF @UserId = -1 SET @sqlcommand = @sqlcommand  + N' AND aup.UserID IS NULL '
			ELSE SET @sqlcommand = @sqlcommand  + N' AND aup.UserID = @UserId '
		END 
	SET @sqlcommand = @sqlcommand  + N'
	UNION ALL
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 '
	IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate '
	ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate '
	ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) '
	SET @sqlcommand = @sqlcommand  + N'
	WHERE na.HasPermissions = 1
		AND ne.Recurring = 1
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			IF @UserId = -1 SET @sqlcommand = @sqlcommand  + N' AND aup.UserID IS NULL '
			ELSE SET @sqlcommand = @sqlcommand  + N' AND aup.UserID = @UserId '
		END 
	SET @sqlcommand = @sqlcommand  + N'
	UNION
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE na.HasPermissions = 1
		AND ne.Recurring = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate '
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) '
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
		END
	SET @sqlcommand = @sqlcommand  + N'
	UNION ALL
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 '
	IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate '
	ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate '
	ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) '
	SET @sqlcommand = @sqlcommand  + N'
	WHERE na.HasPermissions = 1
		AND ne.Recurring = 1
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
		END
SET @sqlcommand = @sqlcommand  + N'
),
FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
	 SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM OnlyArticleIDs) AND LocaleCode = @LocaleCode
)
SELECT *, StartDate AS CombinedOrderBy, categories.CssCategoryClasses, maps.GoogleMapData, '
	If @CategoryFilterType <> 0
		 SET @sqlcommand = @sqlcommand  + N'link.LinkTabId, link.LinkModuleId '
	ELSE
		SET @sqlcommand = @sqlcommand  + N'NULL AS LinkTabId, NULL AS LinkModuleId'

	SET @sqlcommand = @sqlcommand  + N'
FROM (
	SELECT alr.*,
		CASE WHEN ne.[Recurring] = 1 THEN nerd.[StartDateTime] ELSE ne.[StartDate] END AS StartDate,
		CASE WHEN ne.[Recurring] = 1 THEN nerd.[EndDateTime] ELSE ne.[EndDate] END AS EndDate,
		CASE WHEN ne.[Recurring] = 1 THEN nerd.[RecurringID] ELSE NULL END AS RecurringID,
		ne.[WhloeDay],ne.[ShowEndDate]
		FROM (
			SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[ArticleImage],n.[PublishDate],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[EventArticle],n.[DetailTarget]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM OnlyArticleIDs WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			UNION ALL
			SELECT n.[ArticleID],n.[PortalID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],n.[ArticleImage],n.[PublishDate],fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[EventArticle],n.[DetailTarget]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID
		) As alr
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON alr.ArticleID = ne.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON (ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 '
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate '
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = alr.ArticleID ORDER BY erd.StartDateTime) AND alr.PublishDate >= @FromDate AND alr.PublishDate <= @ToDate '
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = alr.ArticleID ORDER BY erd.StartDateTime) AND alr.PublishDate >= @FromDate AND alr.PublishDate <= @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) '
		SET @sqlcommand = @sqlcommand  + N'
		 )
	) AS alrFinal
	OUTER APPLY 
	(
		SELECT c.CategoryID AS "@id", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #ViewCategories AS uvc ON c.CategoryID = uvc.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cl ON uvc.CategoryID = cl.CategoryID
		WHERE cl.ArticleID = alr.ArticleID
		ORDER BY c.Position
		FOR XML PATH(''category''), ROOT(''categories'')
	) AS categories (CssCategoryClasses)
	OUTER APPLY 
	( 
		SELECT PointData AS GoogleMapData
		FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS md
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS mc ON md.GoogleMapID = mc.GoogleMapID
		WHERE mc.ArticleID = alr.ArticleID
	) maps '
	 
	IF @CategoryFilterType <> 0
	SET @sqlcommand = @sqlcommand  + N'
	OUTER APPLY 
	( 
		SELECT TOP 1 tm.[TabID] AS LinkTabId, clink.NewsModuleID AS LinkModuleId
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl ON c.CategoryID = cl.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS clink ON clink.CategoryID = cl.CategoryID AND clink.SourceModuleID = @ModuleId
		INNER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON clink.NewsModuleID = tm.ModuleID
		WHERE c.ArticleID = alrFinal.ArticleID
			AND cl.' + @sqlSharingPortalAll + '
		ORDER BY cl.Position
	) link '

	 SET @sqlcommand = @sqlcommand  + N'
	ORDER BY CombinedOrderBy; '
END
ELSE
BEGIN
SET @sqlcommand = @sqlcommand  + N'
	SELECT alr.[ArticleID],alr.[PortalID],alr.[UserID],alr.[RecurringID],alr.[Title],alr.[SubTitle],alr.[Summary],alr.[ArticleImage],alr.[PublishDate],alr.[TitleLink],alr.[DetailType],alr.[DetailTypeData],alr.[EventArticle],alr.[DetailTarget],
	alr.[StartDate], alr.[EndDate],alr.[WhloeDay],alr.[ShowEndDate],alr.[StartDate] AS CombinedOrderBy, categories.CssCategoryClasses, maps.GoogleMapData, '

	If @CategoryFilterType <> 0
		 SET @sqlcommand = @sqlcommand  + N'link.LinkTabId, link.LinkModuleId '
	ELSE
		SET @sqlcommand = @sqlcommand  + N'NULL AS LinkTabId, NULL AS LinkModuleId'

	SET @sqlcommand = @sqlcommand  + N'
	FROM (
		SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[ArticleImage],n.[PublishDate],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[EventArticle],n.[DetailTarget],ne.[WhloeDay],ne.[ShowEndDate],
			CASE WHEN ne.[Recurring] = 1 THEN nerd.[StartDateTime] ELSE ne.[StartDate] END AS StartDate,
			CASE WHEN ne.[Recurring] = 1 THEN nerd.[EndDateTime] ELSE ne.[EndDate] END AS EndDate,
			CASE WHEN ne.[Recurring] = 1 THEN nerd.[RecurringID] ELSE NULL END AS RecurringID
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON n.ArticleID = ne.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 '
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate '
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = n.ArticleID ORDER BY erd.StartDateTime) AND n.PublishDate >= @FromDate AND n.PublishDate <= @ToDate '
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = n.ArticleID ORDER BY erd.StartDateTime) AND n.PublishDate >= @FromDate AND n.PublishDate <= @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) '
		
		SET @sqlcommand = @sqlcommand  + N' 
		 WHERE n.ArticleID IN(
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 0
			WHERE na.HasPermissions = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
				AND ne.Recurring = 0 '
			IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate '
			ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
			ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) '

			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			SET @sqlcommand = @sqlcommand  + N'
			UNION ALL
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 1
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 '
			IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate '
			ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate '
			ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) '
			SET @sqlcommand = @sqlcommand  + N'
			WHERE na.HasPermissions = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
				AND ne.Recurring = 1 '
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			SET @sqlcommand = @sqlcommand  + N'
			UNION ALL
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 0
			WHERE na.HasPermissions = 1
				AND ne.Recurring = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
				IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate '
				ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
				ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) '
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
					IF @UserId = -1 SET @sqlcommand = @sqlcommand  + N' AND aup.UserID IS NULL '
					ELSE SET @sqlcommand = @sqlcommand  + N' AND aup.UserID = @UserId '
				END 
			SET @sqlcommand = @sqlcommand  + N'
			UNION ALL
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 1
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 '
			IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate '
			ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate '
			ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) '
			SET @sqlcommand = @sqlcommand  + N'
			WHERE na.HasPermissions = 1
				AND ne.Recurring = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
					IF @UserId = -1 SET @sqlcommand = @sqlcommand  + N' AND aup.UserID IS NULL '
					ELSE SET @sqlcommand = @sqlcommand  + N' AND aup.UserID = @UserId '
				END 
			SET @sqlcommand = @sqlcommand  + N'
			UNION
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 0
			WHERE na.HasPermissions = 1
				AND ne.Recurring = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
				IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate '
				ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
				ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) '
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
				END
			SET @sqlcommand = @sqlcommand  + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 1
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 '
			IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate '
			ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate '
			ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) '
			SET @sqlcommand = @sqlcommand  + N'
			WHERE na.HasPermissions = 1
				AND ne.Recurring = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
				END
			SET @sqlcommand = @sqlcommand  + N'
			)
	) AS alr
	OUTER APPLY 
	(
		SELECT c.CategoryID AS "@id", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #ViewCategories AS uvc ON c.CategoryID = uvc.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cl ON uvc.CategoryID = cl.CategoryID
		WHERE cl.ArticleID = alr.ArticleID
		ORDER BY c.Position
		FOR XML PATH(''category''), ROOT(''categories'')
	) AS categories (CssCategoryClasses)
	OUTER APPLY 
	( 
		SELECT PointData AS GoogleMapData
		FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS md
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS mc ON md.GoogleMapID = mc.GoogleMapID
		WHERE mc.ArticleID = alr.ArticleID
	) maps '
	 
	IF @CategoryFilterType <> 0
	SET @sqlcommand = @sqlcommand  + N'
	OUTER APPLY 
	( 
		SELECT TOP 1 tm.[TabID] AS LinkTabId, clink.NewsModuleID AS LinkModuleId
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl ON c.CategoryID = cl.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS clink ON clink.CategoryID = cl.CategoryID AND clink.SourceModuleID = @ModuleId
		INNER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON clink.NewsModuleID = tm.ModuleID
		WHERE c.ArticleID = alr.ArticleID
			AND cl.' + @sqlSharingPortalAll + '
		ORDER BY cl.Position
	) link '

	 SET @sqlcommand = @sqlcommand  + N'
	 ORDER BY CombinedOrderBy; '
END

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N' DROP TABLE #SharingPortals;';

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalId = @PortalId
	,@UserId = @UserId
	,@ModuleId = @ModuleId
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@DisplayType = @DisplayType
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FilterByDnnUserId = @FilterByDnnUserId
	,@FilterByDnnGroupId = @FilterByDnnGroupId
	,@ShowAllAuthors = @ShowAllAuthors
	,@CategoryFilterType = @CategoryFilterType
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@SatellitePermissionsSource = @SatellitePermissionsSource
	,@PermissionsModuleId = @PermissionsModuleId
	,@FilterCategoryId = @FilterCategoryId
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetUpcomingEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetUpcomingEvents] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetUpcomingEvents]
	@PortalId INT,
	@UserId INT,
	@ModuleId INT,
	@RowCount INT,
	@AdminOrSuperUser BIT  = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDnnUserId INT = 0,
	@FilterByDnnGroupId INT = 0,
	@ShowAllAuthors BIT = 1,
	@CategoryFilterType TINYINT = 0,
	@SatellitePermissionsSource TINYINT = 0,
	@PermissionsModuleId INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@FilterCategoryId INT = NULL,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(1000);
SET @paramList = N'
	@PortalId INT,
	@UserId INT,
	@ModuleId INT,
	@RowCount INT,
	@LocaleCode NVARCHAR(20),
	@FilterByDNNUserID INT,
	@FilterByDNNGroupID INT,
	@PermissionsModuleId INT,
	@FilterCategoryId INT = NULL'

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @EventsLocaleCode NVARCHAR(20);

IF @LocaleCode IS NULL
SET @EventsLocaleCode = ''Default'';
ELSE
SET @EventsLocaleCode = (SELECT @LocaleCode)

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleId;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalId ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalId ';
END

IF @UserId <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleId
			AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

IF @AdminOrSuperUser = 1 OR @SatellitePermissionsSource = 0
BEGIN
	SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #ViewCategories
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.' + @sqlSharingPortalAll
END
ELSE IF @UserId = -1
BEGIN
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalId  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID IS NULL
					AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.ModuleID = @PermissionsModuleId AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID = @PermissionsModuleId
					AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @IsPortalSharing = 1
	BEGIN -- only can be by module settings, roles from current portal!
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
	ELSE
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId;
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
END

IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
	WHERE ' + @sqlSharingPortalAll
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
	WHERE ModuleID = @ModuleId; '
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	;WITH hierarchy AS(
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
			WHERE ci.ModuleID = @ModuleId
				AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
		)
		AND cl.' + @sqlSharingPortalAll + '
		UNION ALL
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
	)
	INSERT INTO #FilterCategories
	SELECT DISTINCT CategoryID
	FROM hierarchy; '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

IF @IsSocialInstance = 1
BEGIN
	IF @FilterByDNNGroupID <> 0
	BEGIN	
		SET @FilterBySocialGroup = 1;
	END
END
ELSE
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleId
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
		WHERE mgi.ModuleID = @ModuleId '
	END
END

SET @sqlcommand = @sqlcommand  + N'
IF @RowCount = 0 OR @RowCount > 100
	SET @RowCount = 100;

;WITH MainFilters AS(
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand  + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
		IF @FilterByDNNGroupID <> 0 
			SET @sqlcommand = @sqlcommand  + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
		ELSE IF @FilterByDNNUserID <> 0
			SET @sqlcommand = @sqlcommand  + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
	SET @sqlcommand = @sqlcommand  + N'
	WHERE ' + @sqlSharingPortal + N'
		AND na.EventArticle = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand  + N' AND na.HideDefaultLocale = 0 '
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand  + N' AND na.UserID = @FilterByDNNUserID '
		ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand  + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
	SET @sqlcommand = @sqlcommand  + N'
)'

IF @LocaleCode IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	, FinalArticleIDsSet (ArticleID) AS (
		SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
			
			SET @sqlcommand = @sqlcommand + N'
			WHERE na.HasPermissions = 0
				AND ne.Recurring = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
				AND ((ne.StartDate >= @CurrentDate) OR (ne.StartDate <= @CurrentDate AND ne.EndDate >= @CurrentDate)) '
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			SET @sqlcommand = @sqlcommand + N'
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 
					((ne.StartDate >= @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID ORDER BY erd.StartDateTime)) OR
							(ne.StartDate < @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime >= @CurrentDate ORDER BY erd.StartDateTime))) '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
			
			SET @sqlcommand = @sqlcommand + N'
			WHERE na.HasPermissions = 0
				AND ne.Recurring = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
			SET @sqlcommand = @sqlcommand + N'
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						
			SET @sqlcommand = @sqlcommand + N'
			WHERE na.HasPermissions = 1
				AND ne.Recurring = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
				AND ((ne.StartDate >= @CurrentDate) OR (ne.StartDate <= @CurrentDate AND ne.EndDate >= @CurrentDate)) '
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
					IF @UserId = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
					ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserId '
				END
			SET @sqlcommand = @sqlcommand + N'
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = 
					CASE WHEN ((ne.StartDate >= @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID ORDER BY erd.StartDateTime)) OR
							(ne.StartDate < @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime >= @CurrentDate ORDER BY erd.StartDateTime)))
						THEN 1
						ELSE 0
					END '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						
			SET @sqlcommand = @sqlcommand + N'
			WHERE na.HasPermissions = 1
				AND ne.Recurring = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
					IF @UserId = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
					ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserId '
				END
			SET @sqlcommand = @sqlcommand + N'
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						
			SET @sqlcommand = @sqlcommand + N'
			WHERE na.HasPermissions = 1
				AND ne.Recurring = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
				AND ((ne.StartDate >= @CurrentDate) OR (ne.StartDate <= @CurrentDate AND ne.EndDate >= @CurrentDate)) '
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)) '
			SET @sqlcommand = @sqlcommand + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = 
					CASE WHEN ((ne.StartDate >= @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID ORDER BY erd.StartDateTime)) OR
							(ne.StartDate < @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime >= @CurrentDate ORDER BY erd.StartDateTime)))
						THEN 1
						ELSE 0
					END '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						
			SET @sqlcommand = @sqlcommand + N'
			WHERE na.HasPermissions = 1
				AND ne.Recurring = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)) '
		SET @sqlcommand = @sqlcommand + N'
		)
	),
	FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords) AS (
		SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
	)
	SELECT TOP (@RowCount)
		alrFinal.*,
		CASE WHEN alrFinal.RecurringID IS NULL
		THEN
			NULL
		ELSE
			(
				SELECT [Summary]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringContent]
				WHERE ArticleID = alrFinal.ArticleID AND RecurringID = alrFinal.RecurringID AND LocaleCode = @EventsLocaleCode
			)
		END AS CustomSummary,
		categories.CssCategoryClasses,
		maps.GoogleMapData, '
	If @CategoryFilterType <> 0
		 SET @sqlcommand = @sqlcommand  + N'link.LinkTabId, link.LinkModuleId '
	ELSE
		SET @sqlcommand = @sqlcommand  + N'NULL AS LinkTabId, NULL AS LinkModuleId'

	SET @sqlcommand = @sqlcommand  + N'
	FROM (
		SELECT alr.*,
			CASE WHEN ne.Recurring = 1 THEN nerd.StartDateTime ELSE ne.StartDate END AS StartDate,
			CASE WHEN ne.Recurring = 1 THEN nerd.EndDateTime ELSE ne.EndDate END AS EndDate,
			CASE WHEN ne.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
			ne.WhloeDay,ne.ShowEndDate,
			ne.Recurring
		FROM (
			SELECT na.ArticleID,na.PortalID,na.UserID,na.PublishDate,na.Title,na.TitleLink,na.DetailType,na.DetailTypeData,na.ArticleImage,na.Summary,na.Article,na.AuthorAliasName,na.[DetailTarget]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			WHERE na.ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			UNION ALL
			SELECT na.ArticleID,na.PortalID,na.UserID,na.PublishDate,fla.Title,fla.TitleLink,na.DetailType,fla.DetailTypeData,na.ArticleImage,fla.Summary,fla.Article,na.AuthorAliasName,na.[DetailTarget]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = na.ArticleID
		) As alr
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON alr.ArticleID = ne.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON (ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 =
			CASE WHEN ((ne.StartDate >= @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID ORDER BY erd.StartDateTime)) OR
					(ne.StartDate < @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime >= @CurrentDate ORDER BY erd.StartDateTime)))
				THEN 1
				ELSE 0
			END 
		)
	) AS alrFinal
	OUTER APPLY 
	(
		SELECT c.CategoryID AS "@id", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #ViewCategories AS uvc ON c.CategoryID = uvc.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cl ON uvc.CategoryID = cl.CategoryID
		WHERE cl.ArticleID = alrFinal.ArticleID
		ORDER BY c.Position
		FOR XML PATH(''category''), ROOT(''categories'')
	) AS categories (CssCategoryClasses)
	OUTER APPLY 
	( 
		SELECT PointData AS GoogleMapData
		FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS md
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection]  AS mc ON md.GoogleMapID = mc.GoogleMapID
		WHERE mc.ArticleID =  alrFinal.ArticleID
	) maps '

	IF @CategoryFilterType <> 0
	SET @sqlcommand = @sqlcommand  + N'
	OUTER APPLY 
	( 
		SELECT TOP 1 tm.[TabID] AS LinkTabId, clink.NewsModuleID AS LinkModuleId
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl ON c.CategoryID = cl.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS clink ON clink.CategoryID = cl.CategoryID AND clink.SourceModuleID = @ModuleId
		INNER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON clink.NewsModuleID = tm.ModuleID
		WHERE c.ArticleID = alrFinal.ArticleID
			AND cl.' + @sqlSharingPortalAll + '
		ORDER BY cl.Position
	) link '

SET @sqlcommand = @sqlcommand  + N'
	ORDER BY alrFinal.StartDate; '
END
ELSE
BEGIN
SET @sqlcommand = @sqlcommand + N'
SELECT TOP (@RowCount)
alr.*,
CASE WHEN alr.RecurringID IS NULL
THEN
	NULL
ELSE
	(
		SELECT [Summary]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringContent]
		WHERE ArticleID = alr.ArticleID AND RecurringID = alr.RecurringID AND LocaleCode = @EventsLocaleCode
	)
END AS CustomSummary,
categories.CssCategoryClasses,
maps.GoogleMapData, '
	If @CategoryFilterType <> 0
		 SET @sqlcommand = @sqlcommand  + N'link.LinkTabId, link.LinkModuleId '
	ELSE
		SET @sqlcommand = @sqlcommand  + N'NULL AS LinkTabId, NULL AS LinkModuleId'

	SET @sqlcommand = @sqlcommand  + N'
FROM (
	SELECT na.[ArticleID],na.[PortalID], na.[UserID], na.[PublishDate], na.[Title], na.[TitleLink],na.[DetailType],na.[DetailTypeData], na.[ArticleImage], na.[Summary], na.[Article], na.[AuthorAliasName],na.[DetailTarget],
	CASE WHEN ne.[Recurring] = 1 THEN nerd.[StartDateTime] ELSE ne.[StartDate] END AS StartDate,
	CASE WHEN ne.[Recurring] = 1 THEN nerd.[EndDateTime] ELSE ne.[EndDate] END AS EndDate,
	CASE WHEN ne.[Recurring] = 1 THEN nerd.[RecurringID] ELSE NULL END AS RecurringID,
	ne.[WhloeDay],ne.[ShowEndDate]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND
		((ne.StartDate >= @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID ORDER BY erd.StartDateTime)) OR
		(ne.StartDate < @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime >= @CurrentDate ORDER BY erd.StartDateTime)))
	WHERE na.ArticleID IN (
		SELECT na.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
		WHERE na.HasPermissions = 0
			AND ne.Recurring = 0
			AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
			AND ((ne.StartDate >= @CurrentDate) OR (ne.StartDate <= @CurrentDate AND ne.EndDate >= @CurrentDate)) '
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
		SET @sqlcommand = @sqlcommand + N'
		UNION ALL
		SELECT na.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND
			((ne.StartDate >= @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID ORDER BY erd.StartDateTime)) OR
			(ne.StartDate < @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime >= @CurrentDate ORDER BY erd.StartDateTime))) '
		SET @sqlcommand = @sqlcommand + N'
		WHERE na.HasPermissions = 0
			AND ne.Recurring = 1
			AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
		SET @sqlcommand = @sqlcommand + N'
		UNION ALL
		SELECT na.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
		WHERE na.HasPermissions = 1
			AND ne.Recurring = 0
			AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
			AND ((ne.StartDate >= @CurrentDate) OR (ne.StartDate <= @CurrentDate AND ne.EndDate >= @CurrentDate)) '
			IF @AdminOrSuperUser = 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
				IF @UserId = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
				ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserId '
			END
		SET @sqlcommand = @sqlcommand + N'
		UNION ALL
		SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND
			((ne.StartDate >= @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID ORDER BY erd.StartDateTime)) OR
			(ne.StartDate < @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime >= @CurrentDate ORDER BY erd.StartDateTime)))
		WHERE na.HasPermissions = 1
			AND ne.Recurring = 1
			AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
			IF @AdminOrSuperUser = 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) '
				IF @UserId = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
				ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserId '
			END
		SET @sqlcommand = @sqlcommand + N'
		UNION
		SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
	
		SET @sqlcommand = @sqlcommand + N'
		WHERE na.HasPermissions = 1
			AND ne.Recurring = 0
			AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
			AND ((ne.StartDate >= @CurrentDate) OR (ne.StartDate <= @CurrentDate AND ne.EndDate >= @CurrentDate)) '
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)) '
		SET @sqlcommand = @sqlcommand + N'
		UNION ALL
		SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND
			((ne.StartDate >= @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID ORDER BY erd.StartDateTime)) OR
			(ne.StartDate < @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime >= @CurrentDate ORDER BY erd.StartDateTime))) '		
		SET @sqlcommand = @sqlcommand + N'
		WHERE na.HasPermissions = 1
			AND ne.Recurring = 1
			AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) '
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)) '
		SET @sqlcommand = @sqlcommand + N'
	)
) AS alr
OUTER APPLY 
(
	SELECT c.CategoryID AS "@id", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #ViewCategories AS uvc ON c.CategoryID = uvc.CategoryID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cl ON uvc.CategoryID = cl.CategoryID
	WHERE cl.ArticleID = alr.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')
) AS categories (CssCategoryClasses)
OUTER APPLY 
( 
	SELECT PointData AS GoogleMapData
	FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS md
	INNER JOIN  {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS mc ON md.GoogleMapID = mc.GoogleMapID
	WHERE mc.ArticleID =  alr.ArticleID
) maps '

IF @CategoryFilterType <> 0
SET @sqlcommand = @sqlcommand  + N'
OUTER APPLY 
( 
	SELECT TOP 1 tm.[TabID] AS LinkTabId, clink.NewsModuleID AS LinkModuleId
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl ON c.CategoryID = cl.CategoryID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS clink ON clink.CategoryID = cl.CategoryID AND clink.SourceModuleID = @ModuleId
	INNER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON clink.NewsModuleID = tm.ModuleID
	WHERE c.ArticleID = alr.ArticleID
		AND cl.' + @sqlSharingPortalAll + '
	ORDER BY cl.Position
) link '

SET @sqlcommand = @sqlcommand  + N'
ORDER BY alr.StartDate; '
END

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N' DROP TABLE #SharingPortals;';

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalId = @PortalId
	,@UserId  = @UserId
	,@ModuleId = @ModuleId
	,@RowCount = @RowCount
	,@LocaleCode = @LocaleCode
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@PermissionsModuleId = @PermissionsModuleId
	,@FilterCategoryId = @FilterCategoryId
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories]
	@PortalId INT,
	@UserId INT,
	@ModuleId INT,
	@DefaultTabId INT,
	@DefaultModuleId INT,
	@AdminOrSuperUser BIT  = 0,
	@CountArticles BIT = NULL,
	@CountEvents BIT = NULL,
	@CountEventsLimitByDays INT = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDnnUserId INT = 0,
	@FilterByDnnGroupId INT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@ShowAllAuthors BIT = 1,
	@CategoryFilterType TINYINT = 0,
	@HideUnlocalizedItems BIT = 0,
	@SatellitePermissionsSource TINYINT = 0,
	@PermissionsModuleID INT = 0,
	@UserCanApprove BIT = 0,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	@PortalId INT,
	@UserId INT,
	@ModuleId INT,
	@DefaultTabId INT,
	@DefaultModuleId INT,
	@AdminOrSuperUser BIT,
	@CountArticles BIT,
	@CountEvents BIT,
	@CountEventsLimitByDays INT,
	@IsSocialInstance BIT,
	@FilterByDnnUserId INT,
	@FilterByDnnGroupId INT,
	@LocaleCode NVARCHAR(20),
	@ShowAllAuthors BIT,
	@CategoryFilterType TINYINT,
	@HideUnlocalizedItems BIT,
	@SatellitePermissionsSource TINYINT,
	@PermissionsModuleID INT,
	@UserCanApprove BIT,
	@IsPortalSharing BIT'
DECLARE @sqlcommand NVARCHAR(MAX);

DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY);

DECLARE @StartDate DATETIME;
IF @CountEventsLimitByDays IS NOT NULL
BEGIN
	SET @StartDate = DATEADD(DD, -@CountEventsLimitByDays, @CurrentDate);
	SET @CountEventsLimitByDays = 1;
END '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleId;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = n.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' n.PortalID = @PortalId ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalId ';
END

IF @UserId <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleId
			AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

IF @AdminOrSuperUser = 1 OR @SatellitePermissionsSource = 0
BEGIN
	SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #ViewCategories
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.' + @sqlSharingPortalAll
END
ELSE IF @UserId = -1
BEGIN
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalId  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID IS NULL
					AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.ModuleID = @PermissionsModuleId AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID = @PermissionsModuleId
					AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @IsPortalSharing = 1
	BEGIN -- only can be by module settings, roles from current portal!
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
	ELSE
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId;
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
END

IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #ViewCategoriesWithFilter
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
	WHERE ' + @sqlSharingPortalAll + '
	INTERSECT
	SELECT vc.CategoryID
	FROM #ViewCategories AS vc; '
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #ViewCategoriesWithFilter
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
	WHERE ModuleID = @ModuleId
	INTERSECT
	SELECT vc.CategoryID
	FROM #ViewCategories AS vc; '
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	;WITH hierarchy AS(
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
			WHERE ci.ModuleID = @ModuleId
				AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
		)
		AND cl.' + @sqlSharingPortalAll + '
		UNION ALL
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
	)
	INSERT INTO #ViewCategoriesWithFilter
	SELECT DISTINCT CategoryID
	FROM hierarchy
	INTERSECT
	SELECT vc.CategoryID
	FROM #ViewCategories AS vc; '
END

IF @IsSocialInstance = 0 AND @ShowAllAuthors = 0
SET @sqlcommand = @sqlcommand + N'
DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);

INSERT INTO @TempAuthorsIDList
SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleId
UNION 
SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @ModuleId '

DECLARE @sqlCategories NVARCHAR(2000);

IF @LocaleCode IS NULL
BEGIN
	IF @IsPortalSharing = 0
		SET @sqlCategories = N'
		SELECT c.[CategoryID],c.[PortalID],c.[CategoryName],c.[Position],c.[ParentCategory],c.[Level],c.[CategoryURL],c.[CategoryImage],c.[CategoryText],c.[Color],
		CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID
		WHERE c.PortalID = @PortalId '
	ELSE		
		SET @sqlCategories = N'
		SELECT c.[CategoryID],c.[PortalID],c.[CategoryName],c.[Position],c.[ParentCategory],c.[Level],c.[CategoryURL],c.[CategoryImage],c.[CategoryText],c.[Color],
		CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #SharingPortals AS sp ON sp.PortalID = c.PortalID
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID '
END
ELSE
BEGIN
	IF @IsPortalSharing = 0
		SET @sqlCategories = N'
		SELECT c.[CategoryID],c.[PortalID],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS CategoryName,
			c.[Position],c.[ParentCategory],c.[Level],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryURL] ELSE cl.[CategoryURL] END AS CategoryURL,c.[CategoryImage],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryText] ELSE cl.[CategoryText] END AS CategoryText,c.[Color],
			CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
		WHERE c.PortalID = @PortalId '
	ELSE
	SET @sqlCategories = N'
		SELECT c.[CategoryID],c.[PortalID],
			CASE WHEN cl.[Title] IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS CategoryName,
			c.[Position],c.[ParentCategory],c.[Level],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryURL] ELSE cl.[CategoryURL] END AS CategoryURL,c.[CategoryImage],
			CASE WHEN cl.[CategoryText] IS NULL THEN c.[CategoryText] ELSE cl.[CategoryText] END AS CategoryText,c.[Color],
			CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #SharingPortals AS sp ON sp.PortalID = c.PortalID
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode '
END

IF @CountArticles = 1 AND @CountEvents = 0 -- only articles
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	SELECT Categories.*,
	CASE Categories.Show
		WHEN 0 THEN 0
		WHEN 1 THEN
			CASE @AdminOrSuperUser
			WHEN 1 THEN(
				SELECT COUNT(n.[ArticleID])
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID'
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
						
				IF @FilterByDnnGroupId <> 0 
					SET @sqlcommand = @sqlcommand + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
				ELSE IF @FilterByDnnUserId <> 0
					SET @sqlcommand = @sqlcommand + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					
				SET @sqlcommand = @sqlcommand + N' 
				WHERE ' + @sqlSharingPortal + N' 
					AND n.EventArticle = 0
					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
					IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
					IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
					ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
			SET @sqlcommand = @sqlcommand + N'
			)
			WHEN 0 THEN(
				SELECT ((
					SELECT COUNT(n.[ArticleID])
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID'
					IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
						
					IF @FilterByDnnGroupId <> 0 
						SET @sqlcommand = @sqlcommand + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDnnUserId <> 0
						SET @sqlcommand = @sqlcommand + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
						
					SET @sqlcommand = @sqlcommand + N' 
					WHERE ' + @sqlSharingPortal + N' 
						AND n.HasPermissions = 0
						AND n.EventArticle = 0
						AND (n.Active = 1 OR n.UserID = @UserId)
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
						IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
						IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
					SET @sqlcommand = @sqlcommand + N'
					)+(
					SELECT COUNT([ArticleID])
					FROM (
						SELECT aup.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Categories.CategoryID'
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
								
						IF @FilterByDnnGroupId <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDnnUserId <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
							
						SET @sqlcommand = @sqlcommand + N' 
						WHERE ' + @sqlSharingPortal + N' 
							AND n.HasPermissions = 1
							AND n.EventArticle = 0
							AND (n.Active = 1 OR n.UserID = @UserId)
			 				AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
							IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
							IF @UserId = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
							ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserId '
							IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
						SET @sqlcommand = @sqlcommand + N'
						UNION
						SELECT arp.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Categories.CategoryID'
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
							
						IF @FilterByDnnGroupId <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDnnUserId <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
							
						SET @sqlcommand = @sqlcommand + N' 
						WHERE ' + @sqlSharingPortal + N' 
							AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
							AND n.HasPermissions = 1
							AND n.EventArticle = 0
							AND (n.Active = 1 OR n.UserID = @UserId)
							AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
							IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
							IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
						SET @sqlcommand = @sqlcommand + N'
					) AS UserAndRolePermissions
				))
			)
		END
	END AS ItemsCount
	FROM (
		SELECT c.*,
			CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleId ELSE cl.[NewsModuleID] END AS NewsModuleID,
			CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabId ELSE tm.[TabID] END AS TabID
		FROM ( ' + @sqlCategories + ' ) AS c
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl ON c.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @ModuleId
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID
	) AS Categories '
	IF @IsPortalSharing = 0
		SET @sqlcommand = @sqlcommand + N' ORDER BY Position; '
	ELSE
		SET @sqlcommand = @sqlcommand + N' ORDER BY PortalID, Position; '
END
ELSE IF @CountEvents = 1 AND @CountArticles = 0 -- only events
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	SELECT Categories.*,
	CASE Categories.Show
		WHEN 0 THEN 0
		WHEN 1 THEN
			CASE @AdminOrSuperUser
			WHEN 1 THEN(
			SELECT ((
				SELECT COUNT(n.[ArticleID])
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
						
				IF @FilterByDnnGroupId <> 0 
					SET @sqlcommand = @sqlcommand + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
				ELSE IF @FilterByDnnUserId <> 0
					SET @sqlcommand = @sqlcommand + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
						
				SET @sqlcommand = @sqlcommand + N' 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 0
				WHERE ' + @sqlSharingPortal + N'
					AND n.EventArticle = 1
					AND ne.Recurring = 0
					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
					IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
					IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
					ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
					SET @sqlcommand = @sqlcommand + N'
				)+(
				SELECT COUNT(n.[ArticleID])
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
						
				IF @FilterByDnnGroupId <> 0 
					SET @sqlcommand = @sqlcommand + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
				ELSE IF @FilterByDnnUserId <> 0
					SET @sqlcommand = @sqlcommand + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
						
				SET @sqlcommand = @sqlcommand + N' 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = '
				IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
				SET @sqlcommand = @sqlcommand + N' 
					CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
							THEN 1
							ELSE 0
						END '
				ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
				SET @sqlcommand = @sqlcommand + N' 
					CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
						THEN 1
						ELSE 0
					END '
				SET @sqlcommand = @sqlcommand + N' 
				WHERE ' + @sqlSharingPortal + N' 
					AND n.EventArticle = 1
					AND ne.Recurring = 1
					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
					IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
					IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
					ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
					SET @sqlcommand = @sqlcommand + N'
				))
			)
			WHEN 0 THEN(
				SELECT ((
					SELECT COUNT(n.[ArticleID]) AS cnt
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
					IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
							
					IF @FilterByDnnGroupId <> 0 
						SET @sqlcommand = @sqlcommand + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDnnUserId <> 0
						SET @sqlcommand = @sqlcommand + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
							
					SET @sqlcommand = @sqlcommand + N' 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 0
					WHERE ' + @sqlSharingPortal + N' 
						AND n.HasPermissions = 0
						AND n.EventArticle = 1
						AND ne.Recurring = 0
						AND (n.Active = 1 OR n.UserID = @UserId)
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
						IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
						IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
						IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
						SET @sqlcommand = @sqlcommand + N'
					)+(
					SELECT COUNT(n.[ArticleID])
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
					IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
							
					IF @FilterByDnnGroupId <> 0 
						SET @sqlcommand = @sqlcommand + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDnnUserId <> 0
						SET @sqlcommand = @sqlcommand + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
							
					SET @sqlcommand = @sqlcommand + N' 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = '
					IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
					SET @sqlcommand = @sqlcommand + N' 
					CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
							THEN 1
							ELSE 0
						END '
					ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
						SET @sqlcommand = @sqlcommand + N' 
						CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
							THEN 1
							ELSE 0
						END '
					SET @sqlcommand = @sqlcommand + N' 
					WHERE ' + @sqlSharingPortal + N' 
						AND n.HasPermissions = 0
						AND n.EventArticle = 1
						AND ne.Recurring = 1
						AND (n.Active = 1 OR n.UserID = @UserId)
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
						IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
						IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
						SET @sqlcommand = @sqlcommand + N'
					)+(
					SELECT COUNT(ArticleID)
					FROM (
						SELECT ArticleID
						FROM (
							SELECT aup.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Categories.CategoryID '
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
									
							IF @FilterByDnnGroupId <> 0 
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
							ELSE IF @FilterByDnnUserId <> 0
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
									
							SET @sqlcommand = @sqlcommand + N' 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 0
							WHERE ' + @sqlSharingPortal + N' 
								AND n.HasPermissions = 1
								AND n.EventArticle = 1
								AND ne.Recurring = 0
								AND (n.Active = 1 OR n.UserID = @UserId)
			 					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
								IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
								IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
								IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
								IF @UserId = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
								ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserId '
								IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
								ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
								SET @sqlcommand = @sqlcommand + N'
							UNION ALL
							SELECT aup.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Categories.CategoryID '
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
									
							IF @FilterByDnnGroupId <> 0 
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
							ELSE IF @FilterByDnnUserId <> 0
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
									
							SET @sqlcommand = @sqlcommand + N' 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = '
							IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
							SET @sqlcommand = @sqlcommand + N' 
								CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
										OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
										THEN 1
										ELSE 0
								END '
							ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
								SET @sqlcommand = @sqlcommand + N' 
								CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
									THEN 1
									ELSE 0
								END '
							SET @sqlcommand = @sqlcommand + N' 
							WHERE ' + @sqlSharingPortal + N' 
								AND n.HasPermissions = 1
								AND n.EventArticle = 1
								AND ne.Recurring = 1
								AND (n.Active = 1 OR n.UserID = @UserId)
			 					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
								IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
								IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
								IF @UserId = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
								ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserId '
								IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
								ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
								SET @sqlcommand = @sqlcommand + N'
						) AS PermissionsByUser
						UNION
						SELECT ArticleID FROM (
							SELECT arp.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Categories.CategoryID '
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
									
							IF @FilterByDnnGroupId <> 0 
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
							ELSE IF @FilterByDnnUserId <> 0
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
									
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 0
							WHERE ' + @sqlSharingPortal + N'
								AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
								AND n.HasPermissions = 1
								AND n.EventArticle = 1
								AND ne.Recurring = 0
								AND (n.Active = 1 OR n.UserID = @UserId)
								AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
								IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
								IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
								IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
								IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
								ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
								SET @sqlcommand = @sqlcommand + N'
							UNION ALL
							SELECT arp.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Categories.CategoryID '
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
									
							IF @FilterByDnnGroupId <> 0 
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
							ELSE IF @FilterByDnnUserId <> 0
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
									
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = '
							IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
							SET @sqlcommand = @sqlcommand + N' 
								CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
										OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
										THEN 1
										ELSE 0
									END '
							ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
								SET @sqlcommand = @sqlcommand + N'
								CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
									THEN 1
									ELSE 0
								END '
							SET @sqlcommand = @sqlcommand + N'
							WHERE ' + @sqlSharingPortal + N'
								AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
								AND n.HasPermissions = 1
								AND n.EventArticle = 1
								AND ne.Recurring = 1
								AND (n.Active = 1 OR n.UserID = @UserId)
								AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
								IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
								IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
								IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
								ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
								SET @sqlcommand = @sqlcommand + N'
						) AS PermissionsByRoles
					) AS PermissionsByUserAndRole
					)
				)
			)
		END
	END AS ItemsCount
	FROM (
		SELECT	c.*,
			CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleId ELSE cl.[NewsModuleID] END AS NewsModuleID,
			CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabId ELSE tm.[TabID] END AS TabID
		FROM ( ' + @sqlCategories + ' ) AS c
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl ON c.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @ModuleId
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID
	) AS Categories '
	IF @IsPortalSharing = 0
		SET @sqlcommand = @sqlcommand + N' ORDER BY Position; '
	ELSE
		SET @sqlcommand = @sqlcommand + N' ORDER BY PortalID, Position; '
END
ELSE -- articles and events
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	SELECT Categories.*,
	CASE Categories.Show
		WHEN 0 THEN 0
		WHEN 1 THEN
			CASE @AdminOrSuperUser
			WHEN 1 THEN(
			SELECT ((
				SELECT COUNT(n.[ArticleID])
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
						
				IF @FilterByDnnGroupId <> 0 
					SET @sqlcommand = @sqlcommand + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
				ELSE IF @FilterByDnnUserId <> 0
					SET @sqlcommand = @sqlcommand + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
						
				SET @sqlcommand = @sqlcommand + N' 
				WHERE ' + @sqlSharingPortal + N' 
					AND n.EventArticle = 0
					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
					IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
					IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
					ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
					SET @sqlcommand = @sqlcommand + N'
				)+(
				SELECT COUNT(n.[ArticleID])
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
						
				IF @FilterByDnnGroupId <> 0 
					SET @sqlcommand = @sqlcommand + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
				ELSE IF @FilterByDnnUserId <> 0
					SET @sqlcommand = @sqlcommand + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
						
				SET @sqlcommand = @sqlcommand + N' 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 0
				WHERE ' + @sqlSharingPortal + N' 
					AND n.EventArticle = 1
					AND ne.Recurring = 0
					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
					IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
					IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
					ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
					SET @sqlcommand = @sqlcommand + N'	
				)+(
				SELECT COUNT(n.[ArticleID])
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
						
				IF @FilterByDnnGroupId <> 0 
					SET @sqlcommand = @sqlcommand + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
				ELSE IF @FilterByDnnUserId <> 0
					SET @sqlcommand = @sqlcommand + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
						
				SET @sqlcommand = @sqlcommand + N' 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = '
				IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
				SET @sqlcommand = @sqlcommand + N' 
					CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
							THEN 1
							ELSE 0
						END '
				ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
					SET @sqlcommand = @sqlcommand + N' 
					CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
						THEN 1
						ELSE 0
					END '
				SET @sqlcommand = @sqlcommand + N' 
				WHERE ' + @sqlSharingPortal + N' 
					AND n.EventArticle = 1
					AND ne.Recurring = 1
					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
					IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
					IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
					ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
					SET @sqlcommand = @sqlcommand + N'	
				))
			)
			WHEN 0 THEN(
				SELECT ((
					SELECT COUNT(n.[ArticleID])
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
					IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
							
					IF @FilterByDnnGroupId <> 0 
						SET @sqlcommand = @sqlcommand + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDnnUserId <> 0
						SET @sqlcommand = @sqlcommand + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
							
					SET @sqlcommand = @sqlcommand + N' 
					WHERE ' + @sqlSharingPortal + N' 
						AND n.HasPermissions = 0
						AND n.EventArticle = 0 
						AND (n.Active = 1 OR n.UserID = @UserId)
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
						IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
						IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
						SET @sqlcommand = @sqlcommand + N'	
					)+(
					SELECT COUNT(n.[ArticleID]) AS cnt
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
					IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
							
					IF @FilterByDnnGroupId <> 0 
						SET @sqlcommand = @sqlcommand + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDnnUserId <> 0
						SET @sqlcommand = @sqlcommand + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
							
					SET @sqlcommand = @sqlcommand + N' 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 0
					WHERE ' + @sqlSharingPortal + N' 
						AND n.HasPermissions = 0
						AND n.EventArticle = 1
						AND ne.Recurring = 0
						AND (n.Active = 1 OR n.UserID = @UserId)
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
						IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
						IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
						IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
						SET @sqlcommand = @sqlcommand + N'	
					)+(
					SELECT COUNT(n.[ArticleID])
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Categories.CategoryID '
					IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
							
					IF @FilterByDnnGroupId <> 0 
						SET @sqlcommand = @sqlcommand + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDnnUserId <> 0
						SET @sqlcommand = @sqlcommand + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
							
					SET @sqlcommand = @sqlcommand + N' 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = '
					IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
					SET @sqlcommand = @sqlcommand + N' 
					CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
							THEN 1
							ELSE 0
						END '
					ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
						SET @sqlcommand = @sqlcommand + N' 
						CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
							THEN 1
							ELSE 0
						END '
					SET @sqlcommand = @sqlcommand + N' 
					WHERE ' + @sqlSharingPortal + N' 
						AND n.HasPermissions = 0
						AND n.EventArticle = 1
						AND ne.Recurring = 1
						AND (n.Active = 1 OR n.UserID = @UserId)
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
						IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
						IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
						SET @sqlcommand = @sqlcommand + N'	
					)+(
					SELECT COUNT(aup.[ArticleID])
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Categories.CategoryID '
					IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
							
					IF @FilterByDnnGroupId <> 0 
						SET @sqlcommand = @sqlcommand + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDnnUserId <> 0
						SET @sqlcommand = @sqlcommand + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
							
					SET @sqlcommand = @sqlcommand + N'
					WHERE ' + @sqlSharingPortal + N' 
						AND n.HasPermissions = 1
						AND n.EventArticle = 0
						AND (n.Active = 1 OR n.UserID = @UserId)
			 			AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
						IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
						IF @UserId = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
						ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserId '
						IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
						SET @sqlcommand = @sqlcommand + N'	
					)+(
					SELECT COUNT([ArticleID])
					FROM (
						SELECT aup.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Categories.CategoryID '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
								
						IF @FilterByDnnGroupId <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDnnUserId <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
								
						SET @sqlcommand = @sqlcommand + N' 
						WHERE ' + @sqlSharingPortal + N' 
							AND n.HasPermissions = 1
							AND n.EventArticle = 0
							AND (n.Active = 1 OR n.UserID = @UserId)
			 				AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
							IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
							IF @UserId = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
							ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserId '
							IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
							SET @sqlcommand = @sqlcommand + N'	
						UNION
						SELECT arp.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Categories.CategoryID '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
								
						IF @FilterByDnnGroupId <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDnnUserId <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
								
						SET @sqlcommand = @sqlcommand + N' 
						WHERE ' + @sqlSharingPortal + N' 
							AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
							AND n.HasPermissions = 1
							AND n.EventArticle = 0
							AND (n.Active = 1 OR n.UserID = @UserId)
							AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
							IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
							IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
					SET @sqlcommand = @sqlcommand + N'
					) AS UserAndRolePermissions
					)
					)+(
					SELECT COUNT(ArticleID)
					FROM (
						SELECT ArticleID FROM (
							SELECT aup.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Categories.CategoryID '
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
									
							IF @FilterByDnnGroupId <> 0 
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
							ELSE IF @FilterByDnnUserId <> 0
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
									
							SET @sqlcommand = @sqlcommand + N' 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 0
							WHERE ' + @sqlSharingPortal + N' 
								AND n.HasPermissions = 1
								AND n.EventArticle = 1
								AND ne.Recurring = 0
								AND (n.Active = 1 OR n.UserID = @UserId)
			 					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
								IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
								IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
								IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
								IF @UserId = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
								ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserId '
								IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
								ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
								SET @sqlcommand = @sqlcommand + N'	
							UNION ALL
							SELECT aup.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Categories.CategoryID '
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
									
							IF @FilterByDnnGroupId <> 0 
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
							ELSE IF @FilterByDnnUserId <> 0
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
									
							SET @sqlcommand = @sqlcommand + N' 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = '
							IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
							SET @sqlcommand = @sqlcommand + N' 
								CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
										OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
										THEN 1
										ELSE 0
									END '
							ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
								SET @sqlcommand = @sqlcommand + N' 
								CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
									THEN 1
									ELSE 0
								END '
							SET @sqlcommand = @sqlcommand + N' 
							WHERE ' + @sqlSharingPortal + N' 
								AND n.HasPermissions = 1
								AND n.EventArticle = 1
								AND ne.Recurring = 1
								AND (n.Active = 1 OR n.UserID = @UserId)
			 					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
								IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
								IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
								IF @UserId = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
								ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserId '
								IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
								ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
								SET @sqlcommand = @sqlcommand + N'
						) AS PermissionsByUser
						UNION
						SELECT ArticleID
						FROM (
							SELECT arp.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Categories.CategoryID '
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
									
							IF @FilterByDnnGroupId <> 0 
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
							ELSE IF @FilterByDnnUserId <> 0
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
									
							SET @sqlcommand = @sqlcommand + N' 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 0
							WHERE ' + @sqlSharingPortal + N' 
								AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
								AND n.HasPermissions = 1
								AND n.EventArticle = 1
								AND ne.Recurring = 0
								AND (n.Active = 1 OR n.UserID = @UserId)
								AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
								IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
								IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
								IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
								IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
								ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
								SET @sqlcommand = @sqlcommand + N'	
							UNION ALL
							SELECT arp.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Categories.CategoryID '
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode '
									
							IF @FilterByDnnGroupId <> 0 
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
							ELSE IF @FilterByDnnUserId <> 0
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Categories.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
									
							SET @sqlcommand = @sqlcommand + N' 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = '
							IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
							SET @sqlcommand = @sqlcommand + N' 
								CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
										OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
										THEN 1
										ELSE 0
									END '
							ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
								SET @sqlcommand = @sqlcommand + N' 
								CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
									THEN 1
									ELSE 0
								END '
							SET @sqlcommand = @sqlcommand + N' 
							WHERE ' + @sqlSharingPortal + N' 
								AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
								AND n.HasPermissions = 1
								AND n.EventArticle = 1
								AND ne.Recurring = 1
								AND (n.Active = 1 OR n.UserID = @UserId)
								AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] '
								IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
								IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N' AND n.Approved = 1 '
								IF @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId '
								ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
								SET @sqlcommand = @sqlcommand + N'
						) AS PermissionsByRoles
					) AS PermissionsByUserAndRole
				)
			)
		END
	END AS ItemsCount
	FROM (
		SELECT c.*,
			CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleId ELSE cl.[NewsModuleID] END AS NewsModuleID,
			CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabId ELSE tm.[TabID] END AS TabID
		FROM ( ' + @sqlCategories + ' ) AS c
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl ON c.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @ModuleId
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID
	) AS Categories '
	IF @IsPortalSharing = 0
		SET @sqlcommand = @sqlcommand + N' ORDER BY Position; '
	ELSE
		SET @sqlcommand = @sqlcommand + N' ORDER BY PortalID, Position; '
END


SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N' DROP TABLE #SharingPortals;';

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalId = @PortalId
	,@UserId = @UserId
	,@ModuleId = @ModuleId
	,@DefaultTabId = @DefaultTabId
	,@DefaultModuleId = @DefaultModuleId
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CountArticles = @CountArticles
	,@CountEvents = @CountEvents
	,@CountEventsLimitByDays = @CountEventsLimitByDays
	,@IsSocialInstance = @IsSocialInstance
	,@FilterByDnnUserId = @FilterByDnnUserId
	,@FilterByDnnGroupId = @FilterByDnnGroupId
	,@LocaleCode = @LocaleCode
	,@ShowAllAuthors = @ShowAllAuthors
	,@CategoryFilterType = @CategoryFilterType
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@SatellitePermissionsSource = @SatellitePermissionsSource
	,@PermissionsModuleID = @PermissionsModuleID
	,@UserCanApprove = @UserCanApprove
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories_NoCount]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories_NoCount] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories_NoCount]
	@PortalId INT,
	@UserId INT,
	@ModuleId INT,
	@DefaultTabId INT,
	@DefaultModuleId INT,
	@AdminOrSuperUser BIT  = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@CategoryFilterType TINYINT = 0,
	@SatellitePermissionsSource TINYINT = 0,
	@PermissionsModuleId INT = 0,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	@PortalId INT,
	@UserId INT,
	@ModuleId INT,
	@DefaultTabId INT,
	@DefaultModuleId INT,
	@AdminOrSuperUser BIT,
	@LocaleCode NVARCHAR(20),
	@CategoryFilterType TINYINT,
	@SatellitePermissionsSource TINYINT,
	@PermissionsModuleId INT,
	@IsPortalSharing BIT'

DECLARE @sqlcommand NVARCHAR(MAX);

DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleId;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = n.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' n.PortalID = @PortalId ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalId ';
END

IF @UserId <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleId
			AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

IF @AdminOrSuperUser = 1 OR @SatellitePermissionsSource = 0
BEGIN
	SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #ViewCategories
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.' + @sqlSharingPortalAll
END
ELSE IF @UserId = -1
BEGIN
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalId  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID IS NULL
					AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.ModuleID = @PermissionsModuleId AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID = @PermissionsModuleId
					AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @IsPortalSharing = 1
	BEGIN -- only can be by module settings, roles from current portal!
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
	ELSE
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId;
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
END

IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #ViewCategoriesWithFilter
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
	WHERE ' + @sqlSharingPortalAll + '
	INTERSECT
	SELECT vc.CategoryID
	FROM #ViewCategories AS vc; '
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #ViewCategoriesWithFilter
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
	WHERE ModuleID = @ModuleId
	INTERSECT
	SELECT vc.CategoryID
	FROM #ViewCategories AS vc; '
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	;WITH hierarchy AS(
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
			WHERE ci.ModuleID = @ModuleId
				AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
		)
		AND cl.' + @sqlSharingPortalAll + '
		UNION ALL
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
	)
	INSERT INTO #ViewCategoriesWithFilter
	SELECT DISTINCT CategoryID
	FROM hierarchy
	INTERSECT
	SELECT vc.CategoryID
	FROM #ViewCategories AS vc; '
END

DECLARE @sqlCategories NVARCHAR(2000);

IF @LocaleCode IS NULL
BEGIN
	IF @IsPortalSharing = 0
		SET @sqlCategories = N'
		SELECT c.[CategoryID],c.[PortalID],c.[CategoryName],c.[Position],c.[ParentCategory],c.[Level],c.[CategoryURL],c.[CategoryImage],c.[CategoryText],c.[Color],
		CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID
		WHERE c.PortalID = @PortalId '
	ELSE
		SET @sqlCategories = N'
		SELECT c.[CategoryID],c.[PortalID],c.[CategoryName],c.[Position],c.[ParentCategory],c.[Level],c.[CategoryURL],c.[CategoryImage],c.[CategoryText],c.[Color],
		CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #SharingPortals AS sp ON sp.PortalID = c.PortalID
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID '
END
ELSE
BEGIN
	IF @IsPortalSharing = 0
		SET @sqlCategories = N'
		SELECT c.[CategoryID],c.[PortalID],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS CategoryName,
			c.[Position],c.[ParentCategory],c.[Level],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryURL] ELSE cl.[CategoryURL] END AS CategoryURL,c.[CategoryImage],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryText] ELSE cl.[CategoryText] END AS CategoryText,c.[Color],
			CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
		WHERE c.PortalID = @PortalId '
	ELSE
	SET @sqlCategories = N'
		SELECT c.[CategoryID],c.[PortalID],
			CASE WHEN cl.[Title] IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS CategoryName,
			c.[Position],c.[ParentCategory],c.[Level],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryURL] ELSE cl.[CategoryURL] END AS CategoryURL,c.[CategoryImage],
			CASE WHEN cl.[CategoryText] IS NULL THEN c.[CategoryText] ELSE cl.[CategoryText] END AS CategoryText,c.[Color],
			CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #SharingPortals AS sp ON sp.PortalID = c.PortalID
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode '
END

SET @sqlcommand = @sqlcommand + N'
SELECT c.[CategoryID],c.[PortalID],c.[CategoryName],c.[Position],c.[ParentCategory],c.[Level],c.[CategoryURL],c.[CategoryImage],c.[CategoryText],c.Show,0 AS ItemsCount,
	CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleId ELSE cl.[NewsModuleID] END AS NewsModuleID,
	CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabId ELSE tm.[TabID] END AS TabID
FROM ( ' + @sqlCategories + ' ) AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl ON c.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @ModuleId
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID '

IF @IsPortalSharing = 0
	SET @sqlcommand = @sqlcommand + N' ORDER BY Position; '
ELSE
	SET @sqlcommand = @sqlcommand + N' ORDER BY PortalID, Position; '

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N' DROP TABLE #SharingPortals;';

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalId = @PortalId
	,@UserId = @UserId
	,@ModuleId = @ModuleId
	,@DefaultTabId = @DefaultTabId
    ,@DefaultModuleId = @DefaultModuleId
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@LocaleCode = @LocaleCode
	,@CategoryFilterType = @CategoryFilterType
	,@SatellitePermissionsSource = @SatellitePermissionsSource
	,@PermissionsModuleId = @PermissionsModuleId
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewAllContent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewAllContent] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewAllContent]
	@PortalId INT,
	@UserId INT,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldId INT = NULL,
	@ModuleId INT,
	@DefaultTabId INT,
	@DefaultModuleId INT,
	@AdminOrSuperUser BIT  = 0,
	@CountEventsLimitByDays INT = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDnnUserId INT = 0,
	@FilterByDnnGroupId INT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@ShowAllAuthors BIT = 1,
	@CategoryFilterType TINYINT = 0,
	@HideUnlocalizedItems BIT = 0,
	@SatellitePermissionsSource TINYINT = 0,
	@PermissionsModuleId INT = 0,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalId INT
	,@UserId INT
	,@OrderByColumnName VARCHAR(30)
	,@OrderByDirection VARCHAR(4)
	,@OrderByCustomFieldId INT
	,@ModuleId INT
	,@DefaultTabId INT
    ,@DefaultModuleId INT
	,@AdminOrSuperUser BIT
	,@CountEventsLimitByDays INT
	,@IsSocialInstance BIT
	,@FilterByDnnUserId INT
	,@FilterByDnnGroupId INT
	,@LocaleCode NVARCHAR(20)
	,@ShowAllAuthors BIT
	,@CategoryFilterType TINYINT
	,@HideUnlocalizedItems BIT
	,@SatellitePermissionsSource TINYINT
	,@PermissionsModuleId INT
	,@IsPortalSharing BIT'

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY);

DECLARE @StartDate DATETIME;

DECLARE @DateRangeType TINYINT;
SET @DateRangeType = 0;
IF @CountEventsLimitByDays IS NOT NULL
BEGIN
	SET @StartDate = DATEADD(DD, -@CountEventsLimitByDays, @CurrentDate);
	SET @DateRangeType = 2;
END '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleId;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalId ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalId ';
END

IF @UserId <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleId
			AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

IF @AdminOrSuperUser = 1 OR @SatellitePermissionsSource = 0
BEGIN
	SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #ViewCategories
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.' + @sqlSharingPortalAll
END
ELSE IF @UserId = -1
BEGIN
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalId  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID IS NULL
					AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.ModuleID = @PermissionsModuleId AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID = @PermissionsModuleId
					AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @IsPortalSharing = 1
	BEGIN -- only can be by module settings, roles from current portal!
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
	ELSE
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId;
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
END

IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
	WHERE ' + @sqlSharingPortalAll
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
	WHERE ModuleID = @ModuleId; '
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	;WITH hierarchy AS(
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
			WHERE ci.ModuleID = @ModuleId
				AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
		)
		AND cl.' + @sqlSharingPortalAll + '
		UNION ALL
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
	)
	INSERT INTO #FilterCategories
	SELECT DISTINCT CategoryID
	FROM hierarchy; '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

DECLARE @DateRangeType TINYINT;
SET @DateRangeType = 0;

IF @CountEventsLimitByDays IS NOT NULL
	SET @DateRangeType = 2;

SET @sqlcommand = @sqlcommand + N' 
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
IF @IsSocialInstance = 0
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleId
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @ModuleId
	END
END

DECLARE @tempMenuCats TABLE(
	[CategoryID] INT PRIMARY KEY,
	[PortalID] INT,
	[CategoryName] NVARCHAR(200),
	[Position] INT,
	[ParentCategory] INT,
	[Level] INT,
	[CategoryURL] NVARCHAR(1500),
	[CategoryImage] NVARCHAR(1500),
	[CategoryText] NVARCHAR(MAX),
	[Color] NVARCHAR(16),
	[Show] BIT)

INSERT INTO @tempMenuCats ' 

IF @LocaleCode IS NULL
BEGIN
	IF @IsPortalSharing = 0
		SET @sqlcommand = @sqlcommand + N' 
		SELECT c.[CategoryID],c.[PortalID],c.[CategoryName],c.[Position],c.[ParentCategory],c.[Level],c.[CategoryURL],c.[CategoryImage],c.[CategoryText],c.[Color],
		CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID
		WHERE c.PortalID = @PortalId '
	ELSE
		SET @sqlcommand = @sqlcommand + N' 
		SELECT c.[CategoryID],c.[PortalID],c.[CategoryName],c.[Position],c.[ParentCategory],c.[Level],c.[CategoryURL],c.[CategoryImage],c.[CategoryText],c.[Color],
		CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #SharingPortals AS sp ON sp.PortalID = c.PortalID
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID '
END
ELSE
BEGIN
	IF @IsPortalSharing = 0
		SET @sqlcommand = @sqlcommand + N' 
		SELECT c.[CategoryID],c.[PortalID],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS CategoryName,
			c.[Position],c.[ParentCategory],c.[Level],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryURL] ELSE cl.[CategoryURL] END AS CategoryURL,c.[CategoryImage],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryText] ELSE cl.[CategoryText] END AS CategoryText,c.[Color],
			CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
		WHERE c.PortalID = @PortalId '
	ELSE
		SET @sqlcommand = @sqlcommand + N' 
		SELECT c.[CategoryID],c.[PortalID],
			CASE WHEN cl.[Title] IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS CategoryName,
			c.[Position],c.[ParentCategory],c.[Level],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryURL] ELSE cl.[CategoryURL] END AS CategoryURL,c.[CategoryImage],
			CASE WHEN cl.[CategoryText] IS NULL THEN c.[CategoryText] ELSE cl.[CategoryText] END AS CategoryText,c.[Color],
			CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #SharingPortals AS sp ON sp.PortalID = c.PortalID
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode '
END

SET @sqlcommand = @sqlcommand + N' 
SELECT TOP 1 @DefaultTabId = TabID
FROM {databaseOwner}[{objectQualifier}TabModules]
WHERE ModuleID = @DefaultModuleId;

DECLARE @TempCategoryIDAndCount TABLE (CategoryID INT PRIMARY KEY, PortalID INT NOT NULL, CategoryName NVARCHAR(200) NOT NULL, Position INT NOT NULL, ParentCategory INT, Level INT NOT NULL, CategoryURL NVARCHAR(1500), Show BIT NOT NULL, Count INT NOT NULL, NewsModuleID INT NOT NULL,TabID INT NOT NULL); ';

DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
IF @IsSocialInstance = 1
BEGIN
	IF @FilterByDnnGroupId <> 0
	BEGIN	
		SET @FilterBySocialGroup = 1;
	END
END

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldId IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldId AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldId = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldId = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END

IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

SET @sqlcommand = @sqlcommand +	N'
INSERT INTO @TempCategoryIDAndCount
SELECT CategoryID, PortalID, CategoryName, Position, ParentCategory, Level, CategoryURL, Show,
CASE Show
	WHEN 0 THEN 0
	WHEN 1 THEN
		CASE @AdminOrSuperUser
		WHEN 1 THEN(
		SELECT ((
			SELECT COUNT(na.[ArticleID])
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON na.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID '
			IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
			IF @IsSocialInstance <> 0
			BEGIN
				IF @FilterBySocialGroup = 1
				BEGIN
					SET @sqlcommand = @sqlcommand +	N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
				END
				ELSE IF @FilterByDnnUserId <> 0
				BEGIN
					SET @sqlcommand = @sqlcommand +	N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
				END
			END
		
			SET @sqlcommand = @sqlcommand +	N'
			WHERE ' + @sqlSharingPortal + '
				AND na.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
				AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
				AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
			)+(
			SELECT COUNT(na.[ArticleID])
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON na.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
			IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
			IF @IsSocialInstance <> 0
			BEGIN
				IF @FilterBySocialGroup = 1
				BEGIN
					SET @sqlcommand = @sqlcommand +	N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
				END
				ELSE IF @FilterByDnnUserId <> 0
				BEGIN
					SET @sqlcommand = @sqlcommand +	N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
				END
			END
		
			SET @sqlcommand = @sqlcommand +	N'
			WHERE ' + @sqlSharingPortal + '
				AND na.EventArticle = 1
				AND ne.Recurring = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
				AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
				AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
				AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
			)+(
				SELECT COUNT(na.[ArticleID])
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON na.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 =
				CASE WHEN @CountEventsLimitByDays IS NOT NULL THEN -- @StartDate min value
					CASE WHEN ne.UpcomingOccurrences > 1
					THEN
						CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
							THEN 1
							ELSE 0
						END
					ELSE
						CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(1) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
							THEN 1
							ELSE 0
						END
					END
				ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
					CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY RecurringID)
						THEN 1
						ELSE 0
					END
				END	 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
			WHERE ' + @sqlSharingPortal + '
				AND na.EventArticle = 1
				AND ne.Recurring = 1 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
				AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
				AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
			))
		)
		WHEN 0 THEN(
			SELECT ((
				SELECT COUNT(na.[ArticleID])
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON na.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
				WHERE ' + @sqlSharingPortal + '
					AND na.HasPermissions = 0
					AND na.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
					AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
					AND na.Approved = 1
					AND (na.Active=1 OR na.UserID=@UserId)
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				)+(
				SELECT COUNT(na.[ArticleID]) AS cnt
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON na.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
				WHERE ' + @sqlSharingPortal + '
					AND na.HasPermissions = 0
					AND na.EventArticle = 1
					AND ne.Recurring = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
					AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
					AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
					AND na.Approved = 1
					AND (na.Active=1 OR na.UserID=@UserId)
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				)+(
					SELECT COUNT(na.[ArticleID])
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON na.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 =
					CASE WHEN @CountEventsLimitByDays IS NOT NULL THEN -- @StartDate min value
						CASE WHEN ne.UpcomingOccurrences > 1
						THEN
							CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
								THEN 1
								ELSE 0
							END
						ELSE
							CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(1) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
								THEN 1
								ELSE 0
							END
						END
					ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
						CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY RecurringID)
							THEN 1
							ELSE 0
						END
					END	 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
				WHERE ' + @sqlSharingPortal + '
					AND na.HasPermissions = 0
					AND na.EventArticle = 1
					AND ne.Recurring = 1 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
					AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
					AND na.Approved = 1
					AND (na.Active=1 OR na.UserID=@UserId)
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				)+(
				SELECT COUNT(aup.[ArticleID])
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS na ON na.ArticleID = aup.ArticleID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
				WHERE ' + @sqlSharingPortal + '
					AND na.HasPermissions = 1
					AND na.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
	 				AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
					AND na.Approved = 1
					AND (na.Active=1 OR na.UserID=@UserId)
					AND ((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				)+(
				SELECT COUNT([ArticleID]) FROM (
					SELECT aup.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
					WHERE ' + @sqlSharingPortal + '
						AND na.HasPermissions = 1
						AND na.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
	 					AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
						AND na.Approved = 1
						AND (na.Active=1 OR na.UserID=@UserId)
						AND ((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
						AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
					UNION
					SELECT arp.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
					WHERE ' + @sqlSharingPortal + '
						AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
						AND na.HasPermissions = 1
						AND na.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
						AND na.Approved = 1
						AND (na.Active=1 OR na.UserID=@UserId)
						AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				) AS UserAndRolePermissions
				)
				)+(
				SELECT COUNT(ArticleID) FROM (
					SELECT ArticleID FROM (
						SELECT aup.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 0 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
						WHERE ' + @sqlSharingPortal + '
							AND na.HasPermissions = 1
							AND na.EventArticle = 1
							AND ne.Recurring = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
	 						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
	 						AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
							AND na.Approved = 1
							AND (na.Active=1 OR na.UserID=@UserId)
							AND ((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
						UNION ALL
						SELECT aup.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 =
							CASE WHEN @CountEventsLimitByDays IS NOT NULL THEN -- @StartDate min value
								CASE WHEN ne.UpcomingOccurrences > 1
								THEN
									CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
										THEN 1
										ELSE 0
									END
								ELSE
									CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									 OR (nerd.RecurringID IN (SELECT TOP(1) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
										THEN 1
										ELSE 0
									END
								END
							ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
								CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY RecurringID)
									THEN 1
									ELSE 0
								END
							END '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
						WHERE ' + @sqlSharingPortal + '
							AND na.HasPermissions = 1
							AND na.EventArticle = 1
							AND ne.Recurring = 1 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
	 						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
							AND na.Approved = 1
							AND (na.Active=1 OR na.UserID=@UserId)
							AND ((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
						
					) AS PermissionsByUser
					UNION
					SELECT ArticleID FROM (
						SELECT arp.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 0 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
						WHERE ' + @sqlSharingPortal + '
							AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
							AND na.HasPermissions = 1
							AND na.EventArticle = 1
							AND ne.Recurring = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
							AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
							AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
							AND na.Approved = 1
							AND (na.Active=1 OR na.UserID=@UserId)
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
						UNION ALL
						SELECT arp.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 =
							CASE WHEN @CountEventsLimitByDays IS NOT NULL THEN -- @StartDate min value
								CASE WHEN ne.UpcomingOccurrences > 1
								THEN
									CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
										THEN 1
										ELSE 0
									END
								ELSE
									CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									 OR (nerd.RecurringID IN (SELECT TOP(1) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
										THEN 1
										ELSE 0
									END
								END
							ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
								CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY RecurringID)
									THEN 1
									ELSE 0
								END
							END '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
						WHERE ' + @sqlSharingPortal + '
							AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
							AND na.HasPermissions = 1
							AND na.EventArticle = 1
							AND ne.Recurring = 1 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
							AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
							AND na.Approved = 1
							AND (na.Active=1 OR na.UserID=@UserId)
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
					) AS PermissionsByRoles
				) AS PermissionsByUserAndRole
			)
		)
	END
END AS ''Count'',NewsModuleID,TabID
FROM (
	SELECT	ncl.[CategoryID],
			ncl.[PortalID],
			ncl.[CategoryName],
			ncl.[Position],
			ncl.[ParentCategory],
			ncl.[Level],
			ncl.[CategoryURL],
			ncl.Show,
	CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleId ELSE cl.[NewsModuleID] END AS NewsModuleID,
	CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabId ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats AS ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl
	ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @ModuleId
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID
) AS Result;

SELECT * FROM @TempCategoryIDAndCount ORDER BY PortalID, Position; '

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand +	N'
SELECT n.ArticleID, CASE WHEN n.[EventArticle] = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS ''RecurringID'', n.Title,n.TitleLink,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified, '
ELSE
SET @sqlcommand = @sqlcommand +	N'
SELECT n.ArticleID, CASE WHEN n.[EventArticle] = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS ''RecurringID'', CASE WHEN ncl.Title IS NULL THEN n.Title ELSE ncl.Title END AS Title, CASE WHEN ncl.clTitleLink IS NULL THEN n.TitleLink ELSE ncl.clTitleLink END AS TitleLink,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified, '

IF @OrderByCustomFieldId IS NOT NULL
SET @sqlcommand = @sqlcommand +	N'fv.' + @OrderByColumnName + ',';

IF @OrderByColumnName = N'StartDate'
SET @sqlcommand = @sqlcommand +	N' CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate, ';


SET @sqlcommand = @sqlcommand +	N'
	n.HasPermissions, n.Active, n.Approved, n.NumberOfComments,n.UserID, c.[CategoryID], tci.[Position], tci.Count, tci.NewsModuleID,tci.TabID, n.DetailType, n.DetailTypeData
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] c ON n.ArticleID = c.ArticleID 
	INNER JOIN @TempCategoryIDAndCount AS tci ON tci.CategoryID = c.CategoryID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = c.CategoryID AND cidl.Show = 1
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND '
	IF @DateRangeType = 2
		SET @sqlcommand = @sqlcommand + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 0
		SET @sqlcommand = @sqlcommand + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
	
	IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
	ELSE IF @LocaleCode IS NOT NULL SET @sqlcommand = @sqlcommand + N' LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON n.ArticleID = ncl.ArticleID AND ncl.LocaleCode = @LocaleCode '

	IF @IsSocialInstance <> 0
	BEGIN
		IF @FilterBySocialGroup = 1
		BEGIN
			SET @sqlcommand = @sqlcommand +	N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
		END
		ELSE IF @FilterByDnnUserId <> 0
		BEGIN
			SET @sqlcommand = @sqlcommand +	N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
		END
	END
	
	IF @OrderByCustomFieldId IS NOT NULL
	BEGIN
	SET @sqlcommand = @sqlcommand +	N'
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldId '
	END
	
SET @sqlcommand = @sqlcommand + N' 
WHERE n.ArticleID IN(
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 0
		AND na.EventArticle = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND (na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserId))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL -- simple event
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND (na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserId))
		AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL -- recurring event
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
	IF @DateRangeType = 2
		SET @sqlcommand = @sqlcommand + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 0
		SET @sqlcommand = @sqlcommand + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
	SET @sqlcommand = @sqlcommand + N'
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 1 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND (na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserId))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
			AND aup.Show = 1 AND na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserId)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
			AND aup.Show = 1 AND na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserId)
		))
		AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
	IF @DateRangeType = 2
		SET @sqlcommand = @sqlcommand + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 0
		SET @sqlcommand = @sqlcommand + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
	SET @sqlcommand = @sqlcommand + N'
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
			AND aup.Show = 1 AND na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserId)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((na.Approved=1
			AND (na.Active = 1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION All
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((na.Approved=1
			AND (na.Active = 1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
		))
		AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION All
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
	IF @DateRangeType = 2
		SET @sqlcommand = @sqlcommand + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 0
		SET @sqlcommand = @sqlcommand + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
	SET @sqlcommand = @sqlcommand + N'
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((na.Approved=1
			AND (na.Active = 1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
) '
IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId ';

SET @sqlcommand = @sqlcommand + N'
ORDER BY tci.PortalID, tci.Position, '

IF @OrderByCustomFieldId IS NOT NULL AND @OrderByDirection = 'ASC'
	SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N' DROP TABLE #SharingPortals;';

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalId = @PortalId
	,@UserId = @UserId
	,@OrderByColumnName = @OrderByColumnName
	,@OrderByDirection = @OrderByDirection
	,@OrderByCustomFieldId = @OrderByCustomFieldId
	,@ModuleId = @ModuleId
	,@DefaultTabId = @DefaultTabId
    ,@DefaultModuleId = @DefaultModuleId
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CountEventsLimitByDays = @CountEventsLimitByDays
	,@IsSocialInstance = @IsSocialInstance
	,@FilterByDnnUserId = @FilterByDnnUserId
	,@FilterByDnnGroupId = @FilterByDnnGroupId
	,@LocaleCode = @LocaleCode	
	,@ShowAllAuthors = @ShowAllAuthors
	,@CategoryFilterType = @CategoryFilterType
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@SatellitePermissionsSource = @SatellitePermissionsSource
	,@PermissionsModuleId = @PermissionsModuleId
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewArticles]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewArticles] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewArticles]
	@PortalId INT,
	@UserId INT,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldId INT = NULL,
	@ModuleId INT,
	@DefaultTabId INT,
	@DefaultModuleId INT,
	@AdminOrSuperUser BIT  = 0,
	@CountEventsLimitByDays INT = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDnnUserId INT = 0,
	@FilterByDnnGroupId INT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@ShowAllAuthors BIT = 1,
	@CategoryFilterType TINYINT = 0,
	@HideUnlocalizedItems BIT = 0,
	@SatellitePermissionsSource TINYINT = 0,
	@PermissionsModuleId INT = 0,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalId INT
	,@UserId INT
	,@OrderByColumnName VARCHAR(30)
	,@OrderByDirection VARCHAR(4)
	,@OrderByCustomFieldId INT
	,@ModuleId INT
	,@DefaultTabId INT
    ,@DefaultModuleId INT
	,@AdminOrSuperUser BIT
	,@CountEventsLimitByDays INT
	,@IsSocialInstance BIT
	,@FilterByDnnUserId INT
	,@FilterByDnnGroupId INT
	,@LocaleCode NVARCHAR(20)
	,@ShowAllAuthors BIT
	,@CategoryFilterType TINYINT
	,@HideUnlocalizedItems BIT
	,@SatellitePermissionsSource TINYINT
	,@PermissionsModuleId INT
	,@IsPortalSharing BIT'

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY);

DECLARE @StartDate DATETIME;

DECLARE @DateRangeType TINYINT;
SET @DateRangeType = 0;
IF @CountEventsLimitByDays IS NOT NULL
BEGIN
	SET @StartDate = DATEADD(DD, -@CountEventsLimitByDays, @CurrentDate);
	SET @DateRangeType = 2;
END '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleId;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalId ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalId ';
END

IF @UserId <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleId
			AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

IF @AdminOrSuperUser = 1 OR @SatellitePermissionsSource = 0
BEGIN
	SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #ViewCategories
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.' + @sqlSharingPortalAll
END
ELSE IF @UserId = -1
BEGIN
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalId  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID IS NULL
					AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.ModuleID = @PermissionsModuleId AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID = @PermissionsModuleId
					AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @IsPortalSharing = 1
	BEGIN -- only can be by module settings, roles from current portal!
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
	ELSE
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId;
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
END

IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
	WHERE ' + @sqlSharingPortalAll
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
	WHERE ModuleID = @ModuleId; '
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	;WITH hierarchy AS(
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
			WHERE ci.ModuleID = @ModuleId
				AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
		)
		AND cl.' + @sqlSharingPortalAll + '
		UNION ALL
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
	)
	INSERT INTO #FilterCategories
	SELECT DISTINCT CategoryID
	FROM hierarchy; '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

SET @sqlcommand = @sqlcommand + N' 
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
IF @IsSocialInstance = 0
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleId
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @ModuleId
	END
END

DECLARE @tempMenuCats TABLE(
	[CategoryID] INT PRIMARY KEY,
	[PortalID] INT,
	[CategoryName] NVARCHAR(200),
	[Position] INT,
	[ParentCategory] INT,
	[Level] INT,
	[CategoryURL] NVARCHAR(1500),
	[CategoryImage] NVARCHAR(1500),
	[CategoryText] NVARCHAR(MAX),
	[Color] NVARCHAR(16),
	[Show] BIT)

INSERT INTO @tempMenuCats ' 

IF @LocaleCode IS NULL
BEGIN
	IF @IsPortalSharing = 0
		SET @sqlcommand = @sqlcommand + N' 
		SELECT c.[CategoryID],c.[PortalID],c.[CategoryName],c.[Position],c.[ParentCategory],c.[Level],c.[CategoryURL],c.[CategoryImage],c.[CategoryText],c.[Color],
		CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID
		WHERE c.PortalID = @PortalId '
	ELSE
		SET @sqlcommand = @sqlcommand + N' 
		SELECT c.[CategoryID],c.[PortalID],c.[CategoryName],c.[Position],c.[ParentCategory],c.[Level],c.[CategoryURL],c.[CategoryImage],c.[CategoryText],c.[Color],
		CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #SharingPortals AS sp ON sp.PortalID = c.PortalID
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID '
END
ELSE
BEGIN
	IF @IsPortalSharing = 0
		SET @sqlcommand = @sqlcommand + N' 
		SELECT c.[CategoryID],c.[PortalID],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS CategoryName,
			c.[Position],c.[ParentCategory],c.[Level],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryURL] ELSE cl.[CategoryURL] END AS CategoryURL,c.[CategoryImage],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryText] ELSE cl.[CategoryText] END AS CategoryText,c.[Color],
			CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
		WHERE c.PortalID = @PortalId '
	ELSE
		SET @sqlcommand = @sqlcommand + N' 
		SELECT c.[CategoryID],c.[PortalID],
			CASE WHEN cl.[Title] IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS CategoryName,
			c.[Position],c.[ParentCategory],c.[Level],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryURL] ELSE cl.[CategoryURL] END AS CategoryURL,c.[CategoryImage],
			CASE WHEN cl.[CategoryText] IS NULL THEN c.[CategoryText] ELSE cl.[CategoryText] END AS CategoryText,c.[Color],
			CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #SharingPortals AS sp ON sp.PortalID = c.PortalID
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode '
END

SET @sqlcommand = @sqlcommand + N' 
SELECT TOP 1 @DefaultTabId = TabID
FROM {databaseOwner}[{objectQualifier}TabModules]
WHERE ModuleID = @DefaultModuleId;

DECLARE @TempCategoryIDAndCount TABLE (CategoryID INT PRIMARY KEY, PortalID INT NOT NULL, CategoryName NVARCHAR(200) NOT NULL, Position INT NOT NULL, ParentCategory INT, Level INT NOT NULL, CategoryURL NVARCHAR(1500), Show BIT NOT NULL, Count INT NOT NULL, NewsModuleID INT NOT NULL,TabID INT NOT NULL); ';

DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
IF @IsSocialInstance = 1
BEGIN
	IF @FilterByDnnGroupId <> 0
	BEGIN	
		SET @FilterBySocialGroup = 1;
	END
END

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldId IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldId AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldId = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldId = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END

IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;


SET @sqlcommand = @sqlcommand +	N'
INSERT INTO @TempCategoryIDAndCount

SELECT CategoryID, PortalID, CategoryName, Position, ParentCategory, Level, CategoryURL, Show,
CASE Show
	WHEN 0 THEN 0
	WHEN 1 THEN
		CASE @AdminOrSuperUser
		WHEN 1 THEN(
			SELECT COUNT(na.[ArticleID])
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON na.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID '
			IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
			IF @IsSocialInstance <> 0
			BEGIN
				IF @FilterBySocialGroup = 1
				BEGIN
					SET @sqlcommand = @sqlcommand +	N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
				END
				ELSE IF @FilterByDnnUserId <> 0
				BEGIN
					SET @sqlcommand = @sqlcommand +	N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
				END
			END
		
			SET @sqlcommand = @sqlcommand + N'
			WHERE ' + @sqlSharingPortal + '
				AND na.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
				AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
				AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
		)
		WHEN 0 THEN(
			SELECT ((
				SELECT COUNT(na.[ArticleID])
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON na.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
				SET @sqlcommand = @sqlcommand + N'
				WHERE ' + @sqlSharingPortal + '
					AND na.HasPermissions = 0
					AND na.EventArticle = 0 '
					IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
					IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
					SET @sqlcommand = @sqlcommand +	N'
					AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
					AND na.Approved = 1
					AND (na.Active=1 OR na.UserID=@UserId)
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				)+(
				SELECT COUNT([ArticleID]) FROM (
					SELECT aup.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID '
					IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @IsSocialInstance <> 0
					BEGIN
						IF @FilterBySocialGroup = 1
						BEGIN
							SET @sqlcommand = @sqlcommand +	N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
						END
						ELSE IF @FilterByDnnUserId <> 0
						BEGIN
							SET @sqlcommand = @sqlcommand +	N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
						END
					END
					SET @sqlcommand = @sqlcommand + N'
					WHERE ' + @sqlSharingPortal + '
						AND na.HasPermissions = 1
						AND na.EventArticle = 0 '
						IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
						SET @sqlcommand = @sqlcommand +	N'
	 					AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
						AND na.Approved = 1
						AND (na.Active=1 OR na.UserID=@UserId)	
						AND ((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
						AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
					UNION
					SELECT arp.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID '
					IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @IsSocialInstance <> 0
					BEGIN
						IF @FilterBySocialGroup = 1
						BEGIN
							SET @sqlcommand = @sqlcommand +	N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
						END
						ELSE IF @FilterByDnnUserId <> 0
						BEGIN
							SET @sqlcommand = @sqlcommand +	N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
						END
					END
					SET @sqlcommand = @sqlcommand + N'
					WHERE ' + @sqlSharingPortal + '
						AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
						AND na.HasPermissions = 1
						AND na.EventArticle = 0 '
						IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
						SET @sqlcommand = @sqlcommand +	N'
						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
						AND na.Approved = 1
						AND (na.Active=1 OR na.UserID=@UserId)
						AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				) AS UserAndRolePermissions
			))
		)
	END
END AS ''Count'',NewsModuleID,TabID
FROM (
	SELECT ncl.[CategoryID],
			ncl.[PortalID],
			ncl.[CategoryName],
			ncl.[Position],
			ncl.[ParentCategory],
			ncl.[Level],
			ncl.[CategoryURL],
			ncl.Show,
	CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleId ELSE cl.[NewsModuleID] END AS NewsModuleID,
	CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabId ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats AS ncl
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @ModuleId
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID
) AS Result;

SELECT * FROM @TempCategoryIDAndCount ORDER BY PortalID, Position; '

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand +	N'
SELECT n.ArticleID, NULL AS ''RecurringID'', n.Title,n.TitleLink,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified, '
ELSE
SET @sqlcommand = @sqlcommand +	N'
SELECT n.ArticleID, NULL AS ''RecurringID'', CASE WHEN ncl.Title IS NULL THEN n.Title ELSE ncl.Title END AS Title, CASE WHEN ncl.clTitleLink IS NULL THEN n.TitleLink ELSE ncl.clTitleLink END AS TitleLink,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified, '

IF @OrderByCustomFieldId IS NOT NULL
SET @sqlcommand = @sqlcommand + N'fv.' + @OrderByColumnName + ',';

SET @sqlcommand = @sqlcommand + N'
	n.HasPermissions, n.Active, n.Approved, n.NumberOfComments,n.UserID, c.[CategoryID], tci.[Position], tci.Count, tci.NewsModuleID,tci.TabID, n.DetailType, n.DetailTypeData
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] c ON n.ArticleID = c.ArticleID 
	INNER JOIN @TempCategoryIDAndCount AS tci ON tci.CategoryID = c.CategoryID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = c.CategoryID AND cidl.Show = 1 '
IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
ELSE IF @LocaleCode IS NOT NULL SET @sqlcommand = @sqlcommand + N' LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON n.ArticleID = ncl.ArticleID AND ncl.LocaleCode = @LocaleCode '

IF @IsSocialInstance <> 0
BEGIN
	IF @FilterBySocialGroup = 1
	BEGIN
		SET @sqlcommand = @sqlcommand +	N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	END
	ELSE IF @FilterByDnnUserId <> 0
	BEGIN
		SET @sqlcommand = @sqlcommand +	N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
	END
END

IF @OrderByCustomFieldId IS NOT NULL
BEGIN
SET @sqlcommand = @sqlcommand + N'
LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldId '
END

SET @sqlcommand = @sqlcommand + N'
WHERE n.ArticleID IN(
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID=@UserId))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
			AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID=@UserId)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((na.Approved = 1
			AND (na.Active = 1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
) '
IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId ';

SET @sqlcommand = @sqlcommand + N'
ORDER BY tci.PortalID, tci.Position, '

IF @OrderByCustomFieldId IS NOT NULL AND @OrderByDirection = 'ASC'
	SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N' DROP TABLE #SharingPortals;';

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalId = @PortalId
	,@UserId = @UserId
	,@OrderByColumnName = @OrderByColumnName
	,@OrderByDirection = @OrderByDirection
	,@OrderByCustomFieldId = @OrderByCustomFieldId
	,@ModuleId = @ModuleId
	,@DefaultTabId = @DefaultTabId
    ,@DefaultModuleId = @DefaultModuleId
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CountEventsLimitByDays = @CountEventsLimitByDays
	,@IsSocialInstance = @IsSocialInstance
	,@FilterByDnnUserId = @FilterByDnnUserId
	,@FilterByDnnGroupId = @FilterByDnnGroupId
	,@LocaleCode = @LocaleCode
	,@ShowAllAuthors = @ShowAllAuthors
	,@CategoryFilterType = @CategoryFilterType
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@SatellitePermissionsSource = @SatellitePermissionsSource
	,@PermissionsModuleId = @PermissionsModuleId
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewEvents] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsWidgetsGetTreeViewEvents]
	@PortalId INT,
	@UserId INT,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldId INT = NULL,
	@ModuleId INT,
	@DefaultTabId INT,
    @DefaultModuleId INT,
	@AdminOrSuperUser BIT  = 0,
	@CountEventsLimitByDays INT = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDnnUserId INT = 0,
	@FilterByDnnGroupId INT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@ShowAllAuthors BIT = 1,
	@CategoryFilterType TINYINT = 0,
	@HideUnlocalizedItems BIT = 0,
	@SatellitePermissionsSource TINYINT = 0,
	@PermissionsModuleId INT = 0,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalId INT
	,@UserId INT
	,@OrderByColumnName VARCHAR(30)
	,@OrderByDirection VARCHAR(4)
	,@OrderByCustomFieldId INT
	,@ModuleId INT
	,@DefaultTabId INT
	,@DefaultModuleId INT
	,@AdminOrSuperUser BIT
	,@CountEventsLimitByDays INT
	,@IsSocialInstance BIT
	,@FilterByDnnUserId INT
	,@FilterByDnnGroupId INT
	,@LocaleCode NVARCHAR(20)
	,@ShowAllAuthors BIT
	,@CategoryFilterType TINYINT
	,@HideUnlocalizedItems BIT
	,@SatellitePermissionsSource TINYINT
	,@PermissionsModuleId INT
	,@IsPortalSharing BIT'

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY);

DECLARE @StartDate DATETIME;

DECLARE @DateRangeType TINYINT;
SET @DateRangeType = 0;
IF @CountEventsLimitByDays IS NOT NULL
BEGIN
	SET @StartDate = DATEADD(DD, -@CountEventsLimitByDays, @CurrentDate);
	SET @DateRangeType = 2;
END '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleId;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalId ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalId ';
END

IF @UserId <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleId
			AND ur.UserID = @UserId
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

IF @AdminOrSuperUser = 1 OR @SatellitePermissionsSource = 0
BEGIN
	SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #ViewCategories
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.' + @sqlSharingPortalAll
END
ELSE IF @UserId = -1
BEGIN
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalId  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID IS NULL
					AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.ModuleID = @PermissionsModuleId AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.PortalID = @PortalId
					AND rps.ModuleID = @PermissionsModuleId
					AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @IsPortalSharing = 1
	BEGIN -- only can be by module settings, roles from current portal!
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN (
				SELECT r.[RoleID]
				FROM {databaseOwner}[{objectQualifier}Roles] AS r
				INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
				WHERE r.PortalID = @PortalId AND ur.UserID = @UserId
					AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
					AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)
			) AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
	ELSE
	IF @SatellitePermissionsSource = 1 OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleId AND PermissionsPMSource = 1)
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalId;
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalId AND rps.ModuleID IS NULL
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.PortalID = @PortalId AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleId AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId AND ups.ShowAllCategories = 1
		)
			INSERT INTO #ViewCategories
			SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
			WHERE rps.ModuleID = @PermissionsModuleId
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserId AND ups.ModuleID = @PermissionsModuleId; '
	END
END

IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
	WHERE ' + @sqlSharingPortalAll
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
	WHERE ModuleID = @ModuleId; '
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	;WITH hierarchy AS(
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
			WHERE ci.ModuleID = @ModuleId
				AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
		)
		AND cl.' + @sqlSharingPortalAll + '
		UNION ALL
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
	)
	INSERT INTO #FilterCategories
	SELECT DISTINCT CategoryID
	FROM hierarchy; '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

DECLARE @DateRangeType TINYINT;
SET @DateRangeType = 0;

IF @CountEventsLimitByDays IS NOT NULL
	SET @DateRangeType = 2;

SET @sqlcommand = @sqlcommand + N' 
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
IF @IsSocialInstance = 0
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleId
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @ModuleId
	END
END

DECLARE @tempMenuCats TABLE(
	[CategoryID] INT PRIMARY KEY,
	[PortalID] INT,
	[CategoryName] NVARCHAR(200),
	[Position] INT,
	[ParentCategory] INT,
	[Level] INT,
	[CategoryURL] NVARCHAR(1500),
	[CategoryImage] NVARCHAR(1500),
	[CategoryText] NVARCHAR(MAX),
	[Color] NVARCHAR(16),
	[Show] BIT)

INSERT INTO @tempMenuCats ' 

IF @LocaleCode IS NULL
BEGIN
	IF @IsPortalSharing = 0
		SET @sqlcommand = @sqlcommand + N' 
		SELECT c.[CategoryID],c.[PortalID],c.[CategoryName],c.[Position],c.[ParentCategory],c.[Level],c.[CategoryURL],c.[CategoryImage],c.[CategoryText],c.[Color],
		CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID
		WHERE c.PortalID = @PortalId '
	ELSE
		SET @sqlcommand = @sqlcommand + N' 
		SELECT c.[CategoryID],c.[PortalID],c.[CategoryName],c.[Position],c.[ParentCategory],c.[Level],c.[CategoryURL],c.[CategoryImage],c.[CategoryText],c.[Color],
		CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #SharingPortals AS sp ON sp.PortalID = c.PortalID
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID '
END
ELSE
BEGIN
	IF @IsPortalSharing = 0
		SET @sqlcommand = @sqlcommand + N' 
		SELECT c.[CategoryID],c.[PortalID],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS CategoryName,
			c.[Position],c.[ParentCategory],c.[Level],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryURL] ELSE cl.[CategoryURL] END AS CategoryURL,c.[CategoryImage],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryText] ELSE cl.[CategoryText] END AS CategoryText,c.[Color],
			CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
		WHERE c.PortalID = @PortalId '
	ELSE
		SET @sqlcommand = @sqlcommand + N' 
		SELECT c.[CategoryID],c.[PortalID],
			CASE WHEN cl.[Title] IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS CategoryName,
			c.[Position],c.[ParentCategory],c.[Level],
			CASE WHEN cl.[CategoryID] IS NULL THEN c.[CategoryURL] ELSE cl.[CategoryURL] END AS CategoryURL,c.[CategoryImage],
			CASE WHEN cl.[CategoryText] IS NULL THEN c.[CategoryText] ELSE cl.[CategoryText] END AS CategoryText,c.[Color],
			CASE WHEN cwf.CategoryID IS NULL THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END AS Show
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #SharingPortals AS sp ON sp.PortalID = c.PortalID
		LEFT OUTER JOIN #ViewCategoriesWithFilter AS cwf ON c.CategoryID = cwf.CategoryID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode '
END

SET @sqlcommand = @sqlcommand + N' 
SELECT TOP 1 @DefaultTabId = TabID
FROM {databaseOwner}[{objectQualifier}TabModules]
WHERE ModuleID = @DefaultModuleId;

DECLARE @TempCategoryIDAndCount TABLE (CategoryID INT PRIMARY KEY, PortalID INT NOT NULL, CategoryName NVARCHAR(200) NOT NULL, Position INT NOT NULL, ParentCategory INT, Level INT NOT NULL, CategoryURL NVARCHAR(1500), Show BIT NOT NULL, Count INT NOT NULL, NewsModuleID INT NOT NULL,TabID INT NOT NULL); ';

DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
IF @IsSocialInstance = 1
BEGIN
	IF @FilterByDnnGroupId <> 0
	BEGIN	
		SET @FilterBySocialGroup = 1;
	END
END

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldId IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldId AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldId = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldId = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END

IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

SET @sqlcommand = @sqlcommand +	N'
INSERT INTO @TempCategoryIDAndCount
SELECT CategoryID, PortalID, CategoryName, Position, ParentCategory, Level, CategoryURL, Show,
CASE Show
	WHEN 0 THEN 0
	WHEN 1 THEN
		CASE @AdminOrSuperUser
		WHEN 1 THEN(
		SELECT ((
			SELECT COUNT(na.[ArticleID])
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON na.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID '
			IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
			IF @IsSocialInstance <> 0
			BEGIN
				IF @FilterBySocialGroup = 1
				BEGIN
					SET @sqlcommand = @sqlcommand +	N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
				END
				ELSE IF @FilterByDnnUserId <> 0
				BEGIN
					SET @sqlcommand = @sqlcommand +	N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
				END
			END
		
			SET @sqlcommand = @sqlcommand +	N'
			WHERE ' + @sqlSharingPortal + '
				AND na.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
				AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
				AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
			)+(
			SELECT COUNT(na.[ArticleID])
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON na.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
			IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
			IF @IsSocialInstance <> 0
			BEGIN
				IF @FilterBySocialGroup = 1
				BEGIN
					SET @sqlcommand = @sqlcommand +	N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
				END
				ELSE IF @FilterByDnnUserId <> 0
				BEGIN
					SET @sqlcommand = @sqlcommand +	N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
				END
			END
		
			SET @sqlcommand = @sqlcommand +	N'
			WHERE ' + @sqlSharingPortal + '
				AND na.EventArticle = 1
				AND ne.Recurring = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
				AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
				AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
				AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
			)+(
				SELECT COUNT(na.[ArticleID])
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON na.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 =
				CASE WHEN @CountEventsLimitByDays IS NOT NULL THEN -- @StartDate min value
					CASE WHEN ne.UpcomingOccurrences > 1
					THEN
						CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
							THEN 1
							ELSE 0
						END
					ELSE
						CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(1) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
							THEN 1
							ELSE 0
						END
					END
				ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
					CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY RecurringID)
						THEN 1
						ELSE 0
					END
				END	 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
			WHERE ' + @sqlSharingPortal + '
				AND na.EventArticle = 1
				AND ne.Recurring = 1 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
				AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
				AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
			))
		)
		WHEN 0 THEN(
			SELECT ((
				SELECT COUNT(na.[ArticleID])
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON na.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
				WHERE ' + @sqlSharingPortal + '
					AND na.HasPermissions = 0
					AND na.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
					AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
					AND na.Approved = 1
					AND (na.Active=1 OR na.UserID=@UserId)
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				)+(
				SELECT COUNT(na.[ArticleID]) AS cnt
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON na.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
				WHERE ' + @sqlSharingPortal + '
					AND na.HasPermissions = 0
					AND na.EventArticle = 1
					AND ne.Recurring = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
					AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
					AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
					AND na.Approved = 1
					AND (na.Active=1 OR na.UserID=@UserId)
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				)+(
					SELECT COUNT(na.[ArticleID])
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON na.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 =
					CASE WHEN @CountEventsLimitByDays IS NOT NULL THEN -- @StartDate min value
						CASE WHEN ne.UpcomingOccurrences > 1
						THEN
							CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
								THEN 1
								ELSE 0
							END
						ELSE
							CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(1) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
								THEN 1
								ELSE 0
							END
						END
					ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
						CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY RecurringID)
							THEN 1
							ELSE 0
						END
					END	 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
				WHERE ' + @sqlSharingPortal + '
					AND na.HasPermissions = 0
					AND na.EventArticle = 1
					AND ne.Recurring = 1 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
					AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
					AND na.Approved = 1
					AND (na.Active=1 OR na.UserID=@UserId)
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				)+(
				SELECT COUNT(aup.[ArticleID])
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS na ON na.ArticleID = aup.ArticleID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
				WHERE ' + @sqlSharingPortal + '
					AND na.HasPermissions = 1
					AND na.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
	 				AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
					AND na.Approved = 1
					AND (na.Active=1 OR na.UserID=@UserId)	
					AND ((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				)+(
				SELECT COUNT([ArticleID]) FROM (
					SELECT aup.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
					WHERE ' + @sqlSharingPortal + '
						AND na.HasPermissions = 1
						AND na.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
	 					AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
						AND na.Approved = 1
						AND (na.Active=1 OR na.UserID=@UserId)	
						AND ((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
						AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
					UNION
					SELECT arp.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
					WHERE ' + @sqlSharingPortal + '
						AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
						AND na.HasPermissions = 1
						AND na.EventArticle = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
						AND na.Approved = 1
						AND (na.Active=1 OR na.UserID=@UserId)
						AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
				) AS UserAndRolePermissions
				)
				)+(
				SELECT COUNT(ArticleID) FROM (
					SELECT ArticleID FROM (
						SELECT aup.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 0 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
						WHERE ' + @sqlSharingPortal + '
							AND na.HasPermissions = 1
							AND na.EventArticle = 1
							AND ne.Recurring = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
	 						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
	 						AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
							AND na.Approved = 1
							AND (na.Active=1 OR na.UserID=@UserId)	
							AND ((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
						UNION ALL
						SELECT aup.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 =
						CASE WHEN @CountEventsLimitByDays IS NOT NULL THEN -- @StartDate min value
							CASE WHEN ne.UpcomingOccurrences > 1
							THEN
								CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
									THEN 1
									ELSE 0
								END
							ELSE
								CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									OR (nerd.RecurringID IN (SELECT TOP(1) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
									THEN 1
									ELSE 0
								END
							END
						ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
							CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY RecurringID)
								THEN 1
								ELSE 0
							END
						END '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
						WHERE ' + @sqlSharingPortal + '
							AND na.HasPermissions = 1
							AND na.EventArticle = 1
							AND ne.Recurring = 1 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
	 						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
							AND na.Approved = 1
							AND (na.Active=1 OR na.UserID=@UserId)	
							AND ((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
						
					) AS PermissionsByUser
					UNION
					SELECT ArticleID FROM (
						SELECT arp.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 0 '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
						WHERE ' + @sqlSharingPortal + '
							AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
							AND na.HasPermissions = 1
							AND na.EventArticle = 1
							AND ne.Recurring = 0 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
							AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
							AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
							AND na.Approved = 1
							AND (na.Active=1 OR na.UserID=@UserId)
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
						UNION ALL
						SELECT arp.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 =
						CASE WHEN @CountEventsLimitByDays IS NOT NULL THEN -- @StartDate min value
							CASE WHEN ne.UpcomingOccurrences > 1
							THEN
								CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
									THEN 1
									ELSE 0
								END
							ELSE
								CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									OR (nerd.RecurringID IN (SELECT TOP(1) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID)))
									THEN 1
									ELSE 0
								END
							END
						ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
							CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY RecurringID)
								THEN 1
								ELSE 0
							END
						END '
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @IsSocialInstance <> 0
				BEGIN
					IF @FilterBySocialGroup = 1
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
					ELSE IF @FilterByDnnUserId <> 0
					BEGIN
						SET @sqlcommand = @sqlcommand +	N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
					END
				END
		
			SET @sqlcommand = @sqlcommand +	N'
						WHERE ' + @sqlSharingPortal + '
							AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
							AND na.HasPermissions = 1
							AND na.EventArticle = 1
							AND ne.Recurring = 1 '
				IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDnnUserId ';
				IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
				SET @sqlcommand = @sqlcommand +	N'
							AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
							AND na.Approved = 1
							AND (na.Active=1 OR na.UserID=@UserId)
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
					) AS PermissionsByRoles
				) AS PermissionsByUserAndRole
			)
		)
	END
END AS ''Count'',NewsModuleID,TabID
FROM (
	SELECT	ncl.[CategoryID],
			ncl.[PortalID],
			ncl.[CategoryName],
			ncl.[Position],
			ncl.[ParentCategory],
			ncl.[Level],
			ncl.[CategoryURL],
			ncl.Show,
	CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleId ELSE cl.[NewsModuleID] END AS NewsModuleID,
	CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabId ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats AS ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl
	ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @ModuleId
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID
) AS Result;

SELECT * FROM @TempCategoryIDAndCount ORDER BY PortalID, Position; '

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand +	N'
SELECT n.ArticleID, CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS ''RecurringID'', n.Title,n.TitleLink,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified, '
ELSE
SET @sqlcommand = @sqlcommand +	N'
SELECT n.ArticleID, CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS ''RecurringID'', CASE WHEN ncl.Title IS NULL THEN n.Title ELSE ncl.Title END AS Title, CASE WHEN ncl.clTitleLink IS NULL THEN n.TitleLink ELSE ncl.clTitleLink END AS TitleLink,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified, '

IF @OrderByCustomFieldId IS NOT NULL
SET @sqlcommand = @sqlcommand +	N'fv.' + @OrderByColumnName + ',';

IF @OrderByColumnName = N'StartDate'
SET @sqlcommand = @sqlcommand +	N' CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate, ';

SET @sqlcommand = @sqlcommand +	N'
	n.HasPermissions, n.Active, n.Approved, n.NumberOfComments,n.UserID, c.[CategoryID], tci.[Position], tci.Count, tci.NewsModuleID,tci.TabID, n.DetailType, n.DetailTypeData
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] c ON n.ArticleID = c.ArticleID 
	INNER JOIN @TempCategoryIDAndCount AS tci ON tci.CategoryID = c.CategoryID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = c.CategoryID AND cidl.Show = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND '
	IF @DateRangeType = 2
		SET @sqlcommand = @sqlcommand + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 0
		SET @sqlcommand = @sqlcommand + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '

	IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode '
	ELSE IF @LocaleCode IS NOT NULL SET @sqlcommand = @sqlcommand + N' LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON n.ArticleID = ncl.ArticleID AND ncl.LocaleCode = @LocaleCode '

	IF @IsSocialInstance <> 0
	BEGIN
		IF @FilterBySocialGroup = 1
		BEGIN
			SET @sqlcommand = @sqlcommand +	N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
		END
		ELSE IF @FilterByDnnUserId <> 0
		BEGIN
			SET @sqlcommand = @sqlcommand +	N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey '
		END
	END
	
	IF @OrderByCustomFieldId IS NOT NULL
	BEGIN
	SET @sqlcommand = @sqlcommand +	N'
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldId '
	END
	
SET @sqlcommand = @sqlcommand + N' 
WHERE n.ArticleID IN(
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 0
		AND na.EventArticle = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID=@UserId))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL -- simple event
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND (na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserId))
		AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL -- recurring event
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
	IF @DateRangeType = 2
		SET @sqlcommand = @sqlcommand + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 0
		SET @sqlcommand = @sqlcommand + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
	SET @sqlcommand = @sqlcommand + N'
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 1 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID=@UserId))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
			AND aup.Show = 1 AND na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserId)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
			AND aup.Show = 1 AND na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserId)
		))
		AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION ALL
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
	IF @DateRangeType = 2
		SET @sqlcommand = @sqlcommand + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 0
		SET @sqlcommand = @sqlcommand + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
	SET @sqlcommand = @sqlcommand + N'
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
			AND aup.Show = 1 AND na.Approved=1 AND (na.Active = 1 OR na.UserID=@UserId)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((na.Approved = 1
			AND (na.Active = 1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION All
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((na.Approved = 1
			AND (na.Active = 1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
		))
		AND (@CountEventsLimitByDays IS NULL OR ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
	UNION All
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	INNER JOIN @tempMenuCats AS cidl ON cidl.CategoryID = cat.CategoryID AND cidl.Show = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
	IF @DateRangeType = 2
		SET @sqlcommand = @sqlcommand + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 0
		SET @sqlcommand = @sqlcommand + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
	SET @sqlcommand = @sqlcommand + N'
	WHERE ' + @sqlSharingPortal + '
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1 '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		SET @sqlcommand = @sqlcommand +	N'
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ((na.Approved=1
			AND (na.Active = 1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
		))
		AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
) '
IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND n.HideDefaultLocale = 0 '
IF @IsSocialInstance <> 0 AND @FilterByDnnUserId <> 0 SET @sqlcommand = @sqlcommand + N' AND n.UserID = @FilterByDnnUserId ';

SET @sqlcommand = @sqlcommand + N'
ORDER BY tci.PortalID, tci.Position, '

IF @OrderByCustomFieldId IS NOT NULL AND @OrderByDirection = 'ASC'
	SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N' DROP TABLE #SharingPortals;';

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalId = @PortalId
	,@UserId = @UserId
	,@OrderByColumnName = @OrderByColumnName
	,@OrderByDirection = @OrderByDirection
	,@OrderByCustomFieldId = @OrderByCustomFieldId
	,@ModuleId = @ModuleId
	,@DefaultTabId = @DefaultTabId
    ,@DefaultModuleId = @DefaultModuleId
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CountEventsLimitByDays = @CountEventsLimitByDays
	,@IsSocialInstance = @IsSocialInstance
	,@FilterByDnnUserId = @FilterByDnnUserId
	,@FilterByDnnGroupId = @FilterByDnnGroupId
	,@LocaleCode = @LocaleCode
	,@ShowAllAuthors = @ShowAllAuthors
	,@CategoryFilterType = @CategoryFilterType
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@SatellitePermissionsSource = @SatellitePermissionsSource
	,@PermissionsModuleId = @PermissionsModuleId
	,@IsPortalSharing = @IsPortalSharing
GO

IF EXISTS (SELECT DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = '{objectQualifier}EasyDNNfieldsValues' AND COLUMN_NAME = 'Text' AND DATA_TYPE = 'nvarchar' AND CHARACTER_MAXIMUM_LENGTH = 300)
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] ALTER COLUMN [Text] NVARCHAR(4000) NULL;
END
GO
IF EXISTS (SELECT DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = '{objectQualifier}EasyDNNfieldsValuesLocalization' AND COLUMN_NAME = 'Text' AND DATA_TYPE = 'nvarchar' AND CHARACTER_MAXIMUM_LENGTH = 300)
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsValuesLocalization] ALTER COLUMN [Text] NVARCHAR(4000) NULL;
END
GO
IF EXISTS (SELECT DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = '{objectQualifier}EasyDNNfieldsRegistrationValues' AND COLUMN_NAME = 'Text' AND DATA_TYPE = 'nvarchar' AND CHARACTER_MAXIMUM_LENGTH = 300)
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsRegistrationValues] ALTER COLUMN [Text] NVARCHAR(4000) NULL;
END
GO
IF EXISTS (SELECT DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = '{objectQualifier}EasyDNNfields' AND COLUMN_NAME = 'DefText' AND DATA_TYPE = 'nvarchar' AND CHARACTER_MAXIMUM_LENGTH = 300)
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfields] ALTER COLUMN [DefText] NVARCHAR(4000) NULL;
END
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@DateRange BIT = 0,
	@DateRangeType TINYINT = 0,
	@StartDate DATETIME = NULL,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL,
	@eToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange TINYINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	
	@FieldsTemplateID INT = NULL,
	@SearchOnlySelectedCFGroup BIT = 0,
	@CFGeneratedSQL NVARCHAR(MAX) = NULL,
	@SimpleSearchFindCondition NVARCHAR(300) = NULL,
	@SimpleSearchType TINYINT = NULL,
	@SysDatesWhereCondition NVARCHAR(1000) = NULL,
	@OrderByID INT = NULL,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRange BIT
	,@DateRangeType TINYINT
	,@StartDate DATETIME
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange TINYINT
	,@FieldsTemplateID INT
	,@SimpleSearchFindCondition NVARCHAR(300)
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT'

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (Id INT PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX), CategoryURL NVARCHAR(1500)); '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #UserEditCategories (CategoryID INT PRIMARY KEY);
	INSERT INTO #UserEditCategories
	SELECT CategoryID
	FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)

	DECLARE @HasEditCategories BIT;

	IF EXISTS (SELECT 1 FROM #UserEditCategories)
		SET @HasEditCategories = 1;
	ELSE
		SET @HasEditCategories = 0; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS Id,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryURL ELSE cl.CategoryURL END AS CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategories) '
	
SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

IF @CFGeneratedSQL IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' DECLARE @tempArticles TABLE (ArticleID INT PRIMARY KEY); ' + @CFGeneratedSQL;

IF @SimpleSearchFindCondition IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	DECLARE @SearchTable TABLE (Words NVARCHAR(100) NOT NULL);
	DECLARE @word NVARCHAR(100), @PosWord INT
	SET @SimpleSearchFindCondition = LTRIM(RTRIM(@SimpleSearchFindCondition))+ '':''
	SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
	IF REPLACE(@SimpleSearchFindCondition, '':'', '''') <> ''''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SimpleSearchFindCondition, @PosWord - 1)))
			IF @word <> ''''
			BEGIN
				SET @word = replace( 
							replace( 
							replace( 
							replace( @word
							,''\'', ''\\'' )
							,''%'', ''\%'' )
							,''_'', ''\_'' )
							,''['', ''\['' )
				INSERT INTO @SearchTable (Words) VALUES (''% ''+@word+''%'')
				INSERT INTO @SearchTable (Words) VALUES (@word+''%'')
			END
			SET @SimpleSearchFindCondition = RIGHT(@SimpleSearchFindCondition, LEN(@SimpleSearchFindCondition) - @PosWord)
			SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
		END
	END ';

SET @TopInnerFilter = N'';
	IF @CFGeneratedSQL IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID '

	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''''
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID '

	IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
		SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '

	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

	IF @SimpleSearchFindCondition IS NOT NULL
	BEGIN
		IF @LocaleCode IS NULL
		BEGIN
			IF @SimpleSearchType = 2
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.CleanArticleData LIKE st.Words ESCAPE ''\'') '
			ELSE IF @SimpleSearchType = 1
			SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE ''\'' OR na.SubTitle LIKE st.Words ESCAPE ''\'') '
			ELSE
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE ''\'' OR na.SubTitle LIKE st.Words ESCAPE ''\'' OR na.CleanArticleData LIKE st.Words ESCAPE ''\'') '	
		END
		ELSE
		BEGIN
			IF @SimpleSearchType = 2
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (ncl.CleanArticleData LIKE st.Words ESCAPE ''\'') '
			ELSE IF @SimpleSearchType = 1
			SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (ncl.Title LIKE st.Words ESCAPE ''\'' OR ncl.SubTitle LIKE st.Words ESCAPE ''\'') '
			ELSE
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (ncl.Title LIKE st.Words ESCAPE ''\'' OR ncl.SubTitle LIKE st.Words ESCAPE ''\'' OR ncl.CleanArticleData LIKE st.Words ESCAPE ''\'') '
		END
	END

	IF @FilterByTags = 1 SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
	IF @FilterByArticles = 1 SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
SET @TopInnerFilter = @TopInnerFilter + N'
WHERE ' + @sqlSharingPortal

	IF @SysDatesWhereCondition IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + @SysDatesWhereCondition

	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '
	IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
	
	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 '
		SET @TopInnerFilter = @TopInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
	END

	IF @SearchOnlySelectedCFGroup = 1
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.CFGroupeID = @FieldsTemplateID '

IF @SimpleSearchFindCondition IS NOT NULL
BEGIN

	DECLARE @TopTagInnerFilter NVARCHAR(MAX);
	SET @TopTagInnerFilter = N'';
		IF @CFGeneratedSQL IS NOT NULL
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'
		INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID '

	IF @GoogleMapsFilter = 2
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''''
	ELSE IF @GoogleMapsFilter = 1
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID '

	IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '

	IF @FilterByDNNGroupID <> 0 
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

	IF @FilterByTags = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
	IF @FilterByArticles = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
	SET @TopTagInnerFilter = @TopTagInnerFilter + N'
	WHERE ' + @sqlSharingPortal

	IF @SysDatesWhereCondition IS NOT NULL
		SET @TopTagInnerFilter = @TopTagInnerFilter + @SysDatesWhereCondition

	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.Featured = 1 '
	IF @FilterByDNNUserID <> 0
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
	
	IF @QueryModulePermissions = 0
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.Approved = 1 '
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
	END

	IF @SearchOnlySelectedCFGroup = 1
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.CFGroupeID = @FieldsTemplateID '
END

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);
DECLARE @ControlTypeID INT;

IF @OrderByID IS NOT NULL
BEGIN
	DECLARE @CfOrderByID INT;
	DECLARE @SysOrderByID INT;
	DECLARE @SortOrder NCHAR(4);

	SELECT @CfOrderByID = CfIdOrderable
		,@SysOrderByID = SysIdOrderable
		,@SortOrder = SortOrder
	FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsOrderByItems] AS obi
	WHERE obi.Id = @OrderByID
		--AND obi.CustomFieldID IN (
		--	SELECT CustomFieldID
		--	FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems]
		--	WHERE FieldsTemplateID = @FieldsTemplateID
		--	)

	IF @CfOrderByID IS NOT NULL
	BEGIN

		SELECT @ControlTypeID = [ControlTypeID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNfields]
		WHERE CustomFieldID = @CfOrderByID
			AND IsOrderable = 1;

		IF @ControlTypeID IS NOT NULL
		BEGIN
			SELECT @OrderByColumnName = CASE @ControlTypeID
					WHEN 1
						THEN N'[Text]'
					WHEN 3
						THEN N'[Int]'
					WHEN 4
						THEN N'[Decimal]'
					WHEN 5
						THEN N'[Decimal]'
					WHEN 6
						THEN N'[Text]'
					WHEN 9
						THEN N'[DateTime]'
					WHEN 10
						THEN N'[Text]'
					ELSE NULL
					END

			IF @OrderByColumnName IS NULL
			BEGIN
				SET @OrderByID = NULL;
				SET @CfOrderByID = NULL;
				SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
				SET @OrderByDirection = N'DESC';
				SET @OrderByColumnName = N'[PublishDate]';
			END
			ELSE
			BEGIN
				SET @OrderByCustomFieldID = @CfOrderByID;
				SET @OrderByDirection = @SortOrder;
			END
		END
		ELSE
		BEGIN
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByDirection = N'DESC';
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
		IF @SysOrderByID IS NOT NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			
			SELECT @OrderByColumnName = CASE @SysOrderByID
					WHEN 0
						THEN N'[DateAdded]'
					WHEN 1
						THEN N'[LastModified]'
					WHEN 2
						THEN N'[PublishDate]'
					WHEN 3
						THEN N'[ExpireDate]'
					WHEN 4
						THEN N'[NumberOfViews]'
					WHEN 5
						THEN N'[RatingValue]'
					WHEN 6
						THEN N'[Title]'
					WHEN 7
						THEN N'[StartDate]'
					WHEN 8
						THEN N'CommentedDate'
					WHEN 9
						THEN N'[NumberOfComments]'
					WHEN 10
						THEN N'NEWID()'
					ELSE N'[PublishDate]'
					END
			
			SET @OrderByDirection = @SortOrder;
		END
		ELSE
		BEGIN	
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
			SET @OrderByDirection = N'DESC';
			SET @OrderByColumnName = N'[PublishDate]';
		END
END
ELSE IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END

IF @OrderByColumnName = N'NEWID()'
BEGIN
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
	SET @OrderByDirection = N''
END
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

SET @MainContentFilter = N'
;WITH AllContent AS( '

	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT ArticleID, CommentedDate,RecurringID,StartDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,inner_all.RecurringID
			,inner_all.StartDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID], inner_all.RecurringID ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @MainContentFilter = @MainContentFilter + N'inner_all.Featured DESC, '
			
			SET @MainContentFilter = @MainContentFilter + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
			
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc
		INNER JOIN (';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT n.ArticleID,n.Featured,
		CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
		CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND '
	IF @DateRangeType = 2
		SET @MainContentFilter = @MainContentFilter + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 1
		BEGIN
			IF @ListArchive = 0
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
			ELSE
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
		END
	ELSE IF @DateRangeType = 0
		SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE
		SET @MainContentFilter = @MainContentFilter + N' 1 = 0'
	
	SET @MainContentFilter = @MainContentFilter + N'
	WHERE n.ArticleID IN( '
	 
	 -- tu bi trebal staviti okolo da se filtrira po and !!!
	 
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.ArticleID IN ( ';
	END
	 
	 SET @MainContentFilter = @MainContentFilter + N'
		SELECT [ArticleID] FROM (
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

				AND na.EventArticle = 0 '

			IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

			IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL
				SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '

		SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

				AND na.EventArticle = 1
				AND ne.Recurring = 0 '

			IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

			IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
				ELSE
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
			END
			ELSE IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

		SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
			IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N'
				((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
			ELSE IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
					ELSE
						SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
				END
			ELSE IF @DateRangeType = 0
				SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
			ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND na.EventArticle = 1
				AND ne.Recurring = 1 '

			IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

		IF @SimpleSearchFindCondition IS NOT NULL
		BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION
			SELECT ArticleID
			FROM (
				SELECT ArticleID
				FROM (
					SELECT ti.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
					INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
					WHERE t.' + @sqlSharingPortalAll
					IF @SimpleSearchType = 4
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT di.ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] AS d
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentItems] AS di ON di.DocumentID = d.DocEntryID
						INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
						WHERE d.' + @sqlSharingPortalAll + N'
							AND d.Visible = 1
						UNION
						SELECT li.ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsLinks] AS l
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsLinkItems] AS li ON li.LinkID = l.LinkID
						INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
						WHERE l.' + @sqlSharingPortalAll
					END
				SET @MainContentFilter = @MainContentFilter + N'
				) AS allSearchFields
				INTERSECT
				SELECT ArticleID
				FROM (
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) '

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
						AND na.EventArticle = 0 '
					IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL
					SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
						AND na.EventArticle = 1
						AND ne.Recurring = 0 '

					IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
						AND na.EventArticle = 1
						AND ne.Recurring = 1 '

					IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

				SET @MainContentFilter = @MainContentFilter + N') AS permissionPerArticle';
			SET @MainContentFilter = @MainContentFilter + N') AS tagsdocumentsLinks';
		END

		SET @MainContentFilter = @MainContentFilter + N'
		) AS NoPermissionsPerArticle '

	IF @QueryPermissionsPerArticles = 1
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		UNION ALL
		SELECT [ArticleID]
		FROM (
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND na.HasPermissions = 1
				AND na.EventArticle = 0 '
			IF @CanEditAllContent = 0
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
				IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
				ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
			END
			IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL
				SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '

		SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 0 '
			IF @CanEditAllContent = 0
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
				IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
				ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
			END
			IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
				ELSE
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
			END
			ELSE IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

		SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
			IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N'
				((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
			ELSE IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
					ELSE
						SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
				END
			ELSE IF @DateRangeType = 0
				SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
			ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 1 '
			IF @CanEditAllContent = 0
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
				IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
				ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
			END

			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION
			SELECT ArticleID
			FROM (
				SELECT ArticleID
				FROM (
					SELECT ti.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
					INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
					WHERE t.' + @sqlSharingPortalAll
					IF @SimpleSearchType = 4
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT di.ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] AS d
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentItems] AS di ON di.DocumentID = d.DocEntryID
						INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
						WHERE d.' + @sqlSharingPortalAll + N'
							AND d.Visible = 1
						UNION
						SELECT li.ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsLinks] AS l
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsLinkItems] AS li ON li.LinkID = l.LinkID
						INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
						WHERE l.' + @sqlSharingPortalAll
					END
				SET @MainContentFilter = @MainContentFilter + N'
				) AS allSearchFields
				INTERSECT
				SELECT ArticleID
				FROM (
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
					AND na.HasPermissions = 1
					AND na.EventArticle = 0 '

					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL
						SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)  '

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
						AND na.HasPermissions = 1
						AND na.EventArticle = 1
						AND ne.Recurring = 0 '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
						AND na.HasPermissions = 1
						AND na.EventArticle = 1
						AND ne.Recurring = 1 '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END

				SET @MainContentFilter = @MainContentFilter + N') AS permissionPerArticle';
			SET @MainContentFilter = @MainContentFilter + N') AS tagsdocumentsLinks';
		END

				SET @MainContentFilter = @MainContentFilter + N'
		) AS WithNoRolePermissions '

			IF @UserID <> -1
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N'
				UNION
				SELECT [ArticleID] FROM (
					SELECT DISTINCT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '
					
					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
					
					AND na.HasPermissions = 1
					AND na.EventArticle = 0 '
					IF @CanEditAllContent = 0
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '

					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL
						SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '

				SET @MainContentFilter = @MainContentFilter + N'
					UNION ALL
					SELECT DISTINCT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 0 '
					IF @CanEditAllContent = 0
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
						END
						ELSE IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION All
					SELECT DISTINCT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 1 '
					IF @CanEditAllContent = 0
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '


			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION
			SELECT ArticleID
			FROM (
				SELECT ArticleID
				FROM (
					SELECT ti.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
					INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
					WHERE t.' + @sqlSharingPortalAll
					IF @SimpleSearchType = 4
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT di.ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] AS d
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentItems] AS di ON di.DocumentID = d.DocEntryID
						INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
						WHERE d.' + @sqlSharingPortalAll + N'
							AND d.Visible = 1
						UNION
						SELECT li.ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsLinks] AS l
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsLinkItems] AS li ON li.LinkID = l.LinkID
						INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
						WHERE l.' + @sqlSharingPortalAll
					END
				SET @MainContentFilter = @MainContentFilter + N'
				) AS allSearchFields
				INTERSECT
				SELECT ArticleID
				FROM (
					SELECT DISTINCT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'

					AND na.HasPermissions = 1
					AND na.EventArticle = 0 '
					IF @CanEditAllContent = 0
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '

					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL
						SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION ALL
					SELECT DISTINCT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 0 '
					IF @CanEditAllContent = 0
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '

					IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
						END
						ELSE IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION ALL
					SELECT DISTINCT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'

					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 1 '
					IF @CanEditAllContent = 0
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '

				SET @MainContentFilter = @MainContentFilter + N') AS permissionPerArticle';
			SET @MainContentFilter = @MainContentFilter + N') AS tagsdocumentsLinks';
		END

				SET @MainContentFilter = @MainContentFilter + N'
				) AS ByRolePermissions '
			END

		END
	
	-- treba desti ako se koristi AND operator
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	
	SET @MainContentFilter = @MainContentFilter + N' 
	) '
	
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON nc.ArticleID = inner_all.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1'
	END
	
SET @MainContentFilter = @MainContentFilter + N' 
) '


SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent '

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
	,e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], '
ELSE
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], ';

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N'0 AS CanEdit, '
ELSE IF @CanEditAllContent = 1
	SET @sqlcommand = @sqlcommand + N'1 AS CanEdit, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE WHEN @HasEditCategories = 0
	THEN 
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	ELSE
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE '
			IF @EditOnlyAsOwner = 1
				SET @sqlcommand = @sqlcommand + N' n.UserID = @UserID AND '

			SET @sqlcommand = @sqlcommand + N' c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	END
	AS CanEdit, '
END

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '
ELSE
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", lc.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.Id
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N' 0 AS Published, 0 AS Approve, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE n.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	END AS Published, '
	IF @UserCanApprove = 0
		SET @sqlcommand = @sqlcommand + N'0 AS Approve, '
	ELSE
		SET @sqlcommand = @sqlcommand + N'
			CASE n.Approved
				WHEN 1 THEN 0
				WHEN 0 THEN n.Active
			END AS Approve, '
END

SET @sqlcommand = @sqlcommand + N' @AllContentCount AS ContentCount '

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N',e_fsd.' + @OrderByColumnName + ',(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END)
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
				,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC'
					SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
		END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
END

SET @sqlcommand = @sqlcommand + N' ORDER BY '
	IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'Featured DESC, '
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
		SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#UserEditCategories'') IS NOT NULL
		DROP TABLE #UserEditCategories; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
		DROP TABLE #LocalizedCategories; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRange = @DateRange
	,@DateRangeType = @DateRangeType
	,@StartDate = @StartDate
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@FieldsTemplateID = @FieldsTemplateID
	,@SimpleSearchFindCondition = @SimpleSearchFindCondition
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@DateRange BIT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@FilterByTagID INT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	
	@FieldsTemplateID INT = NULL,
	@SearchOnlySelectedCFGroup BIT = 0,
	@CFGeneratedSQL NVARCHAR(MAX) = NULL,
	@SimpleSearchFindCondition NVARCHAR(300) = NULL,
	@SimpleSearchType TINYINT = NULL,
	@SysDatesWhereCondition NVARCHAR(1000) = NULL,
	@OrderByID INT = NULL,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRange BIT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@LocaleCode NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@FilterByTagID INT
	,@FieldsTemplateID INT
	,@SimpleSearchFindCondition NVARCHAR(300)
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT'

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (Id INT PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX), CategoryURL NVARCHAR(1500)); '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #UserEditCategories (CategoryID INT PRIMARY KEY);
	INSERT INTO #UserEditCategories
	SELECT CategoryID
	FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)

	DECLARE @HasEditCategories BIT;

	IF EXISTS (SELECT 1 FROM #UserEditCategories)
		SET @HasEditCategories = 1;
	ELSE
		SET @HasEditCategories = 0; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS Id,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryURL ELSE cl.CategoryURL END AS CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategories) '
	
SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

IF @CFGeneratedSQL IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' DECLARE @tempArticles TABLE (ArticleID INT PRIMARY KEY); ' + @CFGeneratedSQL;

IF @SimpleSearchFindCondition IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	DECLARE @SearchTable TABLE (Words NVARCHAR(100) NOT NULL);
	DECLARE @word NVARCHAR(100), @PosWord INT
	SET @SimpleSearchFindCondition = LTRIM(RTRIM(@SimpleSearchFindCondition))+ '':''
	SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
	IF REPLACE(@SimpleSearchFindCondition, '':'', '''') <> ''''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SimpleSearchFindCondition, @PosWord - 1)))
			IF @word <> ''''
			BEGIN
				SET @word = replace( 
							replace( 
							replace( 
							replace( @word
							,''\'', ''\\'' )
							,''%'', ''\%'' )
							,''_'', ''\_'' )
							,''['', ''\['' )
				INSERT INTO @SearchTable (Words) VALUES (''% ''+@word+''%'')
				INSERT INTO @SearchTable (Words) VALUES (@word+''%'')
			END
			SET @SimpleSearchFindCondition = RIGHT(@SimpleSearchFindCondition, LEN(@SimpleSearchFindCondition) - @PosWord)
			SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
		END
	END ';

SET @TopInnerFilter = N'';

	IF @CFGeneratedSQL IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID '
		
	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''''
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID '

	IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
		SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

	IF @SimpleSearchFindCondition IS NOT NULL
	BEGIN
		IF @LocaleCode IS NULL
		BEGIN
			IF @SimpleSearchType = 1
				SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE ''\'' OR na.SubTitle LIKE st.Words ESCAPE ''\'') '
			ELSE IF @SimpleSearchType = 2
				SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @SearchTable AS st ON (na.CleanArticleData LIKE st.Words ESCAPE ''\'') '
			ELSE
				SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE ''\'' OR na.SubTitle LIKE st.Words ESCAPE ''\'' OR na.CleanArticleData LIKE st.Words ESCAPE ''\'') '
		END
		ELSE
		BEGIN
			IF @SimpleSearchType = 1
				SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @SearchTable AS st ON (ncl.Title LIKE st.Words ESCAPE ''\'' OR ncl.SubTitle LIKE st.Words ESCAPE ''\'') '
			ELSE IF @SimpleSearchType = 2
				SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @SearchTable AS st ON (ncl.CleanArticleData LIKE st.Words ESCAPE ''\'') '
			ELSE
				SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @SearchTable AS st ON (ncl.Title LIKE st.Words ESCAPE ''\'' OR ncl.SubTitle LIKE st.Words ESCAPE ''\'' OR ncl.CleanArticleData LIKE st.Words ESCAPE ''\'') '
		END
	END

	IF @FilterByTags = 1 SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
	IF @FilterByArticles = 1 SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
SET @TopInnerFilter = @TopInnerFilter + N'
WHERE ' + @sqlSharingPortal + '
	AND na.EventArticle = 0 '
	
	IF @SysDatesWhereCondition IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + @SysDatesWhereCondition
	
	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @DateRange = 2 SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate '
		ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @DateRange = 2 OR @DateRange = 1 SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '
	IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 '
		SET @TopInnerFilter = @TopInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
	END

IF @SimpleSearchFindCondition IS NOT NULL
BEGIN

	DECLARE @Top_TAG_InnerFilter NVARCHAR(MAX);
	SET @Top_TAG_InnerFilter = N'';

		IF @CFGeneratedSQL IS NOT NULL
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
			INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID '
			
		IF @GoogleMapsFilter = 2
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''''
		ELSE IF @GoogleMapsFilter = 1
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID '

		IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
		
		IF @FilterByDNNGroupID <> 0 
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID '
		ELSE IF @FilterByDNNUserID <> 0
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

		IF @FilterByTags = 1 SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
		IF @FilterByArticles = 1 SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
	SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
	WHERE ' + @sqlSharingPortal + '
		AND na.EventArticle = 0 '
		
		IF @SysDatesWhereCondition IS NOT NULL
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + @SysDatesWhereCondition
		
		IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
		BEGIN
			IF @DateRange = 2 SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate '
			ELSE SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
		END
		ELSE IF @DateRange = 2 OR @DateRange = 1 SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		ELSE SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			
		IF @LocaleCode IS NULL SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.HideDefaultLocale = 0 '
		IF @Featured = 1 SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.Featured = 1 '
		IF @FilterByDNNUserID <> 0
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.UserID = @FilterByDNNUserID '
		ELSE IF @sqlAuthors IS NOT NULL
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

		IF @QueryModulePermissions = 0
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
		ELSE IF @CanEditAllContent = 0
		BEGIN
			IF @UserCanApprove = 0 SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.Approved = 1 '
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
		END
END

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);
DECLARE @ControlTypeID INT;

IF @OrderByID IS NOT NULL
BEGIN
	DECLARE @CfOrderByID INT;
	DECLARE @SysOrderByID INT;
	DECLARE @SortOrder NCHAR(4);

	SELECT @CfOrderByID = CfIdOrderable
		,@SysOrderByID = SysIdOrderable
		,@SortOrder = SortOrder
	FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsOrderByItems] AS obi
	WHERE obi.Id = @OrderByID
		--AND obi.CustomFieldID IN (
		--	SELECT CustomFieldID
		--	FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems]
		--	WHERE FieldsTemplateID = @FieldsTemplateID
		--	)

	IF @CfOrderByID IS NOT NULL
	BEGIN

		SELECT @ControlTypeID = [ControlTypeID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNfields]
		WHERE CustomFieldID = @CfOrderByID
			AND IsOrderable = 1;

		IF @ControlTypeID IS NOT NULL
		BEGIN
			SELECT @OrderByColumnName = CASE @ControlTypeID
					WHEN 1
						THEN N'[Text]'
					WHEN 3
						THEN N'[Int]'
					WHEN 4
						THEN N'[Decimal]'
					WHEN 5
						THEN N'[Decimal]'
					WHEN 6
						THEN N'[Text]'
					WHEN 9
						THEN N'[DateTime]'
					WHEN 10
						THEN N'[Text]'
					ELSE NULL
					END

			IF @OrderByColumnName IS NULL
			BEGIN
				SET @OrderByID = NULL;
				SET @CfOrderByID = NULL;
				SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
				SET @OrderByDirection = N'DESC';
				SET @OrderByColumnName = N'[PublishDate]';
			END
			ELSE
			BEGIN
				SET @OrderByCustomFieldID = @CfOrderByID;
				SET @OrderByDirection = @SortOrder;
			END
		END
		ELSE
		BEGIN
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByDirection = N'DESC';
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
		IF @SysOrderByID IS NOT NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			
			SELECT @OrderByColumnName = CASE @SysOrderByID
					WHEN 0
						THEN N'[DateAdded]'
					WHEN 1
						THEN N'[LastModified]'
					WHEN 2
						THEN N'[PublishDate]'
					WHEN 3
						THEN N'[ExpireDate]'
					WHEN 4
						THEN N'[NumberOfViews]'
					WHEN 5
						THEN N'[RatingValue]'
					WHEN 6
						THEN N'[Title]'
					WHEN 7
						THEN N'[PublishDate]'-- EventStartDate - only articles
					WHEN 8
						THEN N'CommentedDate'
					WHEN 9
						THEN N'[NumberOfComments]'
					WHEN 10
						THEN N'NEWID()'
					ELSE N'[PublishDate]'
					END
			
			SET @OrderByDirection = @SortOrder;
		END
		ELSE
		BEGIN	
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
			SET @OrderByDirection = N'DESC';
			SET @OrderByColumnName = N'[PublishDate]';
		END
END
ELSE IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END

IF @OrderByColumnName = N'NEWID()'
BEGIN
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
	SET @OrderByDirection = N''
END
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;
	
SET @MainContentFilter = N'
;WITH AllContent AS( '
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT ArticleID, CommentedDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID] ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @MainContentFilter = @MainContentFilter + N'n.Featured DESC, '
			
			SET @MainContentFilter = @MainContentFilter + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc ON nc.ArticleID = n.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		WHERE nc.ArticleID IN (';
	END
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.ArticleID IN ( ';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) '

		SET @MainContentFilter = @MainContentFilter + @TopInnerFilter

		IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

	IF @SimpleSearchFindCondition IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		UNION
		SELECT ArticleID
		FROM (
			SELECT ArticleID
			FROM (
				SELECT ti.[ArticleID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
				INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
				WHERE t.' + @sqlSharingPortalAll
				IF @SimpleSearchType = 4
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT di.ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] AS d
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentItems] AS di ON di.DocumentID = d.DocEntryID
					INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
					WHERE d.' + @sqlSharingPortalAll + N'
						AND d.Visible = 1
					UNION
					SELECT li.ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsLinks] AS l
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsLinkItems] AS li ON li.LinkID = l.LinkID
					INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
					WHERE l.' + @sqlSharingPortalAll
				END
			SET @MainContentFilter = @MainContentFilter + N'
			) AS allSearchFields
			INTERSECT
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) '

			SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter

			IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

		SET @MainContentFilter = @MainContentFilter + N') AS HasPermissionsFalse';
	END
	
	IF @QueryPermissionsPerArticles = 1
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		UNION ALL
		SELECT ArticleID FROM (
			SELECT ArticleID FROM (
			SELECT aup.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup '
				IF @CanEditAllContent = 0
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N' WHERE aup.Show = 1 '
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
					ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
				END
			IF @UserID <> -1
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N'
				UNION
				SELECT arp.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' WHERE arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					END
			END
			SET @MainContentFilter = @MainContentFilter + N'
			) AS PermissionsByArticle
			INTERSECT
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

			AND na.HasPermissions = 1 ' 
		
			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION
			SELECT ArticleID
			FROM (
				SELECT ArticleID
				FROM (
					SELECT ti.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
						INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
						WHERE t.' + @sqlSharingPortalAll
						IF @SimpleSearchType = 4
						BEGIN
							SET @MainContentFilter = @MainContentFilter + N'
							UNION
							SELECT di.ArticleID
							FROM {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] AS d
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentItems] AS di ON di.DocumentID = d.DocEntryID
							INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
							WHERE d.' + @sqlSharingPortalAll + N'
								AND d.Visible = 1
							UNION
							SELECT li.ArticleID
							FROM {databaseOwner}[{objectQualifier}EasyDNNNewsLinks] AS l
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsLinkItems] AS li ON li.LinkID = l.LinkID
							INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
							WHERE l.' + @sqlSharingPortalAll
						END
					SET @MainContentFilter = @MainContentFilter + N'
					) AS allSearchFields
					INTERSECT
					SELECT ArticleID FROM (
						SELECT ArticleID FROM (
						SELECT aup.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup '
							IF @CanEditAllContent = 0
							BEGIN
								SET @MainContentFilter = @MainContentFilter + N' WHERE aup.Show = 1 '
								IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
								ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
							END
						IF @UserID <> -1
						BEGIN
							SET @MainContentFilter = @MainContentFilter + N'
							UNION
							SELECT arp.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp '
								IF @CanEditAllContent = 0
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N' WHERE arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
								END
						END
						SET @MainContentFilter = @MainContentFilter + N'
						) AS PermissionsByArticle
						INTERSECT
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

						SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter + N'

						AND na.HasPermissions = 1
					) AS filterArticlesByArticlePermissiosn
				) AS documentsLinks '
			END

		SET @MainContentFilter = @MainContentFilter + N'
		) AS HasPermissionsTrue '
	END
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	END
	
	IF @OrderByColumnName = N'CommentedDate'
	SET @MainContentFilter = @MainContentFilter + N'
		)
	) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1
	'
SET @MainContentFilter = @MainContentFilter + N'
) '
SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent '

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID],n.[ContactEmail], ';
ELSE
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],n.[ContactEmail], ';

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N'0 AS CanEdit, '
ELSE IF @CanEditAllContent = 1
	SET @sqlcommand = @sqlcommand + N'1 AS CanEdit, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE WHEN @HasEditCategories = 0
	THEN 
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	ELSE
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE '
			IF @EditOnlyAsOwner = 1
				SET @sqlcommand = @sqlcommand + N' n.UserID = @UserID AND '

			SET @sqlcommand = @sqlcommand + N' c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	END
	AS CanEdit, '
END

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '
ELSE
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", lc.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.Id
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N' 0 AS Published, 0 AS Approve, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE n.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	END AS Published, '
	IF @UserCanApprove = 0
		SET @sqlcommand = @sqlcommand + N'0 AS Approve, '
	ELSE
		SET @sqlcommand = @sqlcommand + N'
			CASE n.Approved
				WHEN 1 THEN 0
				WHEN 0 THEN n.Active
			END AS Approve, '
END

SET @sqlcommand = @sqlcommand + N' @AllContentCount AS ContentCount '

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

					SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],fv.' + @OrderByColumnName + '
				,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		WHERE n.ArticleID IN (
			SELECT finalSelection.ArticleID
			FROM (
				SELECT inner_n.ArticleID, ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'inner_n.Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				
				SET @sqlcommand = @sqlcommand + N' ' + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				WHERE inner_n.ArticleID IN (SELECT ArticleID FROM AllContent)
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		)';
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN  (
			SELECT finalSelection.[ArticleID],finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				 SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],fv.' + @OrderByColumnName + '
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, fv.'

				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode
		WHERE n.ArticleID IN (
			SELECT finalSelection.ArticleID
			FROM (
				SELECT inner_n.ArticleID, ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'inner_n.Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + N' ' + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				WHERE inner_n.ArticleID IN (SELECT ArticleID FROM AllContent)
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		)';
	END
END

SET @sqlcommand = @sqlcommand + N' ORDER BY '
	IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'Featured DESC, '
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
		SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#UserEditCategories'') IS NOT NULL
		DROP TABLE #UserEditCategories; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
		DROP TABLE #LocalizedCategories; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRange = @DateRange
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@LocaleCode = @LocaleCode
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@FilterByTagID = @FilterByTagID
	,@FieldsTemplateID = @FieldsTemplateID
	,@SimpleSearchFindCondition = @SimpleSearchFindCondition
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT = 1,
	@ItemsTo INT = 5,
	@DateRangeType TINYINT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 0,
	@FillterSettingsSource BIT = 0,
	@StartDate DATETIME = NULL,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange TINYINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	
	@FieldsTemplateID INT = NULL,
	@SearchOnlySelectedCFGroup BIT = 0,
	@CFGeneratedSQL NVARCHAR(MAX) = NULL,
	@SimpleSearchFindCondition NVARCHAR(300) = NULL,
	@SimpleSearchType TINYINT = NULL,
	@SysDatesWhereCondition NVARCHAR(1000) = NULL,
	@OrderByID INT = NULL,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRangeType TINYINT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@StartDate DATETIME
	,@OuterModuleID INT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange TINYINT
	,@FieldsTemplateID INT
	,@SimpleSearchFindCondition NVARCHAR(300)
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT'

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (Id INT PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX), CategoryURL NVARCHAR(1500)); '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #UserEditCategories (CategoryID INT PRIMARY KEY);
	INSERT INTO #UserEditCategories
	SELECT CategoryID
	FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)

	DECLARE @HasEditCategories BIT;

	IF EXISTS (SELECT 1 FROM #UserEditCategories)
		SET @HasEditCategories = 1;
	ELSE
		SET @HasEditCategories = 0; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS Id,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryURL ELSE cl.CategoryURL END AS CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategories) '
	
SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

IF @CFGeneratedSQL IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' DECLARE @tempArticles TABLE (ArticleID INT PRIMARY KEY); ' + @CFGeneratedSQL;

IF @SimpleSearchFindCondition IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	DECLARE @SearchTable TABLE (Words NVARCHAR(100) NOT NULL);
	DECLARE @word NVARCHAR(100), @PosWord INT
	SET @SimpleSearchFindCondition = LTRIM(RTRIM(@SimpleSearchFindCondition))+ '':''
	SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
	IF REPLACE(@SimpleSearchFindCondition, '':'', '''') <> ''''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SimpleSearchFindCondition, @PosWord - 1)))
			IF @word <> ''''
			BEGIN
				SET @word = replace( 
							replace( 
							replace( 
							replace( @word
							,''\'', ''\\'' )
							,''%'', ''\%'' )
							,''_'', ''\_'' )
							,''['', ''\['' )
				INSERT INTO @SearchTable (Words) VALUES (''% ''+@word+''%'')
				INSERT INTO @SearchTable (Words) VALUES (@word+''%'')
			END
			SET @SimpleSearchFindCondition = RIGHT(@SimpleSearchFindCondition, LEN(@SimpleSearchFindCondition) - @PosWord)
			SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
		END
	END ';

SET @TopInnerFilter = N'';
	IF @CFGeneratedSQL IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID '
		
	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''' '
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID '

	IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
		SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '

	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

	IF @SimpleSearchFindCondition IS NOT NULL
	BEGIN
		IF @LocaleCode IS NULL
		BEGIN
			IF @SimpleSearchType = 2
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.CleanArticleData LIKE st.Words ESCAPE ''\'') '
			ELSE IF @SimpleSearchType = 1
			SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE ''\'' OR na.SubTitle LIKE st.Words ESCAPE ''\'') '
			ELSE
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE ''\'' OR na.SubTitle LIKE st.Words ESCAPE ''\'' OR na.CleanArticleData LIKE st.Words ESCAPE ''\'') '	
		END
		ELSE
		BEGIN
			IF @SimpleSearchType = 2
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (ncl.CleanArticleData LIKE st.Words ESCAPE ''\'') '
			ELSE IF @SimpleSearchType = 1
			SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (ncl.Title LIKE st.Words ESCAPE ''\'' OR ncl.SubTitle LIKE st.Words ESCAPE ''\'') '
			ELSE
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (ncl.Title LIKE st.Words ESCAPE ''\'' OR ncl.SubTitle LIKE st.Words ESCAPE ''\'' OR ncl.CleanArticleData LIKE st.Words ESCAPE ''\'') '
		END
	END

	IF @FilterByTags = 1 SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
	IF @FilterByArticles = 1 SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
	
SET @TopInnerFilter = @TopInnerFilter + N'
WHERE ' + @sqlSharingPortal + '
	AND na.EventArticle = 1 '
	
	IF @SysDatesWhereCondition IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + @SysDatesWhereCondition
	
	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '
	IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 '
		SET @TopInnerFilter = @TopInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
	END
	
	IF @SearchOnlySelectedCFGroup = 1
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.CFGroupeID = @FieldsTemplateID '

IF @SimpleSearchFindCondition IS NOT NULL
BEGIN

	DECLARE @TopTagInnerFilter NVARCHAR(MAX);
	SET @TopTagInnerFilter = N'';
		IF @CFGeneratedSQL IS NOT NULL
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'
		INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID '
		
	IF @GoogleMapsFilter = 2
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''' '
	ELSE IF @GoogleMapsFilter = 1
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID '

	IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '

	IF @FilterByDNNGroupID <> 0 
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

	IF @FilterByTags = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
	IF @FilterByArticles = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
	
	SET @TopTagInnerFilter = @TopTagInnerFilter + N'
	WHERE ' + @sqlSharingPortal + '
	AND na.EventArticle = 1 '
	
	IF @SysDatesWhereCondition IS NOT NULL
		SET @TopTagInnerFilter = @TopTagInnerFilter + @SysDatesWhereCondition
	
	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.Featured = 1 '
	IF @FilterByDNNUserID <> 0
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

	IF @QueryModulePermissions = 0
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.Approved = 1 '
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
	END
	
	IF @SearchOnlySelectedCFGroup = 1
		SET @TopTagInnerFilter = @TopTagInnerFilter + N' AND na.CFGroupeID = @FieldsTemplateID '
END

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);
DECLARE @ControlTypeID INT;

IF @OrderByID IS NOT NULL
BEGIN
	DECLARE @CfOrderByID INT;
	DECLARE @SysOrderByID INT;
	DECLARE @SortOrder NCHAR(4);

	SELECT @CfOrderByID = CfIdOrderable
		,@SysOrderByID = SysIdOrderable
		,@SortOrder = SortOrder
	FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsOrderByItems] AS obi
	WHERE obi.Id = @OrderByID
		--AND obi.CustomFieldID IN (
		--	SELECT CustomFieldID
		--	FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems]
		--	WHERE FieldsTemplateID = @FieldsTemplateID
		--	)

	IF @CfOrderByID IS NOT NULL
	BEGIN

		SELECT @ControlTypeID = [ControlTypeID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNfields]
		WHERE CustomFieldID = @CfOrderByID
			AND IsOrderable = 1;

		IF @ControlTypeID IS NOT NULL
		BEGIN
			SELECT @OrderByColumnName = CASE @ControlTypeID
					WHEN 1
						THEN N'[Text]'
					WHEN 3
						THEN N'[Int]'
					WHEN 4
						THEN N'[Decimal]'
					WHEN 5
						THEN N'[Decimal]'
					WHEN 6
						THEN N'[Text]'
					WHEN 9
						THEN N'[DateTime]'
					WHEN 10
						THEN N'[Text]'
					ELSE NULL
					END

			IF @OrderByColumnName IS NULL
			BEGIN
				SET @OrderByID = NULL;
				SET @CfOrderByID = NULL;
				SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
				SET @OrderByDirection = N'DESC';
				SET @OrderByColumnName = N'[PublishDate]';
			END
			ELSE
			BEGIN
				SET @OrderByCustomFieldID = @CfOrderByID;
				SET @OrderByDirection = @SortOrder;
			END
		END
		ELSE
		BEGIN
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByDirection = N'DESC';
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
		IF @SysOrderByID IS NOT NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			
			SELECT @OrderByColumnName = CASE @SysOrderByID
					WHEN 0
						THEN N'[DateAdded]'
					WHEN 1
						THEN N'[LastModified]'
					WHEN 2
						THEN N'[PublishDate]'
					WHEN 3
						THEN N'[ExpireDate]'
					WHEN 4
						THEN N'[NumberOfViews]'
					WHEN 5
						THEN N'[RatingValue]'
					WHEN 6
						THEN N'[Title]'
					WHEN 7
						THEN N'[StartDate]'
					WHEN 8
						THEN N'CommentedDate'
					WHEN 9
						THEN N'[NumberOfComments]'
					WHEN 10
						THEN N'NEWID()'
					ELSE N'[PublishDate]'
					END
			
			SET @OrderByDirection = @SortOrder;
		END
		ELSE
		BEGIN	
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
			SET @OrderByDirection = N'DESC';
			SET @OrderByColumnName = N'[PublishDate]';
		END
END
ELSE IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END

IF @OrderByColumnName = N'NEWID()'
BEGIN
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
	SET @OrderByDirection = N''
END
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

SET @MainContentFilter = N'
;WITH AllContent AS( '

	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT ArticleID, CommentedDate,RecurringID,StartDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,inner_all.RecurringID
			,inner_all.StartDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID], inner_all.RecurringID ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @MainContentFilter = @MainContentFilter + N'inner_all.Featured DESC, '
			
			SET @MainContentFilter = @MainContentFilter + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
			
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc
		INNER JOIN (';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT n.ArticleID,n.Featured,
		CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate,
		CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
	IF @DateRangeType = 2
		SET @MainContentFilter = @MainContentFilter + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 1
		BEGIN
			IF @ListArchive = 0
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
			ELSE
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
		END
	ELSE IF @DateRangeType = 0
		SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE
		SET @MainContentFilter = @MainContentFilter + N' 1 = 0'
	
	SET @MainContentFilter = @MainContentFilter + N'
	WHERE n.ArticleID IN( '
	 
	 -- tu bi trebal staviti okolo da se filtrira po and !!!
	 
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID]
		FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.ArticleID IN ( ';
	END
	 
	SET @MainContentFilter = @MainContentFilter + N'
		SELECT [ArticleID]
		FROM (
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND ne.Recurring = 0 '

			IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

			IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
				ELSE
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
			END
			ELSE IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '


		SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 1
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
			IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N'
				((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
			ELSE IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
					ELSE
						SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
				END
			ELSE IF @DateRangeType = 0
				SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
			ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND ne.Recurring = 1 '

			IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N'
				UNION
				SELECT ArticleID
				FROM (
					SELECT ArticleID
					FROM (
						SELECT ti.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
						INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
						WHERE t.' + @sqlSharingPortalAll
						IF @SimpleSearchType = 4
						BEGIN
							SET @MainContentFilter = @MainContentFilter + N'
							UNION
							SELECT di.ArticleID
							FROM {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] AS d
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentItems] AS di ON di.DocumentID = d.DocEntryID
							INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
							WHERE d.' + @sqlSharingPortalAll + N'
								AND d.Visible = 1
							UNION
							SELECT li.ArticleID
							FROM {databaseOwner}[{objectQualifier}EasyDNNNewsLinks] AS l
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsLinkItems] AS li ON li.LinkID = l.LinkID
							INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
							WHERE l.' + @sqlSharingPortalAll
						END
					SET @MainContentFilter = @MainContentFilter + N'
					) AS allSearchFields
					INTERSECT
					SELECT ArticleID
					FROM (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

						SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
							AND ne.Recurring = 0 '

						IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

						IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
						END
						ELSE IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
								ELSE
									SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
							END
						ELSE IF @DateRangeType = 0
							SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

						SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
							AND ne.Recurring = 1 '

						IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

					SET @MainContentFilter = @MainContentFilter + N') AS permissionPerArticle';
				SET @MainContentFilter = @MainContentFilter + N') AS tagsdocumentsLinks';
			END

		SET @MainContentFilter = @MainContentFilter + N'
		) AS HasPermissionsFalse '

		IF @QueryPermissionsPerArticles = 1
		BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT [ArticleID] FROM (
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

					AND na.HasPermissions = 1
					AND ne.Recurring = 0 '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

					AND na.HasPermissions = 1
					AND ne.Recurring = 0 '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					IF @SimpleSearchFindCondition IS NOT NULL
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT ArticleID
						FROM (
							SELECT ArticleID
							FROM (
								SELECT ti.[ArticleID]
								FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
								INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
								WHERE t.' + @sqlSharingPortalAll
								IF @SimpleSearchType = 4
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N'
									UNION
									SELECT di.ArticleID
									FROM {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] AS d
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentItems] AS di ON di.DocumentID = d.DocEntryID
									INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
									WHERE d.' + @sqlSharingPortalAll + N'
										AND d.Visible = 1
									UNION
									SELECT li.ArticleID
									FROM {databaseOwner}[{objectQualifier}EasyDNNNewsLinks] AS l
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsLinkItems] AS li ON li.LinkID = l.LinkID
									INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
									WHERE l.' + @sqlSharingPortalAll
								END
							SET @MainContentFilter = @MainContentFilter + N'
							) AS allSearchFields
							INTERSECT
							SELECT ArticleID
							FROM (
								SELECT na.[ArticleID]
								FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID '

								SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
								AND na.HasPermissions = 1
								AND ne.Recurring = 0 '
								IF @CanEditAllContent = 0
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
									IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
									ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
								END
								IF @DateRangeType = 1
								BEGIN
									IF @ListArchive = 0
										SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
									ELSE
										SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
								END
								ELSE IF @DateRangeType = 2
									SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

								SET @MainContentFilter = @MainContentFilter + N'
								UNION
								SELECT na.[ArticleID]
								FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

								SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'
								AND na.HasPermissions = 1
								AND ne.Recurring = 0 '
								IF @CanEditAllContent = 0
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
								END
								IF @DateRangeType = 1
								BEGIN
									IF @ListArchive = 0
										SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
									ELSE
										SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
								END
								ELSE IF @DateRangeType = 2
									SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

							SET @MainContentFilter = @MainContentFilter + N') AS permissionPerArticle';

						SET @MainContentFilter = @MainContentFilter + N') AS tagsdocumentsLinks';
					END
				
				SET @MainContentFilter = @MainContentFilter + N'
				) AS NotRecurring
				UNION ALL
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
				IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N'
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
					END
				ELSE IF @DateRangeType = 0
					SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
				ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

					AND na.HasPermissions = 1
					AND ne.Recurring = 1 '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					
				SET @MainContentFilter = @MainContentFilter + N' 
					UNION
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

					AND na.HasPermissions = 1
					AND ne.Recurring = 1 '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					END

					IF @SimpleSearchFindCondition IS NOT NULL
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT ArticleID
						FROM (
							SELECT ArticleID
							FROM (
								SELECT ti.[ArticleID]
								FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
								INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
								WHERE t.' + @sqlSharingPortalAll
								IF @SimpleSearchType = 4
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N'
									UNION
									SELECT di.ArticleID
									FROM {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] AS d
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentItems] AS di ON di.DocumentID = d.DocEntryID
									INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
									WHERE d.' + @sqlSharingPortalAll + N'
										AND d.Visible = 1
									UNION
									SELECT li.ArticleID
									FROM {databaseOwner}[{objectQualifier}EasyDNNNewsLinks] AS l
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsLinkItems] AS li ON li.LinkID = l.LinkID
									INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
									WHERE l.' + @sqlSharingPortalAll
								END
							SET @MainContentFilter = @MainContentFilter + N'
							) AS allSearchFields
							INTERSECT
							SELECT ArticleID
							FROM (
								SELECT na.[ArticleID]
								FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
								IF @DateRangeType = 2
									SET @MainContentFilter = @MainContentFilter + N'
									((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
										 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
								ELSE IF @DateRangeType = 1
									BEGIN
										IF @ListArchive = 0
											SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
										ELSE
											SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
									END
								ELSE IF @DateRangeType = 0
									SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
								ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

								SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'

								AND na.HasPermissions = 1
								AND ne.Recurring = 1 '
								IF @CanEditAllContent = 0
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
									IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
									ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
								END

								SET @MainContentFilter = @MainContentFilter + N'
								UNION
								SELECT na.[ArticleID]
								FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
								IF @DateRangeType = 2
									SET @MainContentFilter = @MainContentFilter + N'
									((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
										 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
								ELSE IF @DateRangeType = 1
									BEGIN
										IF @ListArchive = 0
											SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
										ELSE
											SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
									END
								ELSE IF @DateRangeType = 0
									SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
								ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

								SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N'

								AND na.HasPermissions = 1
								AND ne.Recurring = 1 '
								IF @CanEditAllContent = 0
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
								END

							SET @MainContentFilter = @MainContentFilter + N') AS permissionPerArticle';

						SET @MainContentFilter = @MainContentFilter + N') AS tagsdocumentsLinks';
					END

				SET @MainContentFilter = @MainContentFilter + N' 
				) AS Recurring
			) AS HasPermissionsTrue '
		END
	-- treba desti ako se koristi AND operator
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	
	SET @MainContentFilter = @MainContentFilter + N'
	) '
	
	IF @OrderByColumnName = N'CommentedDate'
		SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON nc.ArticleID = inner_all.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1'
	
SET @MainContentFilter = @MainContentFilter + N' 
) '

SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent '

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
	,e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], '
ELSE
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], ';


IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N'0 AS CanEdit, '
ELSE IF @CanEditAllContent = 1
	SET @sqlcommand = @sqlcommand + N'1 AS CanEdit, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE WHEN @HasEditCategories = 0
	THEN 
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	ELSE
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE '
			IF @EditOnlyAsOwner = 1
				SET @sqlcommand = @sqlcommand + N' n.UserID = @UserID AND '

			SET @sqlcommand = @sqlcommand + N' c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	END
	AS CanEdit, '
END

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '
ELSE
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", lc.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.Id
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N' 0 AS Published, 0 AS Approve, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE n.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	END AS Published, '
	IF @UserCanApprove = 0
		SET @sqlcommand = @sqlcommand + N'0 AS Approve, '
	ELSE
		SET @sqlcommand = @sqlcommand + N'
			CASE n.Approved
				WHEN 1 THEN 0
				WHEN 0 THEN n.Active
			END AS Approve, '
END
SET @sqlcommand = @sqlcommand + N' @AllContentCount AS ContentCount '

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N',e_fsd.' + @OrderByColumnName + ',(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END)
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
				,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC'
					SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
END

SET @sqlcommand = @sqlcommand + N' ORDER BY '
	IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'Featured DESC, '
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
		SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#UserEditCategories'') IS NOT NULL
		DROP TABLE #UserEditCategories; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
		DROP TABLE #LocalizedCategories; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '
		
EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRangeType = @DateRangeType
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@StartDate = @StartDate
	,@OuterModuleID = @OuterModuleID
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@FieldsTemplateID = @FieldsTemplateID
	,@SimpleSearchFindCondition = @SimpleSearchFindCondition
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsTreeView' and column_name = 'HtmlTemplate')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsTreeView] ADD HtmlTemplate NVARCHAR(250) CONSTRAINT DF_{objectQualifier}EasyDNNNewsTreeView_HtmlTemplate DEFAULT ('') NOT NULL
	EXEC('
	DECLARE @Theme NVARCHAR(250);
	DECLARE @ThemeStyle NVARCHAR(250);
	DECLARE @HtmlTemplate NVARCHAR(250);
	SET @Theme = N''_default/TreeView/Standard'';
	SET @ThemeStyle = N'''';
	SET @HtmlTemplate = N''TreeViewMenu.html'';

	UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsTreeView] SET [Theme] = @Theme,[ThemeStyle] = @ThemeStyle,[HtmlTemplate] = @HtmlTemplate
	');
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems](
	[RSSID] [int] NOT NULL,
	[FieldsTemplateID] [int] NOT NULL,
	[CustomFieldID] [int] NOT NULL,
	[ControlTypeID] [int] NOT NULL,
	[RSSField] [nvarchar](1000) NOT NULL,
 CONSTRAINT [PK_{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems] PRIMARY KEY CLUSTERED 
(
	[RSSID] ASC,
	[FieldsTemplateID] ASC,
	[CustomFieldID] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems_EasyDNNfields]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems_EasyDNNfields] FOREIGN KEY([CustomFieldID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNfields] ([CustomFieldID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems_EasyDNNfields]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems_EasyDNNfields]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems_EasyDNNfieldsTemplate]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems_EasyDNNfieldsTemplate] FOREIGN KEY([FieldsTemplateID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplate] ([FieldsTemplateID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems_EasyDNNfieldsTemplate]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems_EasyDNNfieldsTemplate]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems_EasyDNNNewsRSSFeedImport]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems_EasyDNNNewsRSSFeedImport] FOREIGN KEY([RSSID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedImport] ([RSSID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems_EasyDNNNewsRSSFeedImport]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsRSSFeedCustomFieldItems_EasyDNNNewsRSSFeedImport]
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_TYPE = 'PRIMARY KEY' AND TABLE_NAME = '{objectQualifier}EasyDNNNewsData' )
BEGIN
	DELETE FROM {databaseOwner}[{objectQualifier}EasyDNNNewsData] WHERE EntryID IS NULL;
	WITH cte AS (
		SELECT EntryID, 
		row_number() OVER(PARTITION BY EntryID ORDER BY EntryID) AS [rn]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsData]
	)
	DELETE cte WHERE [rn] > 1
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsData] ADD EntryIDTemp INT CONSTRAINT DF_{objectQualifier}EasyDNNNewsData_EntryID DEFAULT(0) NOT NULL 
	EXEC('UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsData] SET EntryIDTemp = EntryID')
	EXEC('ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsData] ADD CONSTRAINT [PK_{objectQualifier}EasyDNNNewsData] PRIMARY KEY NONCLUSTERED ([EntryIDTemp] ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)')
	IF EXISTS (SELECT name FROM sys.indexes WHERE name = N'IX_{objectQualifier}EasyDNNNewsData_EntryID')
	BEGIN
		DROP INDEX IX_{objectQualifier}EasyDNNNewsData_EntryID ON {databaseOwner}[{objectQualifier}EasyDNNNewsData];
	END
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsData] DROP COLUMN EntryID
	EXEC sp_rename '{objectQualifier}EasyDNNNewsData.[EntryIDTemp]' , 'EntryID', 'COLUMN'
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'EventRegistrationEnableCaptcha')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD EventRegistrationEnableCaptcha  BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_EventRegistrationEnableCaptcha DEFAULT (0) NOT NULL
END
GO

BEGIN TRY
	IF EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'IncludejQuery')
	BEGIN
		DECLARE @ConstraintName nvarchar(200);
		SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('{objectQualifier}EasyDNNNewsPortalSettings') AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns WHERE NAME = N'IncludejQuery' AND object_id = OBJECT_ID(N'{objectQualifier}EasyDNNNewsPortalSettings'))
		IF @ConstraintName IS NOT NULL
		BEGIN
			EXEC('ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] DROP CONSTRAINT ' + @ConstraintName);
		END
			EXEC('ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] DROP COLUMN [IncludejQuery]');
	END
END TRY
BEGIN CATCH
END CATCH
GO

BEGIN TRY
	IF EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'jQueryNoConflict')
	BEGIN
		DECLARE @ConstraintName nvarchar(200);
		SELECT @ConstraintName = Name FROM SYS.DEFAULT_CONSTRAINTS WHERE PARENT_OBJECT_ID = OBJECT_ID('{objectQualifier}EasyDNNNewsPortalSettings') AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns WHERE NAME = N'jQueryNoConflict' AND object_id = OBJECT_ID(N'{objectQualifier}EasyDNNNewsPortalSettings'))
		IF @ConstraintName IS NOT NULL
		BEGIN
			EXEC('ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] DROP CONSTRAINT ' + @ConstraintName);
		END
			EXEC('ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] DROP COLUMN [jQueryNoConflict]');
	END
END TRY
BEGIN CATCH
END CATCH
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@CurrentArticleID INT,
	@RecurringID INT = NULL,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@DateRange TINYINT = 0,
	@DateRangeType TINYINT = 0,
	@StartDate DATETIME = NULL,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL,
	@eToDate DATETIME = NULL,

	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange SMALLINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@FilterByCustomFields BIT = 0,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@CurrentArticleID INT
	,@RecurringID INT
	,@DateRange TINYINT
	,@DateRangeType TINYINT
	,@StartDate DATETIME
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange SMALLINT
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT';

DECLARE @sqlCommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlCommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END
IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

SET @sqlcommand = @sqlcommand + N' DECLARE @CurrentArticlePosition INT ';

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END
IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN
	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(630)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10) NOT NULL,
		CFWhereRoule NVARCHAR(MAX) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID)
				FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme
				WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);

		SET @CFFilterQuery = N'SELECT CFFilteredArticles.ArticleID FROM (';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			DECLARE @FilterValueMulti NVARCHAR(MAX);
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValueMulti = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N'AND'
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE ' + @FilterValueMulti + '
) AS OnlyWithGoogleMaps
WHERE Recency >= ' + STR(@ElementsCount) + ' '
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueMulti + ' '
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			DECLARE @FilterValueSimple NVARCHAR(630);
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @FilterValueSimple = CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow;

				SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueSimple + ' '

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END

		END

		SET @CFFilterQuery = @CFFilterQuery + N') AS CFFilteredArticles'
	END

	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

DECLARE @MainFilter NVARCHAR(MAX);

SET @MainFilter = N'
CREATE TABLE #AllContent (ArticlePosition INT PRIMARY KEY, ArticleID INT NOT NULL, RecurringID INT NULL, UNIQUE(ArticleID, RecurringID));
INSERT INTO #AllContent'

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @MainFilter = @MainFilter + N'
	SELECT ROW_NUMBER() OVER (ORDER BY '
	IF @FirstOrderBy = 'Featured DESC'
		SET @MainFilter = @MainFilter + N'Featured DESC, '
		
	IF @OrderByDirection = 'ASC'
		SET @MainFilter = @MainFilter + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	
	SET @MainFilter = @MainFilter + @CleanOrderColumnWithDirection + N', ArticleID) AS ArticlePosition,ArticleID,RecurringID '
END
ELSE
BEGIN
	SET @MainFilter = @MainFilter + N'
	SELECT ROW_NUMBER() OVER (ORDER BY '
	IF @FirstOrderBy = 'Featured DESC'
		SET @MainFilter = @MainFilter + N'Featured DESC, '
	SET @MainFilter = @MainFilter + @OrderByColumnName + N' ' + @OrderByDirection + N', ArticleID) AS ArticlePosition,ArticleID,RecurringID '
END

	SET @MainFilter = @MainFilter + N'
	FROM (
		SELECT n.ArticleID,
			CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
			CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
			n.Title,n.NumberOfViews,n.RatingValue,n.DateAdded,n.PublishDate,n.ExpireDate,n.LastModified,n.NumberOfComments,n.Featured '
		
		IF @OrderByCustomFieldID IS NOT NULL
			SET @MainFilter = @MainFilter + N',fv.' + @OrderByColumnName
		
		SET @MainFilter = @MainFilter + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND '
		IF @DateRangeType = 2
			SET @MainFilter = @MainFilter + N'
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				 OR (nerd.RecurringID IN (SELECT TOP(ned.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
		ELSE IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
				ELSE
					SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
			END
		ELSE IF @DateRangeType = 0
			SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(ned.UpcomingOccurrences) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
		ELSE
			SET @MainFilter = @MainFilter + N' 1 = 0'
		
		IF @OrderByCustomFieldID IS NOT NULL
		BEGIN
			SET @MainFilter = @MainFilter + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID '
		END
		
		SET @MainFilter = @MainFilter + N'
			WHERE n.ArticleID IN( '
		
		IF @FilterByCustomFields = 1
			SET @MainFilter = @MainFilter + N' SELECT ArticleID FROM ('
		
		SET @MainFilter = @MainFilter + N'
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) '

				IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @FilterByDNNGroupID <> 0 
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
				ELSE IF @FilterByDNNUserID <> 0
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

				IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
				IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
				
				SET @MainFilter = @MainFilter + N'
				WHERE na.EventArticle = 0
					AND ' + @sqlSharingPortal
					
					IF @QueryPermissionsPerArticles = 1 SET @MainFilter = @MainFilter + N' AND na.HasPermissions = 0 '

					IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL
							SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
						ELSE
							SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL
						SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					ELSE
						SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
					IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
					IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
					ELSE IF @sqlAuthors IS NOT NULL
						SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
	
					IF @QueryModulePermissions = 0
						SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 '
					ELSE IF @CanEditAllContent = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END
					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
				SET @MainFilter = @MainFilter + N'
				UNION ALL
				SELECT DISTINCT na.[ArticleID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
				
				IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @FilterByDNNGroupID <> 0 
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
				ELSE IF @FilterByDNNUserID <> 0
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

				IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
				IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
				
				SET @MainFilter = @MainFilter + N'
				WHERE ne.Recurring = 0
					AND na.EventArticle = 1

					AND ' + @sqlSharingPortal

					IF @QueryPermissionsPerArticles = 1 SET @MainFilter = @MainFilter + N' AND na.HasPermissions = 0 '

					IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL
							SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
						ELSE
							SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL
						SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					ELSE
						SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
					IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
					IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
					ELSE IF @sqlAuthors IS NOT NULL
						SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

					IF @QueryModulePermissions = 0
						SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 '
					ELSE IF @CanEditAllContent = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @MainFilter = @MainFilter + N'
				UNION ALL
				SELECT DISTINCT na.[ArticleID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND '
				IF @DateRangeType = 2
					SET @MainFilter = @MainFilter + N'
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
						ELSE
							SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
					END
				ELSE IF @DateRangeType = 0
					SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
				ELSE SET @MainFilter = @MainFilter + N' 1 = 0 '
						
				IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @FilterByDNNGroupID <> 0 
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
				ELSE IF @FilterByDNNUserID <> 0
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

				IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
				IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
					
				SET @MainFilter = @MainFilter + N'
				WHERE na.EventArticle = 1
					AND ne.Recurring = 1
					AND ' + @sqlSharingPortal

					IF @QueryPermissionsPerArticles = 1 SET @MainFilter = @MainFilter + N' AND na.HasPermissions = 0 '

					IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL
							SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
						ELSE
							SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL
						SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					ELSE
						SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
					IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
					IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
					ELSE IF @sqlAuthors IS NOT NULL
						SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
					
					IF @QueryModulePermissions = 0
						SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 '
					ELSE IF @CanEditAllContent = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END

				SET @MainFilter = @MainFilter + N') AS NoPermissionsPerArticle '

				IF @QueryPermissionsPerArticles = 1
				BEGIN
					SET @MainFilter = @MainFilter + N'
					UNION ALL
					SELECT [ArticleID] FROM (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

						IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByDNNGroupID <> 0 
							SET @MainFilter = @MainFilter + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @MainFilter = @MainFilter + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

						IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
						IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
				
						SET @MainFilter = @MainFilter + N'
						WHERE na.HasPermissions = 1
							AND na.EventArticle = 0
					
							AND ' + @sqlSharingPortal
					
							IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
							BEGIN
								IF @RestrictionByDateRange IS NOT NULL
									SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
								ELSE
									SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
							END
							ELSE IF @RestrictionByDateRange IS NOT NULL
								SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
							ELSE
								SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
							IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
							IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
							IF @FilterByDNNUserID <> 0
								SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
							ELSE IF @sqlAuthors IS NOT NULL
								SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

							IF @QueryModulePermissions = 0
							BEGIN
								SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND aup.Show = 1 '
								IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
								ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
							END
							ELSE IF @CanEditAllContent = 0
							BEGIN
								SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 '
								IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
								IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
								ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
							END
							IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
						SET @MainFilter = @MainFilter + N'
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

						IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByDNNGroupID <> 0 
							SET @MainFilter = @MainFilter + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @MainFilter = @MainFilter + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

						IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
						IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
								
						SET @MainFilter = @MainFilter + N'
						WHERE na.HasPermissions = 1
							AND na.EventArticle = 1
							AND ne.Recurring = 0
					
							AND ' + @sqlSharingPortal
					
							IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
							BEGIN
								IF @RestrictionByDateRange IS NOT NULL
									SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
								ELSE
									SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
							END
							ELSE IF @RestrictionByDateRange IS NOT NULL
								SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
							ELSE
								SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
							IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
							IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
							IF @FilterByDNNUserID <> 0
								SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
							ELSE IF @sqlAuthors IS NOT NULL
								SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

							IF @QueryModulePermissions = 0
							BEGIN
								SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND aup.Show = 1 '
								IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
								ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
							END
							ELSE IF @CanEditAllContent = 0
							BEGIN
								SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 '
								IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
								IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
								ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
							END
							IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
								ELSE
									SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
							END
							ELSE IF @DateRangeType = 2
								SET @MainFilter = @MainFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
							SET @MainFilter = @MainFilter + N'
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @MainFilter = @MainFilter + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
								ELSE
									SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
							END
						ELSE IF @DateRangeType = 0
							SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @MainFilter = @MainFilter + N' 1 = 0 '
					
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

						IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByDNNGroupID <> 0 
							SET @MainFilter = @MainFilter + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @MainFilter = @MainFilter + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

						IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
						IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
								
						SET @MainFilter = @MainFilter + N'
						WHERE na.HasPermissions = 1
							AND na.EventArticle = 1
							AND ne.Recurring = 1
					
							AND ' + @sqlSharingPortal
					
							IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
							BEGIN
								IF @RestrictionByDateRange IS NOT NULL
									SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
								ELSE
									SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
							END
							ELSE IF @RestrictionByDateRange IS NOT NULL
								SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
							ELSE
								SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
							IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
							IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
							IF @FilterByDNNUserID <> 0
								SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
							ELSE IF @sqlAuthors IS NOT NULL
								SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

							IF @QueryModulePermissions = 0
							BEGIN
								SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND aup.Show = 1 '
								IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
								ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
							END
							ELSE IF @CanEditAllContent = 0
							BEGIN
								SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 '
								IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
								IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
								ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
							END
							SET @MainFilter = @MainFilter + N'
					) AS WithNoRolePermissions
				UNION
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
				
					SET @MainFilter = @MainFilter + N'
					 
					WHERE na.HasPermissions = 1
						AND na.EventArticle = 0
					
						AND ' + @sqlSharingPortal
					
						IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
						BEGIN
							IF @RestrictionByDateRange IS NOT NULL
								SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
							ELSE
								SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
						END
						ELSE IF @RestrictionByDateRange IS NOT NULL
							SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
						ELSE 
							SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
						IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
						IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
						IF @FilterByDNNUserID <> 0
							SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
						ELSE IF @sqlAuthors IS NOT NULL
							SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
					
					IF @QueryModulePermissions = 0
						SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)'
					ELSE IF @CanEditAllContent = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END
					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
					SET @MainFilter = @MainFilter + N'
					UNION ALL
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
				
					SET @MainFilter = @MainFilter + N'
					WHERE na.HasPermissions = 1
						AND na.EventArticle = 1
						AND ne.Recurring = 0
					
						AND ' + @sqlSharingPortal
					
						IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
						BEGIN
							IF @RestrictionByDateRange IS NOT NULL
								SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
							ELSE
								SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
						END
						ELSE IF @RestrictionByDateRange IS NOT NULL
							SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
						ELSE
							SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
						IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
						IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
						IF @FilterByDNNUserID <> 0
							SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
						ELSE IF @sqlAuthors IS NOT NULL
							SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

						IF @QueryModulePermissions = 0
							SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)'
						ELSE IF @CanEditAllContent = 0
						BEGIN
							SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
							IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
						END
						IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
								ELSE
									SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
							END
							ELSE IF @DateRangeType = 2
								SET @MainFilter = @MainFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
							SET @MainFilter = @MainFilter + N'
					UNION All
					SELECT na.[ArticleID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainFilter = @MainFilter + N' 1 = 0 '
					
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
					
					SET @MainFilter = @MainFilter + N'
					WHERE na.HasPermissions = 1
						AND na.EventArticle = 1
						AND ne.Recurring = 1
					
						AND ' + @sqlSharingPortal
					
						IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
						BEGIN
							IF @RestrictionByDateRange IS NOT NULL
								SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
							ELSE
								SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
						END
						ELSE IF @RestrictionByDateRange IS NOT NULL
							SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
						ELSE
							SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
						IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
						IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
						IF @FilterByDNNUserID <> 0
							SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
						ELSE IF @sqlAuthors IS NOT NULL
							SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

						IF @QueryModulePermissions = 0
							SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)'
						ELSE IF @CanEditAllContent = 0
						BEGIN
							SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
							IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
						END
						SET @MainFilter = @MainFilter + N'
				) AS ByRolePermissions '
			END

			IF @FilterByCustomFields = 1
				SET @MainFilter = @MainFilter + N') AllBeforeFilters INTERSECT ' + @CFFilterQuery
	
		SET @MainFilter = @MainFilter + N'
		)
	) AS AllArticles ';

DECLARE @MainCondition NVARCHAR(500);
IF @RecurringID IS NULL
	SET @sqlcommand = @sqlcommand + @MainFilter +N' SELECT @CurrentArticlePosition = ArticlePosition FROM #AllContent WHERE ArticleID = @CurrentArticleID; '
ELSE
	SET @sqlcommand = @sqlcommand + @MainFilter +N' SELECT @CurrentArticlePosition = ArticlePosition FROM #AllContent WHERE ArticleID = @CurrentArticleID AND RecurringID = @RecurringID; '

IF @LocaleCode IS NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	SELECT TOP (3) n.[ArticleID],n.[PortalID],apn.RecurringID,n.[Title],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN #AllContent AS apn ON n.ArticleID = apn.ArticleID
	WHERE apn.ArticlePosition BETWEEN @CurrentArticlePosition - 1 AND @CurrentArticlePosition + 1
	ORDER BY apn.ArticlePosition '
END
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	SELECT TOP (3) n.[ArticleID],n.[PortalID],apn.RecurringID,
		CASE WHEN ncl.ArticleID IS NULL THEN n.[Title] ELSE ncl.[Title] END AS Title,
		CASE WHEN ncl.ArticleID IS NULL THEN n.[TitleLink] ELSE ncl.[clTitleLink] END AS TitleLink,
		n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN #AllContent AS apn ON n.ArticleID = apn.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = apn.ArticleID AND ncl.LocaleCode = @LocaleCode
	WHERE apn.ArticlePosition BETWEEN @CurrentArticlePosition - 1 AND @CurrentArticlePosition + 1
	ORDER BY apn.ArticlePosition '
END

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories;
IF OBJECT_ID(''tempdb..#AllContent'') IS NOT NULL
	DROP TABLE #AllContent; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@CurrentArticleID = @CurrentArticleID
	,@RecurringID = @RecurringID
	,@DateRange = @DateRange
	,@DateRangeType = @DateRangeType
	,@StartDate = @StartDate
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@CurrentArticleID INT,
	@RecurringID INT = NULL,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@DateRangeType TINYINT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,

	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 0,
	@FillterSettingsSource BIT = 0,
	@StartDate DATETIME = NULL,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange SMALLINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@FilterByCustomFields BIT = 0,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@CurrentArticleID INT
	,@RecurringID INT
	,@DateRangeType TINYINT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@StartDate DATETIME
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange SMALLINT
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT';

DECLARE @sqlCommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlCommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END
IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM {databaseOwner}[{objectQualifier}Roles] AS r
		INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

SET @sqlcommand = @sqlcommand + N' DECLARE @CurrentArticlePosition INT ';

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END
IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN
	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(630)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10) NOT NULL,
		CFWhereRoule NVARCHAR(MAX) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID)
				FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme
				WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);

		SET @CFFilterQuery = N'SELECT CFFilteredArticles.ArticleID FROM (';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			DECLARE @FilterValueMulti NVARCHAR(MAX);
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValueMulti = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N'AND'
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE ' + @FilterValueMulti + '
) AS OnlyWithGoogleMaps
WHERE Recency >= ' + STR(@ElementsCount) + ' '
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueMulti + ' '
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			DECLARE @FilterValueSimple NVARCHAR(630);
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @FilterValueSimple = CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow;

				SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueSimple + ' '

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END

		END

		SET @CFFilterQuery = @CFFilterQuery + N') AS CFFilteredArticles'
	END

	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

DECLARE @MainFilter NVARCHAR(MAX);

SET @MainFilter = N'
CREATE TABLE #MainFilters (ArticleID INT PRIMARY KEY);
CREATE TABLE #AllContent (ArticlePosition INT PRIMARY KEY, ArticleID INT NOT NULL, RecurringID INT NULL, UNIQUE(ArticleID, RecurringID));

INSERT INTO #MainFilters
	SELECT DISTINCT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

	IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	IF @FilterByDNNGroupID <> 0 
		SET @MainFilter = @MainFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDNNUserID <> 0
		SET @MainFilter = @MainFilter + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

	IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
	IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
	SET @MainFilter = @MainFilter + N'
	WHERE ' + @sqlSharingPortal + N'
		AND na.EventArticle = 1 '
		IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
		BEGIN
			IF @RestrictionByDateRange IS NOT NULL
				SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
			ELSE
				SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '
		END
		ELSE IF @RestrictionByDateRange IS NOT NULL
			SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		ELSE
			SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
		IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
		IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
		IF @FilterByDNNUserID <> 0
			SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
		ELSE IF @sqlAuthors IS NOT NULL
			SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

	SET @MainFilter = @MainFilter + N'

INSERT INTO #AllContent'

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @MainFilter = @MainFilter + N'
	SELECT ROW_NUMBER() OVER (ORDER BY '
	IF @FirstOrderBy = 'Featured DESC'
		SET @MainFilter = @MainFilter + N'Featured DESC, '
		
	IF @OrderByDirection = 'ASC'
		SET @MainFilter = @MainFilter + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	
	SET @MainFilter = @MainFilter + @CleanOrderColumnWithDirection + N', ArticleID) AS ArticlePosition,ArticleID,RecurringID '
END
ELSE
BEGIN
	SET @MainFilter = @MainFilter + N'
	SELECT ROW_NUMBER() OVER (ORDER BY '
	IF @FirstOrderBy = 'Featured DESC' SET @MainFilter = @MainFilter + N'Featured DESC, '

	SET @MainFilter = @MainFilter + @OrderByColumnName + N' ' + @OrderByDirection + N', ArticleID) AS ArticlePosition,ArticleID,RecurringID '
END
	
	SET @MainFilter = @MainFilter + N'
	FROM (
		SELECT n.ArticleID,
			CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate,
			CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
			n.Title,n.NumberOfViews,n.RatingValue,n.DateAdded,n.PublishDate,n.ExpireDate,n.LastModified,n.NumberOfComments,n.Featured '
		
		IF @OrderByCustomFieldID IS NOT NULL
			SET @MainFilter = @MainFilter + N',fv.' + @OrderByColumnName
		
		SET @MainFilter = @MainFilter + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
		IF @DateRangeType = 2
			SET @MainFilter = @MainFilter + N'
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
		ELSE IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
				ELSE
					SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
			END
		ELSE IF @DateRangeType = 0
			SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
		ELSE
			SET @MainFilter = @MainFilter + N' 1 = 0'
		
		IF @OrderByCustomFieldID IS NOT NULL
		BEGIN
			SET @MainFilter = @MainFilter + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID'
		END
		
		SET @MainFilter = @MainFilter + N'
			WHERE n.ArticleID IN( '
		
		IF @FilterByCustomFields = 1
			SET @MainFilter = @MainFilter + N' SELECT ArticleID FROM ('
		
		SET @MainFilter = @MainFilter + N'
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
				WHERE na.ArticleID IN (SELECT ArticleID FROM #MainFilters)
					AND ne.Recurring = 0 '

					IF @QueryPermissionsPerArticles = 1 SET @MainFilter = @MainFilter + N' AND na.HasPermissions = 0 '

					IF @QueryModulePermissions = 0
						SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 '
					ELSE IF @CanEditAllContent = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END

					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @MainFilter = @MainFilter + N'
				UNION ALL
				SELECT DISTINCT na.[ArticleID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
				IF @DateRangeType = 2
					SET @MainFilter = @MainFilter + N'
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
				ELSE IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
					ELSE
						SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
				END
				ELSE IF @DateRangeType = 0
					SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
				ELSE SET @MainFilter = @MainFilter + N' 1 = 0 '
				SET @MainFilter = @MainFilter + N'
				WHERE na.ArticleID IN (SELECT ArticleID FROM #MainFilters)
					AND ne.Recurring = 1 '

					IF @QueryPermissionsPerArticles = 1 SET @MainFilter = @MainFilter + N' AND na.HasPermissions = 0 '

					IF @QueryModulePermissions = 0
						SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 '
					ELSE IF @CanEditAllContent = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END

				SET @MainFilter = @MainFilter + N'
			) AS HasPermissionsFalse '

			IF @QueryPermissionsPerArticles = 1
			BEGIN
				SET @MainFilter = @MainFilter + N'
				UNION ALL
				SELECT [ArticleID] FROM (
					SELECT [ArticleID] FROM (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
						WHERE na.HasPermissions = 1
							AND na.ArticleID IN (SELECT ArticleID FROM #MainFilters)
							AND ne.Recurring = 0 '

						IF @QueryModulePermissions = 0
						BEGIN
							SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND aup.Show = 1 '
							IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
							ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
						END
						ELSE IF @CanEditAllContent = 0
						BEGIN
							SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 '
							IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
							IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
							ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
						END
						IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
							ELSE
								SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
						END
						ELSE IF @DateRangeType = 2
							SET @MainFilter = @MainFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
						SET @MainFilter = @MainFilter + N'
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0	
						WHERE na.HasPermissions = 1
							AND na.ArticleID IN (SELECT ArticleID FROM #MainFilters)
							AND ne.Recurring = 0 '

						IF @QueryModulePermissions = 0
							SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)'
						ELSE IF @CanEditAllContent = 0
						BEGIN
							SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
							IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
						END
						IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
							ELSE
								SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
						END
						ELSE IF @DateRangeType = 2
							SET @MainFilter = @MainFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
						SET @MainFilter = @MainFilter + N'
					) AS NotRecurring
					UNION ALL
					SELECT [ArticleID] FROM (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @MainFilter = @MainFilter + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
						ELSE IF @DateRangeType = 0
							SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @MainFilter = @MainFilter + N' 1 = 0 '
						SET @MainFilter = @MainFilter + N'
						WHERE na.HasPermissions = 1
							AND na.ArticleID IN (SELECT ArticleID FROM #MainFilters)
							AND ne.Recurring = 1 '

						IF @QueryModulePermissions = 0
						BEGIN
							SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND aup.Show = 1 '
							IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
							ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
						END
						ELSE IF @CanEditAllContent = 0
						BEGIN
							SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 '
							IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
							IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
							ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
						END
						SET @MainFilter = @MainFilter + N' 
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @MainFilter = @MainFilter + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
						ELSE IF @DateRangeType = 0
							SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @MainFilter = @MainFilter + N' 1 = 0 '
						SET @MainFilter = @MainFilter + N'
						WHERE na.HasPermissions = 1
							AND na.ArticleID IN (SELECT ArticleID FROM #MainFilters)
							AND ne.Recurring = 1 '
						IF @QueryModulePermissions = 0
							SET @MainFilter = @MainFilter + N' AND na.Approved = 1 AND na.Active = 1 AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)'
						ELSE IF @CanEditAllContent = 0
						BEGIN
							SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
							IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
						END
						SET @MainFilter = @MainFilter + N' 
					) AS Recurring
				) AS HasPermissionsTrue '
			END

			IF @FilterByCustomFields = 1
				SET @MainFilter = @MainFilter + N') AllBeforeFilters INTERSECT ' + @CFFilterQuery
		
		SET @MainFilter = @MainFilter + N'
		)
	) AS AllArticles ';

DECLARE @MainCondition NVARCHAR(500);
IF @RecurringID IS NULL
	SET @sqlcommand = @sqlcommand + @MainFilter +N' SELECT @CurrentArticlePosition = ArticlePosition FROM #AllContent WHERE ArticleID = @CurrentArticleID; '
ELSE
	SET @sqlcommand = @sqlcommand + @MainFilter +N' SELECT @CurrentArticlePosition = ArticlePosition FROM #AllContent WHERE ArticleID = @CurrentArticleID AND RecurringID = @RecurringID; '

IF @LocaleCode IS NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	SELECT TOP (3) n.[ArticleID],n.[PortalID],apn.RecurringID,n.[Title],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN #AllContent AS apn ON n.ArticleID = apn.ArticleID
	WHERE apn.ArticlePosition BETWEEN @CurrentArticlePosition - 1 AND @CurrentArticlePosition + 1
	ORDER BY apn.ArticlePosition '
END
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	SELECT TOP (3) n.[ArticleID],n.[PortalID],apn.RecurringID,
		CASE WHEN ncl.ArticleID IS NULL THEN n.[Title] ELSE ncl.[Title] END AS Title,
		CASE WHEN ncl.ArticleID IS NULL THEN n.[TitleLink] ELSE ncl.[clTitleLink] END AS TitleLink,
		n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN #AllContent AS apn ON n.ArticleID = apn.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = apn.ArticleID AND ncl.LocaleCode = @LocaleCode
	WHERE apn.ArticlePosition BETWEEN @CurrentArticlePosition - 1 AND @CurrentArticlePosition + 1
	ORDER BY apn.ArticlePosition '
END

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories;
IF OBJECT_ID(''tempdb..#AllContent'') IS NOT NULL
	DROP TABLE #AllContent;
IF OBJECT_ID(''tempdb..#MainFilters'') IS NOT NULL
	DROP TABLE #MainFilters; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@CurrentArticleID = @CurrentArticleID
	,@RecurringID = @RecurringID
	,@DateRangeType = @DateRangeType
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@StartDate = @StartDate
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
GO
