SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModuleMappings]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleMappings](
	[PortalID] [int] NOT NULL,
	[oldID] [int] NOT NULL,
	[newID] [int] NOT NULL,
 CONSTRAINT [PK_{objectQualifier}EasyDNNNewsModuleMappings] PRIMARY KEY CLUSTERED ([PortalID] ASC,[oldID] ASC )WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsModuleMappings_Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModuleMappings]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleMappings]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsModuleMappings_Modules] FOREIGN KEY([newID])
REFERENCES {databaseOwner}[{objectQualifier}Modules] ([ModuleID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsModuleMappings_Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModuleMappings]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleMappings] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsModuleMappings_Modules]
GO