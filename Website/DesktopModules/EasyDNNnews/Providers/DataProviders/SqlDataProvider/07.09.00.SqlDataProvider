IF NOT EXISTS (SELECT UpdateVersion FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUpdate] WHERE UpdateVersion = '07.09.00')
BEGIN
	INSERT {databaseOwner}[{objectQualifier}EasyDNNNewsUpdate]([UpdateVersion],[Finished],[InstallType]) VALUES(N'07.09.00',0, N'DNN')
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'ListCommentsTemplate')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD ListCommentsTemplate  NVARCHAR(250) NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'ListCommentsTemplate')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD ListCommentsTemplate NVARCHAR(250) NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'OpenArticleLinkInListMode')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD OpenArticleLinkInListMode  BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_OpenArticleLinkInListMode DEFAULT (0) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'OpenArticleLinkInListMode')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD OpenArticleLinkInListMode  BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_OpenArticleLinkInListMode DEFAULT (0) NOT NULL
END
GO
BEGIN TRY
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.columns WHERE table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'FilterRelatedArticlesBy')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD FilterRelatedArticlesBy TINYINT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_FilterRelatedArticlesBy DEFAULT (1) NOT NULL
	EXEC ('UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] SET [FilterRelatedArticlesBy] = 2 WHERE FilterRelatedArticlesByCategory = 1');
	EXEC('ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] DROP COLUMN [FilterRelatedArticlesByCategory]');
END
END TRY
BEGIN CATCH
END CATCH
GO

BEGIN TRY
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.columns WHERE table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'FilterRelatedArticlesBy')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD FilterRelatedArticlesBy TINYINT CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_FilterRelatedArticlesBy DEFAULT (1) NOT NULL
	EXEC ('UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] SET [FilterRelatedArticlesBy] = 2 WHERE FilterRelatedArticlesByCategory = 1');
	EXEC('ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] DROP COLUMN [FilterRelatedArticlesByCategory]');
END
END TRY
BEGIN CATCH
END CATCH
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetRelatedArticlesByArticleTags]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetRelatedArticlesByArticleTags]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetRelatedArticlesByArticleTags]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetRelatedArticlesByArticleTags] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetRelatedArticlesByArticleTags]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@ArticleID INT,
	@NumberOfItems INT = 5,
	@OrderBy NVARCHAR(30) = 'PublishDate DESC',
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@CategoryFilterType TINYINT = 1,
	@HideUnlocalizedItems BIT = 0,
	@FilterRelatedArticlesBy TINYINT = 0
AS
SET NOCOUNT ON;
IF EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems]
WHERE ArticleID <> @ArticleID AND TagID IN (SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @ArticleID))
BEGIN
	DECLARE @CurrentDate DATETIME;
	SET @CurrentDate = GETUTCDATE();

	DECLARE @UserInRoles TABLE (RoleID INT NOT NULL PRIMARY KEY);
	IF @UserID <> -1
	INSERT INTO @UserInRoles
	SELECT DISTINCT r.[RoleID]
	FROM {databaseOwner}[{objectQualifier}Roles] AS r
	INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
	WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

	DECLARE @UserViewCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY);
	DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT NOT NULL PRIMARY KEY);
	DECLARE @FiltredByCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY);

	IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
	BEGIN
		INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @UserID = -1
	BEGIN	
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
			WHERE rpsc.PremissionSettingsID IN (SELECT PremissionSettingsID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE PortalID = @PortalID AND ModuleID IS NULL AND RoleID IS NULL);
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] = @ModuleID AND [RoleID] IS NULL);
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND RoleID IN (SELECT [RoleID] FROM @UserInRoles))
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] IS NULL)
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [ModuleID] = @ModuleID AND RoleID IN (SELECT [RoleID] FROM @UserInRoles))
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] = @ModuleID)
		END
	END

	IF @FilterRelatedArticlesBy = 1
	BEGIN
		IF @CategoryFilterType = 0 -- 0 All categories
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		BEGIN
			IF @FillterSettingsSource = 1 -- portal
			BEGIN
				INSERT INTO @UserViewCategoriesWithFilter 
				SELECT c.[CategoryID] FROM @UserViewCategories AS c
				WHERE c.[CategoryID] IN (SELECT pci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci WHERE pci.PortalID = @PortalID);		
				INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID;
			END
			ELSE -- module
			BEGIN
				INSERT INTO @UserViewCategoriesWithFilter 
				SELECT c.[CategoryID] FROM @UserViewCategories AS c
				WHERE c.[CategoryID] IN (SELECT mci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci WHERE mci.ModuleID = @ModuleID);		
				INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID;
			END
		END
		ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		BEGIN
			IF @FillterSettingsSource = 1 -- portal
			BEGIN
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO @UserViewCategoriesWithFilter SELECT CategoryID FROM @UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM @FiltredByCategories);		
			END
			ELSE -- module
			BEGIN
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;
				INSERT INTO @UserViewCategoriesWithFilter SELECT CategoryID FROM @UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM @FiltredByCategories);
			END
		END
	END
	ELSE IF @FilterRelatedArticlesBy = 2
	BEGIN
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] WHERE ArticleID = @ArticleID;
		
		INSERT INTO @UserViewCategoriesWithFilter
		SELECT c.[CategoryID] FROM @UserViewCategories AS c
		WHERE c.[CategoryID] IN (SELECT CategoryID FROM @FiltredByCategories);
		
	END
	ELSE
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END

DECLARE @DateRangeType TINYINT;
DECLARE @StartDate DATETIME;

	IF @LocaleCode IS NULL
	BEGIN
		SELECT TOP (@NumberOfItems) n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[PublishDate],n.[TitleLink],n.[AuthorAliasName],n.[DetailType],n.[DetailTypeData],n.[CFGroupeID],
		n.[EventArticle],
		CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
		CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
		CASE WHEN @CategoryFilterType = 0 THEN NULL
		ELSE
			CASE WHEN @FillterSettingsSource = 1 THEN
			 (SELECT TOP 1 CONVERT(varchar(10), clink.NewsModuleID) + ':' + CONVERT(varchar(10), tm.[TabID])
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as c
				INNER JOIN @UserViewCategories AS uvc ON c.CategoryID = uvc.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] as cl ON c.CategoryID = cl.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryLink] as clink ON clink.CategoryID = cl.CategoryID AND clink.SourcePortalID = @PortalID
				INNER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON clink.NewsModuleID = tm.ModuleID
				WHERE c.ArticleID = n.[ArticleID] AND cl.PortalID = @PortalID ORDER BY cl.Position)
			ELSE
			(SELECT TOP 1 CONVERT(varchar(10), clink.NewsModuleID) + ':' + CONVERT(varchar(10), tm.[TabID]) AS WhereToOpen
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as c
				INNER JOIN @UserViewCategories AS uvc ON c.CategoryID = uvc.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] as cl ON c.CategoryID = cl.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] as clink ON clink.CategoryID = cl.CategoryID AND clink.SourceModuleID = @ModuleID
				INNER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON clink.NewsModuleID = tm.ModuleID
				WHERE c.ArticleID = n.[ArticleID] AND cl.PortalID = @PortalID ORDER BY cl.Position)
			END		
		END AS WhereToOpenLink
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND 1 = ( 
		CASE WHEN @DateRangeType = 2
		THEN
			CASE WHEN 
				((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
			THEN 1 ELSE 0 END
		ELSE
			CASE WHEN
				(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime))
			THEN 1 ELSE 0 END
		END )
	WHERE n.ArticleID IN(
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @UserViewCategoriesWithFilter)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID AND (ti.TagID IN (SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @ArticleID))		
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
				AND na.ArticleID <> @ArticleID
				AND (@UserCanApprove = 1 OR na.Approved = 1)
				AND (na.Active = 1 OR na.UserID = @UserID)	
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @FiltredByCategories)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID AND (ti.TagID IN (SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @ArticleID))		
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
				AND na.ArticleID <> @ArticleID
				AND aup.Show = 1
				AND (@UserCanApprove = 1 OR na.Approved = 1)
				AND (na.Active = 1 OR na.UserID = @UserID)
				AND ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @FiltredByCategories)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID AND (ti.TagID IN (SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @ArticleID))		
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
				AND na.ArticleID <> @ArticleID
				AND arp.Show = 1
				AND (@UserCanApprove = 1 OR na.Approved = 1)
				AND (na.Active = 1 OR na.UserID = @UserID)
				AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
			)
		ORDER BY
			CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
			CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC;
	END
	ELSE
	BEGIN
		;WITH FinalArticleIDsSet (ArticleID, StartDate, RecurringID) AS(
		SELECT TOP (@NumberOfItems) n.[ArticleID],
		CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
		CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND 1 = ( 
		CASE WHEN @DateRangeType = 2
		THEN
			CASE WHEN 
				((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
			THEN 1 ELSE 0 END
		ELSE
			CASE WHEN
				(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime))
			THEN 1 ELSE 0 END
		END )
		WHERE n.ArticleID IN(
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @UserViewCategoriesWithFilter)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID AND (ti.TagID IN (SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @ArticleID))		
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
				AND na.ArticleID <> @ArticleID
				AND (@UserCanApprove = 1 OR na.Approved = 1)
				AND (na.Active = 1 OR na.UserID = @UserID)
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @FiltredByCategories)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID AND (ti.TagID IN (SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @ArticleID))		
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
				AND na.ArticleID <> @ArticleID
				AND aup.Show = 1
				AND (@UserCanApprove = 1 OR na.Approved = 1)
				AND (na.Active = 1 OR na.UserID=@UserID)
				AND ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @FiltredByCategories)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID AND (ti.TagID IN (SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @ArticleID))		
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
				AND na.ArticleID <> @ArticleID
				AND arp.Show = 1
				AND (@UserCanApprove = 1 OR na.Approved = 1)
				AND (na.Active = 1 OR na.UserID=@UserID)
				AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
			)
		ORDER BY
			CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
			CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC
	)
	SELECT *,
		CASE WHEN @CategoryFilterType = 0 THEN NULL
		ELSE
			CASE WHEN @FillterSettingsSource = 1 THEN
			 (SELECT TOP 1 CONVERT(varchar(10), clink.NewsModuleID) + ':' + CONVERT(varchar(10), tm.[TabID])
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as c
				INNER JOIN @UserViewCategories AS uvc ON c.CategoryID = uvc.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] as cl ON c.CategoryID = cl.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryLink] as clink ON clink.CategoryID = cl.CategoryID AND clink.SourcePortalID = @PortalID
				INNER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON clink.NewsModuleID = tm.ModuleID
				WHERE c.ArticleID = Result.[ArticleID] AND cl.PortalID = @PortalID ORDER BY cl.Position)
			ELSE
			(SELECT TOP 1 CONVERT(varchar(10), clink.NewsModuleID) + ':' + CONVERT(varchar(10), tm.[TabID]) AS WhereToOpen
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as c
				INNER JOIN @UserViewCategories AS uvc ON c.CategoryID = uvc.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] as cl ON c.CategoryID = cl.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] as clink ON clink.CategoryID = cl.CategoryID AND clink.SourceModuleID = @ModuleID
				INNER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON clink.NewsModuleID = tm.ModuleID
				WHERE c.ArticleID = Result.[ArticleID] AND cl.PortalID = @PortalID ORDER BY cl.Position)
			END		
		END AS WhereToOpenLink
		FROM (
			SELECT n.[ArticleID],n.[PortalID],n.[UserID],	
				CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title,
				CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle,
				CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary,
				CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article,
				n.[ArticleImage],n.[PublishDate],		
				CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink,
				n.[NumberOfViews],n.[AuthorAliasName],n.[DetailType],n.[DetailTypeData],n.[CFGroupeID],
				n.[EventArticle],fas.[RecurringID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN FinalArticleIDsSet AS fas ON n.ArticleID = fas.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON cl.ArticleID = n.ArticleID AND LocaleCode = @LocaleCode 
			) As Result
		ORDER BY
			CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
			CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC
	END
END

GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsViewCategories]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsViewCategories]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsViewCategories]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsViewCategories] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsViewCategories]
	@PortalID INT,
	@PermissionsModuleID INT,
	@UserID INT,
	@AdminOrSuperUser BIT,
	@PermissionSettingsSource BIT,
	@IsPortalSharing BIT,
	@ViewAllCategores BIT = NULL 
AS
SET NOCOUNT ON;

DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF @IsPortalSharing = 1
BEGIN
	IF @AdminOrSuperUser = 1 OR @ViewAllCategores = 1 OR @ViewAllCategores IS NULL
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT PortalID FROM #SharingPortals);
	ELSE IF @UserID = -1
	BEGIN	
		IF @ViewAllCategores IS NULL AND EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
			WHERE PortalID IN (SELECT PortalID FROM #SharingPortals);
		ELSE
			SELECT rpsc.[CategoryID]
			FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 			
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.ModuleID = @PermissionsModuleID
					AND rps.RoleID IS NULL);
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @ViewAllCategores IS NULL AND (
			EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
				WHERE rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1
			) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1
			)
		)
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
			WHERE PortalID IN (SELECT PortalID FROM #SharingPortals);
		ELSE
		BEGIN
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.ModuleID = @PermissionsModuleID
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.ModuleID = @PermissionsModuleID;
		END
	END
END
ELSE
	BEGIN
	IF @AdminOrSuperUser = 1 OR @ViewAllCategores = 1 OR @ViewAllCategores IS NULL
		SELECT c.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID;
	ELSE IF @UserID = -1
	BEGIN	
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			IF @ViewAllCategores IS NULL AND EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
				SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
				SELECT rpsc.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.PremissionSettingsID IN (
					SELECT PremissionSettingsID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					WHERE rps.PortalID = @PortalID
						AND rps.ModuleID IS NULL
						AND rps.RoleID IS NULL);
		END
		ELSE -- by module
		BEGIN
			IF EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID AND PermissionsPMSource = 1)
			BEGIN
				IF @ViewAllCategores IS NULL AND EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
					SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
				ELSE
					SELECT rpsc.[CategoryID]
					FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 			
					WHERE rpsc.PremissionSettingsID IN (
						SELECT PremissionSettingsID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
						WHERE rps.PortalID = @PortalID
							AND rps.ModuleID IS NULL
							AND rps.RoleID IS NULL);
			END
			ELSE
			BEGIN
				IF @ViewAllCategores IS NULL AND EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
					SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
				ELSE
					SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
					WHERE rpsc.PremissionSettingsID IN (
						SELECT PremissionSettingsID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
						WHERE rps.PortalID = @PortalID
							AND rps.ModuleID = @PermissionsModuleID
							AND rps.RoleID IS NULL);
			END
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			IF @ViewAllCategores IS NULL AND (
				EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
				) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
					WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
				)
			)
				SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
			BEGIN
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL;
			END
		END
		ELSE -- by module
		BEGIN
			IF EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID AND PermissionsPMSource = 1)
			BEGIN
				IF @ViewAllCategores IS NULL AND (
					EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
							INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
							WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
					) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
						WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
					)
				)
					SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
				ELSE
				BEGIN
					SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
					INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
					UNION
					SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
					WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL;
				END
			END
			ELSE
			BEGIN
				IF @ViewAllCategores IS NULL AND (
					EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
							INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
							WHERE rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1 -- MAKNUTO PORTALID
					) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
						WHERE ups.UserID = @UserID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1  -- MAKNUTO PORTALID
					)
				)
					SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
				ELSE
				BEGIN
					SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
					INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
					WHERE rps.ModuleID = @PermissionsModuleID  -- MAKNUTO PORTALID
					UNION
					SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
					WHERE ups.UserID = @UserID AND ups.ModuleID = @PermissionsModuleID;  -- MAKNUTO PORTALID
				END
			END
		END
	END
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsFilterAuthors]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsFilterAuthors] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsFilterAuthors]
	@PortalID INT,
	@ModuleID INT,
	@FillterSettingsSource BIT,
	@FilterByAuthor INT,
	@OuterModuleID INT,
	@NewsFilterAuthors NVARCHAR(1000),
	@NewsFilterGroups NVARCHAR(1000),
	@IsSocialInstance BIT,
	@FilterByDNNGroupID INT,
	@FilterByGroupID INT,
	@ShowAllAuthors BIT
AS
SET NOCOUNT ON;
IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
			WHERE ap.[AuthorProfileID] = @FilterByAuthor;
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0	
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID;
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0			
			BEGIN
				IF @FillterSettingsSource = 1
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT ap.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID;
				ELSE
					SELECT mai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
					WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT ap.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID;
			END
			ELSE IF @FilterByAuthor <> 0
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor;
			ELSE IF @FilterByGroupID <> 0
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID;
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.PortalID IN (SELECT PortalID FROM #SharingPortals)
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID IN (SELECT PortalID FROM #SharingPortals);
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.PortalID IN (SELECT PortalID FROM #SharingPortals);
	ELSE IF @NewsFilterGroups IS NOT NULL
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID IN (SELECT PortalID FROM #SharingPortals);
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@DateRange BIT = 0,
	@DateRangeType TINYINT = 0,
	@StartDate DATETIME = NULL,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL,
	@eToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange TINYINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	@FilterByCustomFields BIT = 0
AS
SET NOCOUNT ON;
DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(2000);

DECLARE @sqlSharingPortal VARCHAR(300);
DECLARE @sqlSharingPortalAll VARCHAR(300);
DECLARE @PortalsCount INT;
DECLARE @IsPortalSharing BIT;

CREATE TABLE #SharingPortals (PortalID INT NOT NULL PRIMARY KEY);
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT NOT NULL PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT NOT NULL PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

INSERT INTO #SharingPortals
SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;

SELECT @PortalsCount = @@ROWCOUNT;

IF @PortalsCount = 0
BEGIN
	SET @IsPortalSharing = 0;
	INSERT INTO #SharingPortals SELECT @PortalID
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END
ELSE
BEGIN
	SET @IsPortalSharing = 1;
	IF @PortalsCount = 1
	BEGIN
		SET @PortalID = (SELECT PortalID FROM #SharingPortals); -- because of social dnn tvf
		SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
		SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
	END
	ELSE
	BEGIN
		SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
		SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
	END
END

IF @UserID <> -1
BEGIN
	INSERT INTO #UserInRoles
	EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsUserRoles] @PortalID,@UserID,@IsPortalSharing;
END

INSERT INTO #ViewCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsViewCategories] @PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@PermissionSettingsSource,@IsPortalSharing, @Perm_ViewAllCategores;

INSERT INTO #FilterCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsFilterCategories] @PortalID,@ModuleID,@CategoryFilterType,@FillterSettingsSource,@OnlyOneCategory,@NewsFilterCategories,@OuterModuleID;

INSERT INTO #ViewCategoriesWithFilter
SELECT c.CategoryID FROM #ViewCategories AS c WHERE c.CategoryID IN (SELECT CategoryID FROM #FilterCategories);

SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRange BIT
	,@DateRangeType TINYINT
	,@StartDate DATETIME
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange TINYINT'

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (ID INT NOT NULL PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX)); '

DECLARE @CanEditAll BIT;
IF @AdminOrSuperUser = 1 OR (@EditOnlyAsOwner = 0 AND @Perm_EditAllCategores = 1)
	SET @CanEditAll = 1
ELSE
	SET @CanEditAll = 0

IF @CanEditAll = 0
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #UserEditCategories (CategoryID INT NOT NULL PRIMARY KEY);
	INSERT INTO #UserEditCategories
	SELECT CategoryID
	FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)

	DECLARE @HasEditCategories BIT;

	IF EXISTS (SELECT 1 FROM #UserEditCategories)
		SET @HasEditCategories = 1;
	ELSE
		SET @HasEditCategories = 0; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '
	--ELSE IF @FilterByArticles = 1
	--	SET @FilterByArticles = 0

	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END
--ELSE IF @FilterByArticles = 1
--	SET @FilterByArticles = 0

DECLARE @FilterAuthors BIT;
SET @FilterAuthors = 0;

IF @NewsFilterAuthors IS NOT NULL OR @NewsFilterGroups IS NOT NULL
	SET @FilterAuthors = 1;
ELSE
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @FilterAuthors = 1;
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0	
			SET @FilterAuthors = 1;
		ELSE IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0			
			SET @FilterAuthors = 1;
		ELSE IF @FilterByAuthor <> 0 OR @FilterByGroupID <> 0
			SET @FilterAuthors = 1;
	END
END

IF @FilterAuthors = 1
BEGIN
	CREATE TABLE #FilterAuthors (UserID INT NOT NULL PRIMARY KEY);
	INSERT INTO #FilterAuthors
	EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsFilterAuthors]
		@PortalID,
		@ModuleID,
		@FillterSettingsSource,
		@FilterByAuthor,
		@OuterModuleID,
		@NewsFilterAuthors,
		@NewsFilterGroups,
		@IsSocialInstance,
		@FilterByDNNGroupID,
		@FilterByGroupID,
		@ShowAllAuthors;
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS ID, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategories) AND c.' + @sqlSharingPortalAll + ' AND cl.LocaleCode = @LocaleCode; '
	
SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

SET @TopInnerFilter = N' WHERE ' + @sqlSharingPortal;

	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmd.GoogleMapID = gmc.GoogleMapID AND gmd.PointData <> N''''
			WHERE gmc.ArticleID = na.ArticleID
		) '
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			WHERE gmc.ArticleID = na.ArticleID
		) '

	IF @HideUnlocalizedItems = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl
			WHERE ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
		) '

	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = nss.ArticleID
			WHERE nss.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		) '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE nss.ArticleID = na.ArticleID
		) '

	IF @FilterByTags = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
			INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE ti.ArticleID = na.ArticleID
		) '
	
	IF @FilterByArticles = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM @FilterArticlesTable AS fba
			WHERE fba.ArticleID = na.ArticleID
		) '

	IF @AdminFuturePostsVisible = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '		
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '
	IF @FilterByDNNUserID <> 0 SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @FilterAuthors = 1 SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
	
	IF @CanEditAll = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 '
		SET @TopInnerFilter = @TopInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '		
	END

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END

IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN

	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(512)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10)NOT NULL,
		CFWhereRoule NVARCHAR(2000) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);
		DECLARE @FilterValue NVARCHAR(2000);
		
		SET @CFFilterQuery = N'SELECT CFFilteredArticles.ArticleID FROM (';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValue = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N'AND'
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +		
N'SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE ' + @FilterValue + '
) AS OnlyWithGoogleMaps
WHERE Recency >= ' + CAST(@ElementsCount AS varchar(20)) + ' '
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValue + ' '
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SET @FilterValue = (SELECT CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow);

				SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValue + ' '

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END

		END
	END
	
	SET @CFFilterQuery = @CFFilterQuery + N') AS CFFilteredArticles'
	
	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

SET @MainContentFilter = N'
;WITH AllContent AS( '

	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT ArticleID, CommentedDate,RecurringID,StartDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,inner_all.RecurringID
			,inner_all.StartDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID], inner_all.RecurringID ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @MainContentFilter = @MainContentFilter + N'inner_all.Featured DESC, '
			
			SET @MainContentFilter = @MainContentFilter + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
			
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc
		INNER JOIN (';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT n.ArticleID,n.Featured,
		CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
		CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND '
	IF @DateRangeType = 2
		SET @MainContentFilter = @MainContentFilter + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 1
		BEGIN
			IF @ListArchive = 0
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
			ELSE
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
		END
	ELSE IF @DateRangeType = 0
		SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE
		SET @MainContentFilter = @MainContentFilter + N' 1 = 0'
	
	SET @MainContentFilter = @MainContentFilter + N'
	WHERE n.ArticleID IN( '
	 
	 -- tu bi trebal staviti okolo da se filtrira po and !!!
	 
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID		
			WHERE na.ArticleID IN ( ';
	END
	 
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N' SELECT ArticleID FROM ('
	 
	SET @MainContentFilter = @MainContentFilter + N'
		SELECT [ArticleID] FROM (
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na '	-- only article	normal permissions	
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
					WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
				)
				AND na.HasPermissions = 0
				AND na.EventArticle = 0 '

				IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
			
			SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na ' -- normal and recurring event normal permissions
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
					WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
				)
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
					WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

				SET @MainContentFilter = @MainContentFilter + N'
					UNION ALL
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
					WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						AND EXISTS (
							SELECT ArticleID
							FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
							WHERE nerd.ArticleID = ne.ArticleID '
							IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N'
							AND ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
							ELSE IF @DateRangeType = 1
								BEGIN
									IF @ListArchive = 0
										SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
									ELSE
										SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
								END
							ELSE IF @DateRangeType = 0
								SET @MainContentFilter = @MainContentFilter + N' AND (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						
						SET @MainContentFilter = @MainContentFilter + N'
						)		
				)
				AND na.HasPermissions = 0 '

			SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na ' -- only article	user/role permissions
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
					WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
				)
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
					WHERE aup.ArticleID = na.ArticleID '
					IF @CanEditAll = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					IF @UserID <> -1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
						WHERE arp.ArticleID = na.ArticleID '
						IF @CanEditAll = 0
						BEGIN
							SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
						END
					END
				SET @MainContentFilter = @MainContentFilter + N'
				)
				AND na.EventArticle = 0 '
				
				IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
			
			SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT na.[ArticleID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na ' -- normal and recurring events user/role permissions			
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
					WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
				)
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
					WHERE aup.ArticleID = na.ArticleID '
					IF @CanEditAll = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					IF @UserID <> -1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
						WHERE arp.ArticleID = na.ArticleID '
						IF @CanEditAll = 0
						BEGIN
							SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
						END
					END
				
				SET @MainContentFilter = @MainContentFilter + N'
				)
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
					WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

				SET @MainContentFilter = @MainContentFilter + N'
					UNION ALL
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
					WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						AND EXISTS (
							SELECT ArticleID
							FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
							WHERE nerd.ArticleID = ne.ArticleID '
							IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N'
							AND ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
							ELSE IF @DateRangeType = 1
								BEGIN
									IF @ListArchive = 0
										SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
									ELSE
										SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
								END
							ELSE IF @DateRangeType = 0
								SET @MainContentFilter = @MainContentFilter + N' AND (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						
						SET @MainContentFilter = @MainContentFilter + N'
						)	
				) '
		SET @MainContentFilter = @MainContentFilter + N'			
		) AS AllPermissions '
	
	-- treba desti ako se koristi AND operator
	
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N') AllBeforeFilters INTERSECT ' + @CFFilterQuery
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	END
	
	SET @MainContentFilter = @MainContentFilter + N' 
	) '
	
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON nc.ArticleID = inner_all.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1'
	END
	
SET @MainContentFilter = @MainContentFilter + N' 
) '

SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent '

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
	,e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], '
ELSE
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], ';

IF @CanEditAll = 1
	SET @sqlcommand = @sqlcommand + N'1 AS CanEdit, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE WHEN @HasEditCategories = 0
	THEN 
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	ELSE
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE '		
			IF @EditOnlyAsOwner = 1
				SET @sqlcommand = @sqlcommand + N' n.UserID = @UserID AND '

			SET @sqlcommand = @sqlcommand + N' c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	END
	AS CanEdit, '
END

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '
ELSE
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.ID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '

SET @sqlcommand = @sqlcommand + N'
CASE n.Active
	WHEN 1 THEN 0
	WHEN 0 THEN 1
END AS Published, '
IF @UserCanApprove = 0
	SET @sqlcommand = @sqlcommand + N'0 AS Approve, '
ELSE
	SET @sqlcommand = @sqlcommand + N'
		CASE n.Approved
			WHEN 1 THEN 0
			WHEN 0 THEN n.Active
		END AS Approve, '
SET @sqlcommand = @sqlcommand + N' @AllContentCount AS ContentCount '

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, 'SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N',e_fsd.' + @OrderByColumnName + ',(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END)
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + ' FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
				,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC'
					SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '	
				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike	 	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, 'SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, 'SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
		END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + ' FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '	
				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike	 	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, 'SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
END

SET @sqlcommand = @sqlcommand + N' ORDER BY '
	IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'Featured DESC, '
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
		SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

IF @LocaleCode IS NOT NULL
SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
	DROP TABLE #LocalizedCategories; '
SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserEditCategories'') IS NOT NULL
	DROP TABLE #UserEditCategories; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRange = @DateRange
	,@DateRangeType = @DateRangeType
	,@StartDate = @StartDate
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	
IF OBJECT_ID('tempdb..#SharingPortals') IS NOT NULL
	DROP TABLE #SharingPortals;
IF OBJECT_ID('tempdb..#UserInRoles') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID('tempdb..#ViewCategories') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID('tempdb..#ViewCategoriesWithFilter') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID('tempdb..#FilterCategories') IS NOT NULL
	DROP TABLE #FilterCategories;
IF @FilterAuthors = 1 AND OBJECT_ID('tempdb..#FilterAuthors') IS NOT NULL
	DROP TABLE #FilterAuthors;
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@CurrentArticleID INT,
	@RecurringID INT = NULL,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@DateRange BIT = 0,
	@DateRangeType TINYINT = 0,
	@StartDate DATETIME = NULL,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL,
	@eToDate DATETIME = NULL,

	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange TINYINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@FilterByCustomFields BIT = 0
AS
SET NOCOUNT ON;

DECLARE @CanEditAll BIT;
IF @AdminOrSuperUser = 1 OR (@EditOnlyAsOwner = 0 AND @Perm_EditAllCategores = 1)
	SET @CanEditAll = 1
ELSE
	SET @CanEditAll = 0

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(2000);

DECLARE @sqlSharingPortal VARCHAR(300);
DECLARE @PortalsCount INT;
DECLARE @IsPortalSharing BIT;

CREATE TABLE #SharingPortals (PortalID INT NOT NULL PRIMARY KEY);
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT NOT NULL PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT NOT NULL PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

INSERT INTO #SharingPortals
SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;

SELECT @PortalsCount = @@ROWCOUNT;

IF @PortalsCount = 0
BEGIN
	SET @IsPortalSharing = 0;
	INSERT INTO #SharingPortals SELECT @PortalID
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
END
ELSE
BEGIN
	SET @IsPortalSharing = 1;
	IF @PortalsCount = 1
	BEGIN
		SET @PortalID = (SELECT PortalID FROM #SharingPortals); -- because of social dnn tvf
		SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	END
	ELSE
	BEGIN
		SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	END
END

IF @UserID <> -1
BEGIN
	INSERT INTO #UserInRoles
	EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsUserRoles] @PortalID,@UserID,@IsPortalSharing;
END

INSERT INTO #ViewCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsViewCategories] @PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@PermissionSettingsSource,@IsPortalSharing, @Perm_ViewAllCategores;

INSERT INTO #FilterCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsFilterCategories] @PortalID,@ModuleID,@CategoryFilterType,@FillterSettingsSource,@OnlyOneCategory,@NewsFilterCategories,@OuterModuleID;

INSERT INTO #ViewCategoriesWithFilter
SELECT c.CategoryID FROM #ViewCategories AS c WHERE c.CategoryID IN (SELECT CategoryID FROM #FilterCategories);

SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@CurrentArticleID INT
	,@RecurringID INT
	,@DateRange BIT
	,@DateRangeType TINYINT
	,@StartDate DATETIME
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange TINYINT'

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- -- portal settings
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- portal settings
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END


DECLARE @FilterAuthors BIT;
SET @FilterAuthors = 0;

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @FilterAuthors = 1;
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0	
			SET @FilterAuthors = 1;
		ELSE IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0			
			SET @FilterAuthors = 1;
		ELSE IF @FilterByAuthor <> 0 OR @FilterByGroupID <> 0
			SET @FilterAuthors = 1;
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @FilterAuthors = 1;
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @FilterAuthors = 1;
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @FilterAuthors = 1;
END

IF @FilterAuthors = 1
BEGIN
	CREATE TABLE #FilterAuthors (UserID INT NOT NULL PRIMARY KEY);
	INSERT INTO #FilterAuthors
	EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsFilterAuthors]
		@PortalID,
		@ModuleID,
		@FillterSettingsSource,
		@FilterByAuthor,
		@OuterModuleID,
		@NewsFilterAuthors,
		@NewsFilterGroups,
		@IsSocialInstance,
		@FilterByDNNGroupID,
		@FilterByGroupID,
		@ShowAllAuthors;
END

SET @sqlcommand = @sqlcommand + N' DECLARE @CurrentArticlePosition INT ';

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END
IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN

	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(512)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10)NOT NULL,
		CFWhereRoule NVARCHAR(2000) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);
		DECLARE @FilterValue NVARCHAR(2000);
		
		SET @CFFilterQuery = N'SELECT CFFilteredArticles.ArticleID FROM (';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValue = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N'AND'
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +		
N'SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE ' + @FilterValue + '
) AS OnlyWithGoogleMaps
WHERE Recency >= ' + CAST(@ElementsCount AS varchar(20)) + ' '
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValue + ' '
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SET @FilterValue = (SELECT CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow);

				SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValue + ' '

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END

		END
	END
	
	SET @CFFilterQuery = @CFFilterQuery + N') AS CFFilteredArticles'
	
	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

DECLARE @MainFilter NVARCHAR(MAX);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @MainFilter = N'
	;WITH AllContent AS(
	SELECT ArticleID,RecurringID, ROW_NUMBER() OVER (ORDER BY '
	IF @FirstOrderBy = 'Featured DESC'
		SET @MainFilter = @MainFilter + N'Featured DESC, '
		
	IF @OrderByDirection = 'ASC'
		SET @MainFilter = @MainFilter + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	
	SET @MainFilter = @MainFilter + @CleanOrderColumnWithDirection + N', ArticleID) AS ArticlePosition '
END
ELSE
BEGIN
	SET @MainFilter = N'
	;WITH AllContent AS(
	SELECT ArticleID,RecurringID, ROW_NUMBER() OVER (ORDER BY '
	IF @FirstOrderBy = 'Featured DESC'
		SET @MainFilter = @MainFilter + N'Featured DESC, '
	SET @MainFilter = @MainFilter + @OrderByColumnName + N' ' + @OrderByDirection + N', ArticleID) AS ArticlePosition '
END

	SET @MainFilter = @MainFilter + N'
	FROM (
		SELECT n.ArticleID,
			CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
			CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
			n.Title,n.NumberOfViews,n.RatingValue,n.DateAdded,n.PublishDate,n.ExpireDate,n.LastModified,n.NumberOfComments,n.Featured '
		
		IF @OrderByCustomFieldID IS NOT NULL
			SET @MainFilter = @MainFilter + N',fv.' + @OrderByColumnName
		
		SET @MainFilter = @MainFilter + N'	
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND '
		IF @DateRangeType = 2
			SET @MainFilter = @MainFilter + N'
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
		ELSE IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
				ELSE
					SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
			END
		ELSE IF @DateRangeType = 0
			SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
		ELSE
			SET @MainFilter = @MainFilter + N' 1 = 0'
		
		IF @OrderByCustomFieldID IS NOT NULL
		BEGIN
			SET @MainFilter = @MainFilter + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID '
		END
		
		SET @MainFilter = @MainFilter + N'
			WHERE n.ArticleID IN( '
		
		IF @FilterByCustomFields = 1
			SET @MainFilter = @MainFilter + N' SELECT ArticleID FROM ('
		
		SET @MainFilter = @MainFilter + N'
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) '

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
				
				SET @MainFilter = @MainFilter + N'
				WHERE na.HasPermissions = 0
					AND na.EventArticle = 0
					AND ' + @sqlSharingPortal
					
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
						ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
					IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
					ELSE IF @FilterAuthors = 1 SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
	
					IF @CanEditAll = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END
					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
				SET @MainFilter = @MainFilter + N'
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
				
					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
				
				SET @MainFilter = @MainFilter + N'
				WHERE na.HasPermissions = 0
					AND ne.Recurring = 0
					AND na.EventArticle = 1
					
					AND ' + @sqlSharingPortal
					
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
						ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
					IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
					ELSE IF @FilterAuthors = 1 SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
					
					IF @CanEditAll = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @MainFilter = @MainFilter + N'
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @MainFilter = @MainFilter + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
								ELSE
									SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
							END
						ELSE IF @DateRangeType = 0
							SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @MainFilter = @MainFilter + N' 1 = 0 '
						
					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
					
				SET @MainFilter = @MainFilter + N'
				WHERE na.HasPermissions = 0
					AND na.EventArticle = 1
					AND ne.Recurring = 1
					
					AND ' + @sqlSharingPortal
					
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
						ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
					IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
					ELSE IF @FilterAuthors = 1 SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
					
					IF @CanEditAll = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END
				SET @MainFilter = @MainFilter + N'
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
				
				SET @MainFilter = @MainFilter + N'
				WHERE na.HasPermissions = 1
					AND na.EventArticle = 0
					
					AND ' + @sqlSharingPortal
					
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
						ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
					IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
					ELSE IF @FilterAuthors = 1 SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

					IF @CanEditAll = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
						IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
					END
					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
				SET @MainFilter = @MainFilter + N'
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
					
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
								
					SET @MainFilter = @MainFilter + N'					 	 
				WHERE na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 0
					
					AND ' + @sqlSharingPortal
					
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
						ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
					IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
					ELSE IF @FilterAuthors = 1 SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
					
					IF @CanEditAll = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
						IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @MainFilter = @MainFilter + N'
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainFilter = @MainFilter + N' 1 = 0 '
					
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
								
					SET @MainFilter = @MainFilter + N'
				WHERE na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 1
					
					AND ' + @sqlSharingPortal
					
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
						ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
					IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
					ELSE IF @FilterAuthors = 1 SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
					
					IF @CanEditAll = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
						IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
					END
					SET @MainFilter = @MainFilter + N'
			) AS WithNoRolePermissions
			UNION
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
				
				SET @MainFilter = @MainFilter + N'
					 
				WHERE na.HasPermissions = 1
					AND na.EventArticle = 0
					
					AND ' + @sqlSharingPortal
					
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
						ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
					IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
					ELSE IF @FilterAuthors = 1 SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
					
				IF @CanEditAll = 0
				BEGIN
					SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
				END
				IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
				SET @MainFilter = @MainFilter + N'
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
									
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
				
				SET @MainFilter = @MainFilter + N'
				WHERE na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 0
					
					AND ' + @sqlSharingPortal
					
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
						ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
					IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
					ELSE IF @FilterAuthors = 1 SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
					
					IF @CanEditAll = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END
					IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
							ELSE
								SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
						END
						ELSE IF @DateRangeType = 2
							SET @MainFilter = @MainFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
						SET @MainFilter = @MainFilter + N'
				UNION All
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainFilter = @MainFilter + N' 1 = 0 '
					
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
					
					SET @MainFilter = @MainFilter + N'
				WHERE na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 1
					
					AND ' + @sqlSharingPortal
					
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
						ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
					IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
					ELSE IF @FilterAuthors = 1 SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
					
					IF @CanEditAll = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END
					SET @MainFilter = @MainFilter + N'
			) AS ByRolePermissions '
			
			IF @FilterByCustomFields = 1
				SET @MainFilter = @MainFilter + N') AllBeforeFilters INTERSECT ' + @CFFilterQuery
	
		SET @MainFilter = @MainFilter + N'	
		)
	) AS AllArticles
) ';

DECLARE @MainCondition VARCHAR(500);
IF @RecurringID IS NULL
	SET @sqlcommand = @sqlcommand + @MainFilter +N' SELECT @CurrentArticlePosition = ArticlePosition FROM AllContent WHERE ArticleID = @CurrentArticleID; '
ELSE
	SET @sqlcommand = @sqlcommand + @MainFilter +N' SELECT @CurrentArticlePosition = ArticlePosition FROM AllContent WHERE ArticleID = @CurrentArticleID AND RecurringID = @RecurringID; '

SET @sqlcommand = @sqlcommand + ' ' + @MainFilter;

IF @LocaleCode IS NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
SELECT TOP (3) n.[ArticleID],n.[PortalID],apn.RecurringID,n.[Title],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN AllContent AS apn ON n.ArticleID = apn.ArticleID
WHERE apn.ArticlePosition = @CurrentArticlePosition 
	OR (apn.ArticlePosition = @CurrentArticlePosition - 1)
	OR (apn.ArticlePosition = @CurrentArticlePosition + 1)
ORDER BY apn.ArticlePosition '
END
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'	
SELECT TOP (3) n.[ArticleID],n.[PortalID],apn.RecurringID,
	CASE WHEN ncl.ArticleID IS NULL THEN n.[Title] ELSE ncl.[Title] END AS Title,
	CASE WHEN ncl.ArticleID IS NULL THEN n.[TitleLink] ELSE ncl.[clTitleLink] END AS TitleLink,
	n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN AllContent AS apn ON n.ArticleID = apn.ArticleID
LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = apn.ArticleID AND ncl.LocaleCode = @LocaleCode
WHERE apn.ArticlePosition = @CurrentArticlePosition
	OR (apn.ArticlePosition = @CurrentArticlePosition - 1)
	OR (apn.ArticlePosition = @CurrentArticlePosition + 1)
ORDER BY apn.ArticlePosition '			
END

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@CurrentArticleID = @CurrentArticleID
	,@RecurringID = @RecurringID
	,@DateRange = @DateRange
	,@DateRangeType = @DateRangeType
	,@StartDate = @StartDate
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	
IF OBJECT_ID('tempdb..#SharingPortals') IS NOT NULL
	DROP TABLE #SharingPortals;
IF OBJECT_ID('tempdb..#UserInRoles') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID('tempdb..#ViewCategories') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID('tempdb..#ViewCategoriesWithFilter') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID('tempdb..#FilterCategories') IS NOT NULL
	DROP TABLE #FilterCategories;
IF @FilterAuthors = 1 AND OBJECT_ID('tempdb..#FilterAuthors') IS NOT NULL
	DROP TABLE #FilterAuthors;
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlePreviousNext]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlePreviousNext] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlePreviousNext]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@CurrentArticleID INT,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@DateRange BIT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,

	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@FilterByTagID INT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@FilterByCustomFields BIT = 0
AS
SET NOCOUNT ON;
DECLARE @CanEditAll BIT;
IF @AdminOrSuperUser = 1 OR (@EditOnlyAsOwner = 0 AND @Perm_EditAllCategores = 1)
	SET @CanEditAll = 1
ELSE
	SET @CanEditAll = 0
	
DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(2000);

DECLARE @sqlSharingPortal VARCHAR(300);
DECLARE @PortalsCount INT;
DECLARE @IsPortalSharing BIT;

CREATE TABLE #SharingPortals (PortalID INT NOT NULL PRIMARY KEY);
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT NOT NULL PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT NOT NULL PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

INSERT INTO #SharingPortals
SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;

SELECT @PortalsCount = @@ROWCOUNT;

IF @PortalsCount = 0
BEGIN
	SET @IsPortalSharing = 0;
	INSERT INTO #SharingPortals SELECT @PortalID
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
END
ELSE
BEGIN
	SET @IsPortalSharing = 1;
	IF @PortalsCount = 1
	BEGIN
		SET @PortalID = (SELECT PortalID FROM #SharingPortals); -- because of social dnn tvf
		SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	END
	ELSE
	BEGIN
		SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	END
END

IF @UserID <> -1
BEGIN
	INSERT INTO #UserInRoles
	EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsUserRoles] @PortalID,@UserID,@IsPortalSharing;
END

INSERT INTO #ViewCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsViewCategories] @PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@PermissionSettingsSource,@IsPortalSharing, @Perm_ViewAllCategores;

INSERT INTO #FilterCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsFilterCategories] @PortalID,@ModuleID,@CategoryFilterType,@FillterSettingsSource,@OnlyOneCategory,@NewsFilterCategories,@OuterModuleID;

INSERT INTO #ViewCategoriesWithFilter
SELECT c.CategoryID FROM #ViewCategories AS c WHERE c.CategoryID IN (SELECT CategoryID FROM #FilterCategories);

SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@CurrentArticleID INT
	,@DateRange BIT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@LocaleCode NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@FilterByTagID INT'

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- -- portal settings
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '
	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID; '
		SET @FilterByTags = 1; -- must bee because of flow
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- portal settings
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @FilterAuthors BIT;
SET @FilterAuthors = 0;

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @FilterAuthors = 1;
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0	
			SET @FilterAuthors = 1;
		ELSE IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0			
			SET @FilterAuthors = 1;
		ELSE IF @FilterByAuthor <> 0 OR @FilterByGroupID <> 0
			SET @FilterAuthors = 1;
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @FilterAuthors = 1;
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @FilterAuthors = 1;
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @FilterAuthors = 1;
END

IF @FilterAuthors = 1
BEGIN
	CREATE TABLE #FilterAuthors (UserID INT NOT NULL PRIMARY KEY);
	INSERT INTO #FilterAuthors
	EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsFilterAuthors]
		@PortalID,
		@ModuleID,
		@FillterSettingsSource,
		@FilterByAuthor,
		@OuterModuleID,
		@NewsFilterAuthors,
		@NewsFilterGroups,
		@IsSocialInstance,
		@FilterByDNNGroupID,
		@FilterByGroupID,
		@ShowAllAuthors;
END

SET @sqlcommand = @sqlcommand + N' DECLARE @CurrentArticlePosition INT ';

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END
IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN

	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(512)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10)NOT NULL,
		CFWhereRoule NVARCHAR(2000) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);
		DECLARE @FilterValue NVARCHAR(2000);
		
		SET @CFFilterQuery = N'SELECT CFFilteredArticles.ArticleID FROM (';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValue = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N'AND'
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +		
N'SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE ' + @FilterValue + '
) AS OnlyWithGoogleMaps
WHERE Recency >= ' + CAST(@ElementsCount AS varchar(20)) + ' '
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValue + ' '
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SET @FilterValue = (SELECT CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow);

				SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValue + ' '

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END

		END
	END
	
	SET @CFFilterQuery = @CFFilterQuery + N') AS CFFilteredArticles'
	
	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

DECLARE @MainFilter NVARCHAR(MAX);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @MainFilter = N'
	SELECT n.ArticleID, ROW_NUMBER() OVER (ORDER BY '
	IF @FirstOrderBy = 'Featured DESC'
		SET @MainFilter = @MainFilter + N'n.Featured DESC, '
		
	IF @OrderByDirection = 'ASC'
		SET @MainFilter = @MainFilter + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	
	SET @MainFilter = @MainFilter + N'fv.'+ @CleanOrderColumnWithDirection + N', n.ArticleID) AS ArticlePosition
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
	WHERE n.ArticleID IN ('
END
ELSE
BEGIN
	SET @MainFilter = N'
	SELECT n.ArticleID, ROW_NUMBER() OVER (ORDER BY '
	IF @FirstOrderBy = 'Featured DESC'
		SET @MainFilter = @MainFilter + N'n.Featured DESC, '
	SET @MainFilter = @MainFilter + @OrderByColumnName + N' ' + @OrderByDirection + N', n.ArticleID) AS ArticlePosition
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	WHERE n.ArticleID IN ('
END

	IF @FilterByCustomFields = 1
		SET @MainFilter = @MainFilter + N' SELECT ArticleID FROM ('

	SET @MainFilter = @MainFilter + N'
		SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	'
		
		-- ovo je iz main filtera
		IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
		IF @FilterByDNNGroupID <> 0 
			SET @MainFilter = @MainFilter + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
		ELSE IF @FilterByDNNUserID <> 0
			SET @MainFilter = @MainFilter + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '	
		IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
		IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
		-- do tud

		SET @MainFilter = @MainFilter + N'
		WHERE na.HasPermissions = 0
			
			AND ' + @sqlSharingPortal + N'
			AND na.EventArticle = 0 '
			IF @CanEditAll = 0
			BEGIN
				SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
				IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
			END
			
			-- ovo je iz main filtera
			IF @AdminFuturePostsVisible = 1
			BEGIN
				IF @DateRange = 2 SET @MainFilter = @MainFilter + N' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate '
				ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '		
			END
			ELSE IF @DateRange = 2 OR @DateRange = 1 SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			
			IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
			IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
			IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
			ELSE IF @FilterAuthors = 1 SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
			-- do tud
			
		SET @MainFilter = @MainFilter + N'
		UNION ALL
		SELECT ArticleID FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

				IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @FilterByDNNGroupID <> 0 
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
				ELSE IF @FilterByDNNUserID <> 0
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

				IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
				IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
			
			SET @MainFilter = @MainFilter + N'
			WHERE na.HasPermissions = 1
				
				AND ' + @sqlSharingPortal + N'
				AND na.EventArticle = 0 '
				IF @AdminFuturePostsVisible = 1
				BEGIN
					IF @DateRange = 2 SET @MainFilter = @MainFilter + N' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate '
					ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '		
				END
				ELSE IF @DateRange = 2 OR @DateRange = 1 SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
				ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
				
				IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
				IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
				IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
				ELSE IF @FilterAuthors = 1 SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
				
				IF @CanEditAll = 0
				BEGIN
					SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 '
					IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
					ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
				END
				SET @MainFilter = @MainFilter + N'
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

				IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
				IF @FilterByDNNGroupID <> 0 
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
				ELSE IF @FilterByDNNUserID <> 0
					SET @MainFilter = @MainFilter + N'
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

				IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
				IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
			
			SET @MainFilter = @MainFilter + N'	 		 
			WHERE na.HasPermissions = 1		
				AND ' + @sqlSharingPortal + N'
				AND na.EventArticle = 0 '
				IF @AdminFuturePostsVisible = 1
				BEGIN
					IF @DateRange = 2 SET @MainFilter = @MainFilter + N' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate '
					ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '		
				END
				ELSE IF @DateRange = 2 OR @DateRange = 1 SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
				ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
				
				IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
				IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
				IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
				ELSE IF @FilterAuthors = 1 SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
			
				IF @CanEditAll = 0
				BEGIN
					SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
				END
				SET @MainFilter = @MainFilter + N'
		) AS HasPermissionsTrue';

	IF @FilterByCustomFields = 1
		SET @MainFilter = @MainFilter + N') AllBeforeFilters INTERSECT ' + @CFFilterQuery

	SET @MainFilter = @MainFilter + N' ) '

SET @sqlcommand = @sqlcommand + N'
SELECT @CurrentArticlePosition = allContent.ArticlePosition FROM ('+ @MainFilter +') AS allContent WHERE allContent.ArticleID = @CurrentArticleID;
';

IF @LocaleCode IS NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
SELECT TOP (3) n.[ArticleID],n.[PortalID],n.[Title],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN ('+ @MainFilter +') AS apn ON n.ArticleID = apn.ArticleID
WHERE apn.ArticlePosition = @CurrentArticlePosition
	OR (apn.ArticlePosition = @CurrentArticlePosition - 1)
	OR (apn.ArticlePosition = @CurrentArticlePosition + 1)
ORDER BY apn.ArticlePosition '
END
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'	
SELECT TOP (3) n.[ArticleID],n.[PortalID],
	CASE WHEN ncl.ArticleID IS NULL THEN n.[Title] ELSE ncl.[Title] END AS Title,
	CASE WHEN ncl.ArticleID IS NULL THEN n.[TitleLink] ELSE ncl.[clTitleLink] END AS TitleLink,
	n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN ('+ @MainFilter +') AS apn ON n.ArticleID = apn.ArticleID
LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = apn.ArticleID AND ncl.LocaleCode = @LocaleCode
WHERE apn.ArticlePosition = @CurrentArticlePosition
	OR (apn.ArticlePosition = @CurrentArticlePosition - 1)
	OR (apn.ArticlePosition = @CurrentArticlePosition + 1)
ORDER BY apn.ArticlePosition '
END
		
EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@CurrentArticleID = @CurrentArticleID
	,@DateRange = @DateRange
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@LocaleCode = @LocaleCode
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@FilterByTagID = @FilterByTagID

IF OBJECT_ID('tempdb..#SharingPortals') IS NOT NULL
	DROP TABLE #SharingPortals;
IF OBJECT_ID('tempdb..#UserInRoles') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID('tempdb..#ViewCategories') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID('tempdb..#ViewCategoriesWithFilter') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID('tempdb..#FilterCategories') IS NOT NULL
	DROP TABLE #FilterCategories;
IF @FilterAuthors = 1 AND OBJECT_ID('tempdb..#FilterAuthors') IS NOT NULL
	DROP TABLE #FilterAuthors;
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@DateRange BIT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@FilterByTagID INT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	@FilterByCustomFields BIT = 0
AS
SET NOCOUNT ON;
DECLARE @CanEditAll BIT;
IF @AdminOrSuperUser = 1 OR (@EditOnlyAsOwner = 0 AND @Perm_EditAllCategores = 1)
	SET @CanEditAll = 1
ELSE
	SET @CanEditAll = 0
	
DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(2000);

DECLARE @sqlSharingPortal VARCHAR(300);
DECLARE @sqlSharingPortalAll VARCHAR(300);
DECLARE @PortalsCount INT;
DECLARE @IsPortalSharing BIT;

CREATE TABLE #SharingPortals (PortalID INT NOT NULL PRIMARY KEY);
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT NOT NULL PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT NOT NULL PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

INSERT INTO #SharingPortals
SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;

SELECT @PortalsCount = @@ROWCOUNT;

IF @PortalsCount = 0
BEGIN
	SET @IsPortalSharing = 0;
	INSERT INTO #SharingPortals SELECT @PortalID
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END
ELSE
BEGIN
	SET @IsPortalSharing = 1;
	IF @PortalsCount = 1
	BEGIN
		SET @PortalID = (SELECT PortalID FROM #SharingPortals); -- because of social dnn tvf
		SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
		SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
	END
	ELSE
	BEGIN
		SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
		SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
	END
END

IF @UserID <> -1
BEGIN
	INSERT INTO #UserInRoles
	EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsUserRoles] @PortalID,@UserID,@IsPortalSharing;
END

INSERT INTO #ViewCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsViewCategories] @PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@PermissionSettingsSource,@IsPortalSharing, @Perm_ViewAllCategores;

INSERT INTO #FilterCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsFilterCategories] @PortalID,@ModuleID,@CategoryFilterType,@FillterSettingsSource,@OnlyOneCategory,@NewsFilterCategories,@OuterModuleID;

INSERT INTO #ViewCategoriesWithFilter
SELECT c.CategoryID FROM #ViewCategories AS c WHERE c.CategoryID IN (SELECT CategoryID FROM #FilterCategories);

SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRange BIT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@LocaleCode NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@FilterByTagID INT'

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (ID INT NOT NULL PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX)); '

IF @CanEditAll = 0
SET @sqlcommand = @sqlcommand + N' 
CREATE TABLE #UserEditCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserEditCategories
SELECT CategoryID
FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)

DECLARE @HasEditCategories BIT;

IF EXISTS (SELECT 1 FROM #UserEditCategories)
	SET @HasEditCategories = 1;
ELSE
	SET @HasEditCategories = 0; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID; '
		SET @FilterByTags = 1; -- must bee because of flow
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0	
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0			
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	CREATE TABLE #FilterAuthors (UserID INT NOT NULL PRIMARY KEY);
	INSERT INTO #FilterAuthors
	EXEC SP_EXECUTESQL @statement = @sqlAuthors,
	@paramList = N'@PortalID INT, @ModuleID INT, @FilterByAuthor INT, @OuterModuleID INT, @NewsFilterAuthors NVARCHAR(1000), @NewsFilterGroups NVARCHAR(1000)',
	@PortalID = @PortalID,
	@ModuleID = @ModuleID,
	@FilterByAuthor = @FilterByAuthor,
	@OuterModuleID = @OuterModuleID,
	@NewsFilterAuthors = @NewsFilterAuthors,
	@NewsFilterGroups = @NewsFilterGroups
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS ID, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategories) AND c.' + @sqlSharingPortalAll + ' AND cl.LocaleCode = @LocaleCode; '

SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT; '

SET @TopInnerFilter = N' WHERE ' + @sqlSharingPortal;

		IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmd.GoogleMapID = gmc.GoogleMapID AND gmd.PointData <> N''''
			WHERE gmc.ArticleID = na.ArticleID
		) '
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			WHERE gmc.ArticleID = na.ArticleID
		) '

	IF @HideUnlocalizedItems = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl
			WHERE ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
		) '

	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = nss.ArticleID
			WHERE nss.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		) '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE nss.ArticleID = na.ArticleID
		) '

	IF @FilterByTags = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
			INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE ti.ArticleID = na.ArticleID
		) '
	
	IF @FilterByArticles = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM @FilterArticlesTable AS fba
			WHERE fba.ArticleID = na.ArticleID
		) '

SET @TopInnerFilter = @TopInnerFilter + N'
	AND na.EventArticle = 0 '
	IF @AdminFuturePostsVisible = 1
	BEGIN
		IF @DateRange = 2 SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate '
		ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '		
	END
	ELSE IF @DateRange = 2 OR @DateRange = 1 SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '
	IF @FilterByDNNUserID <> 0 SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

	IF @CanEditAll = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 '
		SET @TopInnerFilter = @TopInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '		
	END

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END
IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN

	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(512)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10)NOT NULL,
		CFWhereRoule NVARCHAR(2000) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);
		DECLARE @FilterValue NVARCHAR(2000);
		
		SET @CFFilterQuery = N'SELECT CFFilteredArticles.ArticleID FROM (';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValue = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N'AND'
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +		
N'SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE ' + @FilterValue + '
) AS OnlyWithGoogleMaps
WHERE Recency >= ' + CAST(@ElementsCount AS varchar(20)) + ' '
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValue + ' '
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SET @FilterValue = (SELECT CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow);

				SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValue + ' '

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END

		END
	END
	
	SET @CFFilterQuery = @CFFilterQuery + N') AS CFFilteredArticles'
	
	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

SET @MainContentFilter = N'
;WITH AllContent AS( '
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT ArticleID, CommentedDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID] ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @MainContentFilter = @MainContentFilter + N'n.Featured DESC, '
			
			SET @MainContentFilter = @MainContentFilter + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc ON nc.ArticleID = n.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		WHERE nc.ArticleID IN (';
	END
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID		
			WHERE na.ArticleID IN ( ';
	END
	
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N' SELECT ArticleID FROM ('
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na '
		SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
		)
		AND na.HasPermissions = 0
	UNION ALL
	SELECT ArticleID FROM (
		SELECT ArticleID FROM (
		SELECT aup.ArticleID
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup '
			IF @CanEditAll = 0
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N' WHERE aup.Show = 1 '
				IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
				ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
			END
		IF @UserID <> -1
		BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION
			SELECT arp.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp '
				IF @CanEditAll = 0
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N' WHERE arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
				END
		END
		SET @MainContentFilter = @MainContentFilter + N'
		) AS PermissionsByArticle
		INTERSECT
		SELECT na.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na '
		SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
		)
		AND na.HasPermissions = 1
	) AS HasPermissionsTrue '
	
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N') AllBeforeFilters INTERSECT ' + @CFFilterQuery
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	END
	
	IF @OrderByColumnName = N'CommentedDate'
	SET @MainContentFilter = @MainContentFilter + N'
		)
	) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1
	'
SET @MainContentFilter = @MainContentFilter + N'
) '
SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent '

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID],n.[ContactEmail], ';
ELSE
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],n.[ContactEmail], ';

IF @CanEditAll = 1
	SET @sqlcommand = @sqlcommand + N'1 AS CanEdit, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE WHEN @HasEditCategories = 0
	THEN 
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	ELSE
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE '		
			IF @EditOnlyAsOwner = 1
				SET @sqlcommand = @sqlcommand + N' n.UserID = @UserID AND '

			SET @sqlcommand = @sqlcommand + N' c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	END
	AS CanEdit, '
END

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '
ELSE
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.ID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '

SET @sqlcommand = @sqlcommand + N'
CASE n.Active
	WHEN 1 THEN 0
	WHEN 0 THEN 1
END AS Published, '
IF @UserCanApprove = 0
	SET @sqlcommand = @sqlcommand + N'0 AS Approve, '
ELSE
	SET @sqlcommand = @sqlcommand + N'
		CASE n.Approved
			WHEN 1 THEN 0
			WHEN 0 THEN n.Active
		END AS Approve, '
SET @sqlcommand = @sqlcommand + N' @AllContentCount AS ContentCount '

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.CommentedDate FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.CommentedDate
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, ' SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.' + @OrderByColumnName + ' FROM (	 
				SELECT inner_n.[ArticleID],fv.' + @OrderByColumnName + '
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE n.ArticleID IN (
			SELECT finalSelection.ArticleID FROM (
				SELECT inner_n.ArticleID, ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, ' SET @sqlcommand = @sqlcommand + N' ' + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				WHERE inner_n.ArticleID IN (SELECT ArticleID FROM AllContent)
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		)';
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.CommentedDate FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.CommentedDate
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, ' SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.' + @OrderByColumnName + ' FROM (	 
				SELECT inner_n.[ArticleID],fv.' + @OrderByColumnName + '
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, fv.'
				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode
		WHERE n.ArticleID IN (
			SELECT finalSelection.ArticleID FROM (
				SELECT inner_n.ArticleID, ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, ' SET @sqlcommand = @sqlcommand + N' ' + @CleanOrderColumnWithDirection + N') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				WHERE inner_n.ArticleID IN (SELECT ArticleID FROM AllContent)
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		)';
	END
END

SET @sqlcommand = @sqlcommand + N' ORDER BY '
	IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'Featured DESC, '
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
		SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

IF @LocaleCode IS NOT NULL
SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
	DROP TABLE #LocalizedCategories; '
SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserEditCategories'') IS NOT NULL
	DROP TABLE #UserEditCategories; '
		
EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRange = @DateRange
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@LocaleCode = @LocaleCode
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@FilterByTagID = @FilterByTagID

IF OBJECT_ID('tempdb..#SharingPortals') IS NOT NULL
	DROP TABLE #SharingPortals;
IF OBJECT_ID('tempdb..#UserInRoles') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID('tempdb..#ViewCategories') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID('tempdb..#ViewCategoriesWithFilter') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID('tempdb..#FilterCategories') IS NOT NULL
	DROP TABLE #FilterCategories;
IF @sqlAuthors IS NOT NULL AND OBJECT_ID('tempdb..#FilterAuthors') IS NOT NULL
	DROP TABLE #FilterAuthors;

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT = 1,
	@ItemsTo INT = 5,
	@DateRangeType TINYINT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 0,
	@FillterSettingsSource BIT = 0,
	@StartDate DATETIME = NULL,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange TINYINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	@FilterByCustomFields BIT = 0
AS
SET NOCOUNT ON;
DECLARE @CanEditAll BIT;
IF @AdminOrSuperUser = 1 OR (@EditOnlyAsOwner = 0 AND @Perm_EditAllCategores = 1)
	SET @CanEditAll = 1
ELSE
	SET @CanEditAll = 0

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(2000);

DECLARE @sqlSharingPortal VARCHAR(300);
DECLARE @sqlSharingPortalAll VARCHAR(300);
DECLARE @PortalsCount INT;
DECLARE @IsPortalSharing BIT;

CREATE TABLE #SharingPortals (PortalID INT NOT NULL PRIMARY KEY);
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT NOT NULL PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT NOT NULL PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

INSERT INTO #SharingPortals
SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;

SELECT @PortalsCount = @@ROWCOUNT;

IF @PortalsCount = 0
BEGIN
	SET @IsPortalSharing = 0;
	INSERT INTO #SharingPortals SELECT @PortalID
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END
ELSE
BEGIN
	SET @IsPortalSharing = 1;
	IF @PortalsCount = 1
	BEGIN
		SET @PortalID = (SELECT PortalID FROM #SharingPortals); -- because of social dnn tvf
		SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
		SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
	END
	ELSE
	BEGIN
		SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
		SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
	END
END

IF @UserID <> -1
BEGIN
	INSERT INTO #UserInRoles
	EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsUserRoles] @PortalID,@UserID,@IsPortalSharing;
END

INSERT INTO #ViewCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsViewCategories] @PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@PermissionSettingsSource,@IsPortalSharing, @Perm_ViewAllCategores;

INSERT INTO #FilterCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsFilterCategories] @PortalID,@ModuleID,@CategoryFilterType,@FillterSettingsSource,@OnlyOneCategory,@NewsFilterCategories,@OuterModuleID;

INSERT INTO #ViewCategoriesWithFilter
SELECT c.CategoryID FROM #ViewCategories AS c WHERE c.CategoryID IN (SELECT CategoryID FROM #FilterCategories);

SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRangeType TINYINT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@StartDate DATETIME
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange TINYINT'
	
SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (ID INT NOT NULL PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX)); '

IF @CanEditAll = 0
SET @sqlcommand = @sqlcommand + N' 
CREATE TABLE #UserEditCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserEditCategories
SELECT CategoryID
FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)

DECLARE @HasEditCategories BIT;

IF EXISTS (SELECT 1 FROM #UserEditCategories)
	SET @HasEditCategories = 1;
ELSE
	SET @HasEditCategories = 0; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END	
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0	
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0			
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	CREATE TABLE #FilterAuthors (UserID INT NOT NULL PRIMARY KEY);
	INSERT INTO #FilterAuthors
	EXEC SP_EXECUTESQL @statement = @sqlAuthors,
	@paramList = N'@PortalID INT, @ModuleID INT, @FilterByAuthor INT, @OuterModuleID INT, @NewsFilterAuthors NVARCHAR(1000), @NewsFilterGroups NVARCHAR(1000)',
	@PortalID = @PortalID,
	@ModuleID = @ModuleID,
	@FilterByAuthor = @FilterByAuthor,
	@OuterModuleID = @OuterModuleID,
	@NewsFilterAuthors = @NewsFilterAuthors,
	@NewsFilterGroups = @NewsFilterGroups
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS ID, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategories) AND c.' + @sqlSharingPortalAll + ' AND cl.LocaleCode = @LocaleCode; '
	
SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

SET @TopInnerFilter = N' WHERE ' + @sqlSharingPortal;

	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmd.GoogleMapID = gmc.GoogleMapID AND gmd.PointData <> N''''
			WHERE gmc.ArticleID = na.ArticleID
		) '
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			WHERE gmc.ArticleID = na.ArticleID
		) '

	IF @HideUnlocalizedItems = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl
			WHERE ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
		) '

	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = nss.ArticleID
			WHERE nss.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		) '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE nss.ArticleID = na.ArticleID
		) '

	IF @FilterByTags = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
			INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE ti.ArticleID = na.ArticleID
		) '
	
	IF @FilterByArticles = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM @FilterArticlesTable AS fba
			WHERE fba.ArticleID = na.ArticleID
		) '

SET @TopInnerFilter = @TopInnerFilter + N'
	AND na.EventArticle = 1 '
	
	IF @AdminFuturePostsVisible = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '		
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '
	IF @FilterByDNNUserID <> 0 SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

	IF @CanEditAll = 0
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 '
		SET @TopInnerFilter = @TopInnerFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '		
	END

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END

IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN

	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(512)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10)NOT NULL,
		CFWhereRoule NVARCHAR(2000) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);
		DECLARE @FilterValue NVARCHAR(2000);
		
		SET @CFFilterQuery = N'SELECT CFFilteredArticles.ArticleID FROM (';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValue = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N'AND'
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +		
N'SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE ' + @FilterValue + '
) AS OnlyWithGoogleMaps
WHERE Recency >= ' + CAST(@ElementsCount AS varchar(20)) + ' '
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValue + ' '
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SET @FilterValue = (SELECT CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow);

				SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValue + ' '

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END

		END
	END
	
	SET @CFFilterQuery = @CFFilterQuery + N') AS CFFilteredArticles'
	
	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

SET @MainContentFilter = N'
;WITH AllContent AS( '

	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT ArticleID, CommentedDate,RecurringID,StartDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,inner_all.RecurringID
			,inner_all.StartDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID], inner_all.RecurringID ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @MainContentFilter = @MainContentFilter + N'inner_all.Featured DESC, '
			
			SET @MainContentFilter = @MainContentFilter + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
			
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc
		INNER JOIN (';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT n.ArticleID,n.Featured,
		CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate,
		CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
	IF @DateRangeType = 2
		SET @MainContentFilter = @MainContentFilter + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 1
		BEGIN
			IF @ListArchive = 0
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
			ELSE
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
		END
	ELSE IF @DateRangeType = 0
		SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE
		SET @MainContentFilter = @MainContentFilter + N' 1 = 0'
	
	SET @MainContentFilter = @MainContentFilter + N'
	WHERE n.ArticleID IN( '
	 
	 -- tu bi trebal staviti okolo da se filtrira po and !!!
	 
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID		
			WHERE na.ArticleID IN ( ';
	END
	 
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N' SELECT ArticleID FROM ('
	 
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT na.[ArticleID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na ' -- normal and recurring event normal permissions
		SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
		)
		AND EXISTS (
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
			WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
			IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
				ELSE
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
			END
			ELSE IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

		SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT ArticleID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
			WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 1
				AND EXISTS (
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
					WHERE nerd.ArticleID = ne.ArticleID '
					IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N'
					AND ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N' AND (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
				
				SET @MainContentFilter = @MainContentFilter + N'
				)		
		)
		AND na.HasPermissions = 0
		UNION ALL
		SELECT na.[ArticleID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na ' -- normal and recurring events user/role permissions			
			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
			AND EXISTS (
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
			)
			AND EXISTS (
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = na.ArticleID '
				IF @CanEditAll = 0
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
					ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
				END
				IF @UserID <> -1
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT ArticleID
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
					WHERE arp.ArticleID = na.ArticleID '
					IF @CanEditAll = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					END
				END
			
			SET @MainContentFilter = @MainContentFilter + N'
			)
			AND EXISTS (
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
				WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
				IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
					ELSE
						SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
				END
				ELSE IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

			SET @MainContentFilter = @MainContentFilter + N'
				UNION ALL
				SELECT ArticleID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne
				WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					AND EXISTS (
						SELECT ArticleID
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
						WHERE nerd.ArticleID = ne.ArticleID '
						IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						AND ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
								ELSE
									SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
							END
						ELSE IF @DateRangeType = 0
							SET @MainContentFilter = @MainContentFilter + N' AND (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					
					SET @MainContentFilter = @MainContentFilter + N'
					)	
			) '
	
	-- treba desti ako se koristi AND operator
	
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N') AllBeforeFilters INTERSECT ' + @CFFilterQuery
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'	
	) '
	
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON nc.ArticleID = inner_all.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1'
	END
	
SET @MainContentFilter = @MainContentFilter + N' 
) '

SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent '

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
	,e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], '
ELSE
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], ';

IF @CanEditAll = 1
	SET @sqlcommand = @sqlcommand + N'1 AS CanEdit, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE WHEN @HasEditCategories = 0
	THEN 
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	ELSE
		CASE WHEN EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE '		
			IF @EditOnlyAsOwner = 1
				SET @sqlcommand = @sqlcommand + N' n.UserID = @UserID AND '

			SET @sqlcommand = @sqlcommand + N' c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	END
	AS CanEdit, '
END

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '
ELSE
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.ID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, '

SET @sqlcommand = @sqlcommand + N'
CASE n.Active
	WHEN 1 THEN 0
	WHEN 0 THEN 1
END AS Published, '
IF @UserCanApprove = 0
	SET @sqlcommand = @sqlcommand + N'0 AS Approve, '
ELSE
	SET @sqlcommand = @sqlcommand + N'
		CASE n.Approved
			WHEN 1 THEN 0
			WHEN 0 THEN n.Active
		END AS Approve, '
SET @sqlcommand = @sqlcommand + N' @AllContentCount AS ContentCount '

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, 'SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N',e_fsd.' + @OrderByColumnName + ',(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END)
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + ' FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
				,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC'
					SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '	
				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike	 	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, 'SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, 'SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + ' FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '	
				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike	 	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
				,ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, 'SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
END

SET @sqlcommand = @sqlcommand + N' ORDER BY '
	IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'Featured DESC, '
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
		SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

IF @LocaleCode IS NOT NULL
SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
	DROP TABLE #LocalizedCategories; '
SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserEditCategories'') IS NOT NULL
	DROP TABLE #UserEditCategories; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRangeType = @DateRangeType
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@StartDate = @StartDate
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange

IF OBJECT_ID('tempdb..#SharingPortals') IS NOT NULL
	DROP TABLE #SharingPortals;
IF OBJECT_ID('tempdb..#UserInRoles') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID('tempdb..#ViewCategories') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID('tempdb..#ViewCategoriesWithFilter') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID('tempdb..#FilterCategories') IS NOT NULL
	DROP TABLE #FilterCategories;
IF @sqlAuthors IS NOT NULL AND OBJECT_ID('tempdb..#FilterAuthors') IS NOT NULL
	DROP TABLE #FilterAuthors;

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@CurrentArticleID INT,
	@RecurringID INT = NULL,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@DateRangeType TINYINT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,

	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 0,
	@FillterSettingsSource BIT = 0,
	@StartDate DATETIME = NULL,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange TINYINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@FilterByCustomFields BIT = 0
AS
SET NOCOUNT ON;
DECLARE @CanEditAll BIT;
IF @AdminOrSuperUser = 1 OR (@EditOnlyAsOwner = 0 AND @Perm_EditAllCategores = 1)
	SET @CanEditAll = 1
ELSE
	SET @CanEditAll = 0

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(2000);

DECLARE @sqlSharingPortal VARCHAR(300);
DECLARE @PortalsCount INT;
DECLARE @IsPortalSharing BIT;

CREATE TABLE #SharingPortals (PortalID INT NOT NULL PRIMARY KEY);
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT NOT NULL PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT NOT NULL PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

INSERT INTO #SharingPortals
SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;

SELECT @PortalsCount = @@ROWCOUNT;

IF @PortalsCount = 0
BEGIN
	SET @IsPortalSharing = 0;
	INSERT INTO #SharingPortals SELECT @PortalID
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
END
ELSE
BEGIN
	SET @IsPortalSharing = 1;
	IF @PortalsCount = 1
	BEGIN
		SET @PortalID = (SELECT PortalID FROM #SharingPortals); -- because of social dnn tvf
		SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	END
	ELSE
	BEGIN
		SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	END
END

IF @UserID <> -1
BEGIN
	INSERT INTO #UserInRoles
	EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsUserRoles] @PortalID,@UserID,@IsPortalSharing;
END

INSERT INTO #ViewCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsViewCategories] @PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@PermissionSettingsSource,@IsPortalSharing, @Perm_ViewAllCategores;

INSERT INTO #FilterCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsFilterCategories] @PortalID,@ModuleID,@CategoryFilterType,@FillterSettingsSource,@OnlyOneCategory,@NewsFilterCategories,@OuterModuleID;

INSERT INTO #ViewCategoriesWithFilter
SELECT c.CategoryID FROM #ViewCategories AS c WHERE c.CategoryID IN (SELECT CategoryID FROM #FilterCategories);

SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@CurrentArticleID INT
	,@RecurringID INT
	,@DateRangeType TINYINT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@StartDate DATETIME
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange TINYINT'
	
SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- -- portal settings
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END	
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- portal settings
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @FilterAuthors BIT;
SET @FilterAuthors = 0;

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @FilterAuthors = 1;
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0	
			SET @FilterAuthors = 1;
		ELSE IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0			
			SET @FilterAuthors = 1;
		ELSE IF @FilterByAuthor <> 0 OR @FilterByGroupID <> 0
			SET @FilterAuthors = 1;
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @FilterAuthors = 1;
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @FilterAuthors = 1;
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @FilterAuthors = 1;
END

IF @FilterAuthors = 1
BEGIN
	CREATE TABLE #FilterAuthors (UserID INT NOT NULL PRIMARY KEY);
	INSERT INTO #FilterAuthors
	EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsFilterAuthors]
		@PortalID,
		@ModuleID,
		@FillterSettingsSource,
		@FilterByAuthor,
		@OuterModuleID,
		@NewsFilterAuthors,
		@NewsFilterGroups,
		@IsSocialInstance,
		@FilterByDNNGroupID,
		@FilterByGroupID,
		@ShowAllAuthors;
END

SET @sqlcommand = @sqlcommand + N' DECLARE @CurrentArticlePosition INT ';

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END
IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN

	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(512)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10)NOT NULL,
		CFWhereRoule NVARCHAR(2000) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND ' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + CAST(CustomFieldID AS varchar(20)) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);
		DECLARE @FilterValue NVARCHAR(2000);
		
		SET @CFFilterQuery = N'SELECT CFFilteredArticles.ArticleID FROM (';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValue = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N'AND'
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +		
N'SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE ' + @FilterValue + '
) AS OnlyWithGoogleMaps
WHERE Recency >= ' + CAST(@ElementsCount AS varchar(20)) + ' '
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValue + ' '
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SET @FilterValue = (SELECT CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow);

				SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValue + ' '

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END

		END
	END
	
	SET @CFFilterQuery = @CFFilterQuery + N') AS CFFilteredArticles'
	
	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

DECLARE @MainFilter NVARCHAR(MAX);

SET @MainFilter = N'
;WITH MainFilters AS(
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

		IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
		IF @FilterByDNNGroupID <> 0 
			SET @MainFilter = @MainFilter + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
		ELSE IF @FilterByDNNUserID <> 0
			SET @MainFilter = @MainFilter + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

		IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
		IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
	SET @MainFilter = @MainFilter + N'
	WHERE ' + @sqlSharingPortal + N'
		AND na.EventArticle = 1 '
		IF @AdminFuturePostsVisible = 1
		BEGIN
			IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
			ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate <= na.[ExpireDate] '		
		END
		ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		ELSE SET @MainFilter = @MainFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
		IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N' AND na.HideDefaultLocale = 0 '
		IF @Featured = 1 SET @MainFilter = @MainFilter + N' AND na.Featured = 1 '
		IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N' AND na.UserID = @FilterByDNNUserID '
		ELSE IF @FilterAuthors = 1 SET @MainFilter = @MainFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
	SET @MainFilter = @MainFilter + N'
),
AllContent AS('

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @MainFilter = @MainFilter + N'
	SELECT ArticleID,RecurringID, ROW_NUMBER() OVER (ORDER BY '
	IF @FirstOrderBy = 'Featured DESC'
		SET @MainFilter = @MainFilter + N'Featured DESC, '
		
	IF @OrderByDirection = 'ASC'
		SET @MainFilter = @MainFilter + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
	
	SET @MainFilter = @MainFilter + @CleanOrderColumnWithDirection + N', ArticleID) AS ArticlePosition '
END
ELSE
BEGIN
	SET @MainFilter = @MainFilter + N'
	SELECT ArticleID,RecurringID, ROW_NUMBER() OVER (ORDER BY '
	IF @FirstOrderBy = 'Featured DESC' SET @MainFilter = @MainFilter + N'Featured DESC, '

	SET @MainFilter = @MainFilter + @OrderByColumnName + N' ' + @OrderByDirection + N', ArticleID) AS ArticlePosition '
END
	
	SET @MainFilter = @MainFilter + N'
	FROM (
		SELECT n.ArticleID,
			CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate,
			CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
			n.Title,n.NumberOfViews,n.RatingValue,n.DateAdded,n.PublishDate,n.ExpireDate,n.LastModified,n.NumberOfComments,n.Featured '
		
		IF @OrderByCustomFieldID IS NOT NULL
			SET @MainFilter = @MainFilter + N',fv.' + @OrderByColumnName
		
		SET @MainFilter = @MainFilter + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
		IF @DateRangeType = 2
			SET @MainFilter = @MainFilter + N'
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
		ELSE IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
				ELSE
					SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
			END
		ELSE IF @DateRangeType = 0
			SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
		ELSE
			SET @MainFilter = @MainFilter + N' 1 = 0'
		
		IF @OrderByCustomFieldID IS NOT NULL
		BEGIN
			SET @MainFilter = @MainFilter + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID'
		END
		
		SET @MainFilter = @MainFilter + N'
			WHERE n.ArticleID IN( '
		
		IF @FilterByCustomFields = 1
			SET @MainFilter = @MainFilter + N' SELECT ArticleID FROM ('
		
		SET @MainFilter = @MainFilter + N'
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
				WHERE na.HasPermissions = 0
					AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
					AND ne.Recurring = 0 '
					IF @CanEditAll = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @MainFilter = @MainFilter + N'
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
				IF @DateRangeType = 2
					SET @MainFilter = @MainFilter + N'
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
						ELSE
							SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
					END
				ELSE IF @DateRangeType = 0
					SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
				ELSE SET @MainFilter = @MainFilter + N' 1 = 0 '
				SET @MainFilter = @MainFilter + N'
				WHERE na.HasPermissions = 0
					AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
					AND ne.Recurring = 1 '
					IF @CanEditAll = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID = @UserID) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END
				SET @MainFilter = @MainFilter + N'
			) AS HasPermissionsFalse
			UNION ALL
			SELECT [ArticleID] FROM (
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
					WHERE na.HasPermissions = 1
						AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
						AND ne.Recurring = 0 '
					IF @CanEditAll = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
						IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @MainFilter = @MainFilter + N'
					UNION
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0	
					WHERE na.HasPermissions = 1
						AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
						AND ne.Recurring = 0 '
					IF @CanEditAll = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainFilter = @MainFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @MainFilter = @MainFilter + N'
				) AS NotRecurring
				UNION ALL
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainFilter = @MainFilter + N' 1 = 0 '
					SET @MainFilter = @MainFilter + N'
					WHERE na.HasPermissions = 1
						AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
						AND ne.Recurring = 1 '
					IF @CanEditAll = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
						IF @UserID = -1 SET @MainFilter = @MainFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainFilter = @MainFilter + N' AND aup.UserID = @UserID '
					END
					SET @MainFilter = @MainFilter + N' 
					UNION
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainFilter = @MainFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainFilter = @MainFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainFilter = @MainFilter + N' 1 = 0 '
					SET @MainFilter = @MainFilter + N'
					WHERE na.HasPermissions = 1
						AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
						AND ne.Recurring = 1 '
					IF @CanEditAll = 0
					BEGIN
						SET @MainFilter = @MainFilter + N' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N' AND na.Approved = 1 '
					END
					SET @MainFilter = @MainFilter + N' 
				) AS Recurring
			) AS HasPermissionsTrue	'
			
			IF @FilterByCustomFields = 1
				SET @MainFilter = @MainFilter + N') AllBeforeFilters INTERSECT ' + @CFFilterQuery
		
		SET @MainFilter = @MainFilter + N' 			
		)
	) AS AllArticles
) ';

DECLARE @MainCondition VARCHAR(500);
IF @RecurringID IS NULL
	SET @sqlcommand = @sqlcommand + @MainFilter +N' SELECT @CurrentArticlePosition = ArticlePosition FROM AllContent WHERE ArticleID = @CurrentArticleID; '
ELSE
	SET @sqlcommand = @sqlcommand + @MainFilter +N' SELECT @CurrentArticlePosition = ArticlePosition FROM AllContent WHERE ArticleID = @CurrentArticleID AND RecurringID = @RecurringID; '

SET @sqlcommand = @sqlcommand + ' ' + @MainFilter;

IF @LocaleCode IS NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
SELECT TOP (3) n.[ArticleID],n.[PortalID],apn.RecurringID,n.[Title],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN AllContent AS apn ON n.ArticleID = apn.ArticleID
WHERE apn.ArticlePosition = @CurrentArticlePosition
	OR (apn.ArticlePosition = @CurrentArticlePosition - 1)
	OR (apn.ArticlePosition = @CurrentArticlePosition + 1)
ORDER BY apn.ArticlePosition '
END
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
SELECT TOP (3) n.[ArticleID],n.[PortalID],apn.RecurringID,
	CASE WHEN ncl.ArticleID IS NULL THEN n.[Title] ELSE ncl.[Title] END AS Title,
	CASE WHEN ncl.ArticleID IS NULL THEN n.[TitleLink] ELSE ncl.[clTitleLink] END AS TitleLink,
	n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN AllContent AS apn ON n.ArticleID = apn.ArticleID
LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = apn.ArticleID AND ncl.LocaleCode = @LocaleCode
WHERE apn.ArticlePosition = @CurrentArticlePosition
	OR (apn.ArticlePosition = @CurrentArticlePosition - 1)
	OR (apn.ArticlePosition = @CurrentArticlePosition + 1)
ORDER BY apn.ArticlePosition '
END

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@CurrentArticleID = @CurrentArticleID
	,@RecurringID = @RecurringID
	,@DateRangeType = @DateRangeType
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@StartDate = @StartDate
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange

IF OBJECT_ID('tempdb..#SharingPortals') IS NOT NULL
	DROP TABLE #SharingPortals;
IF OBJECT_ID('tempdb..#UserInRoles') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID('tempdb..#ViewCategories') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID('tempdb..#ViewCategoriesWithFilter') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID('tempdb..#FilterCategories') IS NOT NULL
	DROP TABLE #FilterCategories;
IF @FilterAuthors = 1 AND OBJECT_ID('tempdb..#FilterAuthors') IS NOT NULL
	DROP TABLE #FilterAuthors;
GO
