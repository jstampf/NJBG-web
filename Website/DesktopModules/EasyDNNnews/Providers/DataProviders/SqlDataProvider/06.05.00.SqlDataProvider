IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsEventsData' and column_name = 'ReccuringInEditMode')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] ADD ReccuringInEditMode BIT NULL
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringContent]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringContent](
	[ArticleID] [int] NOT NULL,
	[RecurringID] [int] NOT NULL,
	[LocaleCode] [nvarchar](20) NOT NULL,
	[Summary] [nvarchar](4000) NOT NULL,
	[Article] [nvarchar](max) NOT NULL,
 CONSTRAINT [PK_{objectQualifier}EasyDNNNewsEventsRecurringContent] PRIMARY KEY CLUSTERED ( [ArticleID] ASC,[RecurringID] ASC,[LocaleCode] ASC )WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsEventsRecurringContent_EasyDNNNewsEventsRecurringData]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringContent]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringContent]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsEventsRecurringContent_EasyDNNNewsEventsRecurringData] FOREIGN KEY([ArticleID], [RecurringID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] ([ArticleID], [RecurringID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsEventsRecurringContent_EasyDNNNewsEventsRecurringData]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringContent]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringContent] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsEventsRecurringContent_EasyDNNNewsEventsRecurringData]
GO