IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsUserPremissionSettings' and column_name = 'ContactEmail')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] ADD ContactEmail BIT NOT NULL DEFAULT(1)
END
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsRolePremissionSettings' and column_name = 'ContactEmail')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] ADD ContactEmail BIT NOT NULL DEFAULT(1)
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetRegistratedUsers]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetRegistratedUsers]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetRegistratedUsers]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetRegistratedUsers]
	@ArticleID INT,
	@RecurringID INT,
	@SupportsCustomFields BIT,
	@SupportsPayment BIT
AS
SET NOCOUNT ON;
DECLARE @query NVARCHAR(MAX);
DECLARE @RegistrationCFtemplateID INT;
DECLARE @singleValueColumns NVARCHAR(MAX);
DECLARE @multiValueColumns NVARCHAR(MAX);

IF @SupportsCustomFields = 1
BEGIN
	
	SELECT @RegistrationCFtemplateID = [RegistrationCFtemplateID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] WHERE [RegistrationCFtemplateID] IS NOT NULL AND [ArticleID] = @ArticleID

	SELECT @singleValueColumns = STUFF((SELECT '','' + QUOTENAME(cf.[LabelValue]) 
						FROM 
						(
							SELECT CASE WHEN Recency > 1 THEN LabelValue + CAST(Recency - 1 AS NVARCHAR(20)) ELSE LabelValue END AS LabelValue, Position
							FROM (		
								SELECT cf.[LabelValue],cf.[ControlTypeID],gti.Position,
								ROW_NUMBER() OVER (PARTITION BY cf.[LabelValue] ORDER BY gti.Position) AS Recency
								FROM {databaseOwner}[{objectQualifier}EasyDNNfields] AS cf
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] AS gti ON cf.CustomFieldID = gti.CustomFieldID
								WHERE gti.[FieldsTemplateID] = @RegistrationCFtemplateID AND cf.ControlTypeID IN (1,2,3,4,5,6,9,10,15,20,21,23)
								GROUP BY cf.[LabelValue],cf.[ControlTypeID],gti.Position
							) AS singleCF
							WHERE ControlTypeID < 20	
						) AS cf
						ORDER BY Position
				FOR XML PATH(''''), TYPE
				).value(''.'', ''NVARCHAR(MAX)'') 
			,1,1,'''');
	        
	SELECT @multiValueColumns = STUFF((SELECT '','' + QUOTENAME(cf.[LabelValue]) 
						FROM 
						(
							SELECT CASE WHEN Recency > 1 THEN LabelValue + CAST(Recency - 1 AS NVARCHAR(20)) ELSE LabelValue END AS LabelValue, Position
							FROM (		
								SELECT cf.[LabelValue],cf.[ControlTypeID],gti.Position,
								ROW_NUMBER() OVER (PARTITION BY cf.[LabelValue] ORDER BY gti.Position) AS Recency
								FROM {databaseOwner}[{objectQualifier}EasyDNNfields] AS cf
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] AS gti ON cf.CustomFieldID = gti.CustomFieldID
								WHERE gti.[FieldsTemplateID] = @RegistrationCFtemplateID AND cf.ControlTypeID IN (1,2,3,4,5,6,9,10,15,20,21,23)
								GROUP BY cf.[LabelValue],cf.[ControlTypeID],gti.Position
							) AS singleCF
							WHERE ControlTypeID >= 20	
						) AS cf
						ORDER BY Position
				FOR XML PATH(''''), TYPE
				).value(''.'', ''NVARCHAR(MAX)'') 
			,1,1,'''');
END

DECLARE @EUIWHERECLAUSE NVARCHAR(300);
IF @RecurringID IS NULL
	SET @EUIWHERECLAUSE = N'' eui.ArticleID = @ArticleID ''
ELSE
	SET @EUIWHERECLAUSE = N'' eui.RecurringArticleID = @ArticleID AND eui.RecurringID = @RecurringID ''

SET @query = N''
SET NOCOUNT ON;

SELECT
	 eui.[Id] AS RegistrationID
	,rud.[FirstName]
	,rud.[LastName]
	,rud.[Email]
	,eui.[ApproveStatus]
	,eui.[UserStatus]
	,eui.[CreatedOnDate]
	,eui.[NumberOfTickets]
	,eui.[Message] ''
IF @RegistrationCFtemplateID IS NOT NULL -- prva i glavna provjera za CF
BEGIN
	IF @singleValueColumns IS NOT NULL AND @multiValueColumns IS NOT NULL 
		SET @query = @query + N'','' + @singleValueColumns + '','' +@multiValueColumns;
	ELSE IF @singleValueColumns IS NOT NULL
		SET @query = @query + N'','' + @singleValueColumns;
	ELSE IF @multiValueColumns IS NOT NULL
		SET @query = @query + N'','' + @multiValueColumns;
	ELSE
		SET @RegistrationCFtemplateID = NULL
END

IF @SupportsPayment = 1
SET @query = @query + N''
,ep.[SubTotal]
,ep.[Discount]
,ep.[TaxValue]
,ep.[EstimatedTotal]
,ep.[PaymentStatus]
'';

SET @query = @query + N'' FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] AS eui ''

IF @SupportsPayment = 1
SET @query = @query + N'' LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsPayment] AS ep ON eui.Id = ep.EventUserItemID ''

SET @query = @query + N'' 
INNER JOIN (
	SELECT eui.Id, au.[FirstName],au.[LastName],au.[Email]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEmailAuthenticatedUsers] AS au 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventUsers] AS eu ON au.Id = eu.EmailAuthenticatedUserID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] AS eui ON eui.EventUserID = eu.Id
	WHERE'' + @EUIWHERECLAUSE + N''
	UNION ALL
	SELECT eui.Id, u.[FirstName],u.[LastName],u.[Email]
	FROM {databaseOwner}[{objectQualifier}Users] AS u
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventUsers] AS eu ON u.UserID = eu.DNNUserID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] AS eui ON eui.EventUserID = eu.Id
	WHERE'' + @EUIWHERECLAUSE + N''
)  AS rud ON rud.Id = eui.Id AND '' + @EUIWHERECLAUSE

IF @RegistrationCFtemplateID IS NOT NULL AND @multiValueColumns IS NOT NULL AND (@singleValueColumns IS NOT NULL) 
BEGIN
SET @query = @query + N''
 LEFT OUTER JOIN ( 
	SELECT singleValues.glb_fix_id,'' + @singleValueColumns + '','' + @multiValueColumns + '' FROM (
		SELECT glb_fix_id,'' + @singleValueColumns + '' 
            FROM 
            (
				SELECT eui.Id AS glb_fix_id, cf.[LabelValue] AS ColumnName,
				 CASE cf.[ControlTypeID]
					 WHEN 1 THEN CAST(frv.[Text] AS NVARCHAR(max))
					 WHEN 2 THEN CAST(frv.[RText] AS NVARCHAR(max))
					 WHEN 3 THEN CAST(frv.[Int] AS NVARCHAR(max))
					 WHEN 4 THEN CAST(frv.[Decimal] AS NVARCHAR(max))
					 WHEN 5 THEN CAST(frv.[Decimal] AS NVARCHAR(max))
					 WHEN 6 THEN CAST(frv.[Text] AS NVARCHAR(max))
					 WHEN 9 THEN CAST(frv.[DateTime] AS NVARCHAR(max))
					 WHEN 10 THEN CAST(frv.[Text] AS NVARCHAR(max))
					 WHEN 15 THEN CAST(frv.[Bit] AS NVARCHAR(max))
					 ELSE NULL
				END	AS ColumnValue 
				FROM (
					SELECT [CustomFieldID],ControlTypeID, CASE WHEN Recency > 1 THEN LabelValue + CAST(Recency - 1 AS NVARCHAR(20)) ELSE LabelValue END AS LabelValue, Position,Recency
					FROM (		
						SELECT cf.[CustomFieldID], cf.[LabelValue],cf.[ControlTypeID],gti.Position,
						ROW_NUMBER() OVER (PARTITION BY cf.[LabelValue] ORDER BY gti.Position) AS Recency
						FROM {databaseOwner}[{objectQualifier}EasyDNNfields] AS cf
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] AS gti ON cf.CustomFieldID = gti.CustomFieldID
						WHERE gti.[FieldsTemplateID] = @RegistrationCFtemplateID AND cf.ControlTypeID IN (1,2,3,4,5,6,9,10,15,20,21,23)
						GROUP BY cf.CustomFieldID,cf.[LabelValue],cf.[ControlTypeID],gti.Position
					) AS singleCF
					WHERE ControlTypeID < 20
					) AS cf
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsRegistrationValues] AS frv ON cf.[CustomFieldID] = frv.[CustomFieldID]
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] AS eui ON eui.Id = frv.[EventUserItemID]
				WHERE'' + @EUIWHERECLAUSE + N''
            ) x
            pivot 
            (
                max(ColumnValue)
                for ColumnName in ('' + @singleValueColumns + '')
            ) p  
		) AS singleValues INNER JOIN (
			SELECT glb_fix_id,'' + @multiValueColumns + '' 
            FROM 
            (
				SELECT DISTINCT glb_fix_id, ColumnName,
					(STUFF((SELECT '''', '''' + me.[Text] FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] AS me
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsRegistrationMultiSelected] AS rms ON rms.[FieldElementID] = me.[FieldElementID]
					 WHERE me.[CustomFieldID] = AllUngrouped.CustomFieldID AND rms.EventUserItemID=glb_fix_id
				FOR XML PATH('''''''')), 1, 1, '''''''')) AS ColumnValue
				FROM (
					SELECT eui.Id AS glb_fix_id, cf.[LabelValue] AS ColumnName,me.[Text] AS ColumnValue, me.FieldElementID,me.[CustomFieldID]
					FROM (
						SELECT [CustomFieldID],ControlTypeID, CASE WHEN Recency > 1 THEN LabelValue + CAST(Recency - 1 AS NVARCHAR(20)) ELSE LabelValue END AS LabelValue, Position,Recency
						FROM (		
							SELECT cf.[CustomFieldID], cf.[LabelValue],cf.[ControlTypeID],gti.Position,
							ROW_NUMBER() OVER (PARTITION BY cf.[LabelValue] ORDER BY gti.Position) AS Recency
							FROM {databaseOwner}[{objectQualifier}EasyDNNfields] AS cf
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] AS gti ON cf.CustomFieldID = gti.CustomFieldID
							WHERE gti.[FieldsTemplateID] = @RegistrationCFtemplateID AND cf.ControlTypeID IN (1,2,3,4,5,6,9,10,15,20,21,23)
							GROUP BY cf.CustomFieldID,cf.[LabelValue],cf.[ControlTypeID],gti.Position
							) AS singleCF
						WHERE ControlTypeID >= 20
						) AS cf
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsRegistrationMultiSelected] AS fme ON cf.[CustomFieldID] = fme.[CustomFieldID]
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] AS eui ON eui.Id = fme.[EventUserItemID]
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] AS me ON me.FieldElementID = fme.[FieldElementID]
					WHERE'' + @EUIWHERECLAUSE + N''
				) AS AllUngrouped
			) x
            pivot 
            (
                max(ColumnValue)
                for ColumnName in ('' + @multiValueColumns + '')
            ) p 
        ) AS MultiValues ON singleValues.glb_fix_id = MultiValues.glb_fix_id
	) AS cf_all ON cf_all.glb_fix_id = eui.Id AND '' + @EUIWHERECLAUSE;	
END
ELSE IF @RegistrationCFtemplateID IS NOT NULL AND (@singleValueColumns IS NOT NULL) 
BEGIN
SET @query = @query + N''
LEFT OUTER JOIN ( 
	SELECT glb_fix_id,'' + @singleValueColumns + '' 
    FROM 
        (
			SELECT eui.Id AS glb_fix_id, cf.[LabelValue] AS ColumnName,
			 CASE cf.[ControlTypeID]
				 WHEN 1 THEN CAST(frv.[Text] AS NVARCHAR(max))
				 WHEN 2 THEN CAST(frv.[RText] AS NVARCHAR(max))
				 WHEN 3 THEN CAST(frv.[Int] AS NVARCHAR(max))
				 WHEN 4 THEN CAST(frv.[Decimal] AS NVARCHAR(max))
				 WHEN 5 THEN CAST(frv.[Decimal] AS NVARCHAR(max))
				 WHEN 6 THEN CAST(frv.[Text] AS NVARCHAR(max))
				 WHEN 9 THEN CAST(frv.[DateTime] AS NVARCHAR(max))
				 WHEN 10 THEN CAST(frv.[Text] AS NVARCHAR(max))
				 WHEN 15 THEN CAST(frv.[Bit] AS NVARCHAR(max))
				 ELSE NULL
			END	AS ColumnValue 
			FROM (
				SELECT [CustomFieldID],ControlTypeID, CASE WHEN Recency > 1 THEN LabelValue + CAST(Recency - 1 AS NVARCHAR(20)) ELSE LabelValue END AS LabelValue, Position,Recency
				FROM (		
					SELECT cf.[CustomFieldID], cf.[LabelValue],cf.[ControlTypeID],gti.Position,
					ROW_NUMBER() OVER (PARTITION BY cf.[LabelValue] ORDER BY gti.Position) AS Recency
					FROM {databaseOwner}[{objectQualifier}EasyDNNfields] AS cf
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] AS gti ON cf.CustomFieldID = gti.CustomFieldID
					WHERE gti.[FieldsTemplateID] = @RegistrationCFtemplateID AND cf.ControlTypeID IN (1,2,3,4,5,6,9,10,15,20,21,23)
					GROUP BY cf.CustomFieldID,cf.[LabelValue],cf.[ControlTypeID],gti.Position
				) AS singleCF
				WHERE ControlTypeID < 20
				) AS cf
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsRegistrationValues] AS frv ON cf.[CustomFieldID] = frv.[CustomFieldID]
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] AS eui ON eui.Id = frv.[EventUserItemID]
			WHERE'' + @EUIWHERECLAUSE + N''
        ) x
    pivot 
    (
        max(ColumnValue)
        for ColumnName in ('' + @singleValueColumns + '')
    ) p  
) AS cf_all ON cf_all.glb_fix_id = eui.Id AND '' + @EUIWHERECLAUSE;	
END
ELSE IF @RegistrationCFtemplateID IS NOT NULL AND (@multiValueColumns IS NOT NULL) 
BEGIN
SET @query = @query + N''
LEFT OUTER JOIN ( 
	SELECT glb_fix_id,'' + @multiValueColumns + '' 
    FROM 
        (
			SELECT DISTINCT glb_fix_id, ColumnName,
				(STUFF((SELECT '''', '''' + me.[Text] FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] AS me
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsRegistrationMultiSelected] AS rms ON rms.[FieldElementID] = me.[FieldElementID]
				 WHERE me.[CustomFieldID] = AllUngrouped.CustomFieldID AND rms.EventUserItemID=glb_fix_id
			FOR XML PATH('''''''')), 1, 1, '''''''')) AS ColumnValue
			FROM (
				SELECT eui.Id AS glb_fix_id, cf.[LabelValue] AS ColumnName,me.[Text] AS ColumnValue, me.FieldElementID,me.[CustomFieldID]
				FROM (
					SELECT [CustomFieldID],ControlTypeID, CASE WHEN Recency > 1 THEN LabelValue + CAST(Recency - 1 AS NVARCHAR(20)) ELSE LabelValue END AS LabelValue, Position,Recency
					FROM (		
						SELECT cf.[CustomFieldID], cf.[LabelValue],cf.[ControlTypeID],gti.Position,
						ROW_NUMBER() OVER (PARTITION BY cf.[LabelValue] ORDER BY gti.Position) AS Recency
						FROM {databaseOwner}[{objectQualifier}EasyDNNfields] AS cf
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] AS gti ON cf.CustomFieldID = gti.CustomFieldID
						WHERE gti.[FieldsTemplateID] = @RegistrationCFtemplateID AND cf.ControlTypeID IN (1,2,3,4,5,6,9,10,15,20,21,23)
						GROUP BY cf.CustomFieldID,cf.[LabelValue],cf.[ControlTypeID],gti.Position
						) AS singleCF
					WHERE ControlTypeID >= 20
					) AS cf
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsRegistrationMultiSelected] AS fme ON cf.[CustomFieldID] = fme.[CustomFieldID]
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] AS eui ON eui.Id = fme.[EventUserItemID]
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] AS me ON me.FieldElementID = fme.[FieldElementID]
				WHERE'' + @EUIWHERECLAUSE + N''
			) AS AllUngrouped
		) x
    pivot 
    (
        max(ColumnValue)
        for ColumnName in ('' + @multiValueColumns + '')
    ) p 
) AS cf_all ON cf_all.glb_fix_id = eui.Id AND '' + @EUIWHERECLAUSE;	
END

SET @query = @query + N'' WHERE '' + @EUIWHERECLAUSE;	
SET @query = @query + N'' ORDER BY FirstName;'';

DECLARE @paramList NVARCHAR(500);

SET @paramList = N''@ArticleID INT
	,@RecurringID INT
	,@RegistrationCFtemplateID INT''
		
exec sp_executesql @statement = @query
	,@paramList = @paramList
	,@ArticleID = @ArticleID
	,@RecurringID = @RecurringID
	,@RegistrationCFtemplateID = @RegistrationCFtemplateID
' 
END
GO