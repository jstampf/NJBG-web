IF NOT EXISTS (SELECT UpdateVersion FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUpdate] WHERE UpdateVersion = '07.07.00')
BEGIN
	INSERT {databaseOwner}[{objectQualifier}EasyDNNNewsUpdate]([UpdateVersion],[Finished],[InstallType]) VALUES(N'07.07.00',0, N'DNN')
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'TextEditorType')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD TextEditorType TINYINT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_TextEditorType DEFAULT(0) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'TextEditorType')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD TextEditorType TINYINT CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_TextEditorType DEFAULT(0) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'ControlBarInArticleList')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD ControlBarInArticleList BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_ControlBarInArticleList DEFAULT(1) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'ControlBarInArticleList')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD ControlBarInArticleList BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_ControlBarInArticleList DEFAULT(1) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'ControlBarInArticleDetails')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD ControlBarInArticleDetails BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_ControlBarInArticleDetails DEFAULT(1) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'ControlBarInArticleDetails')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD ControlBarInArticleDetails BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_ControlBarInArticleDetails DEFAULT(1) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'TextEditorMaxChar')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD TextEditorMaxChar INT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_TextEditorMaxChar DEFAULT(0) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'TextEditorMaxChar')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD TextEditorMaxChar INT CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_TextEditorMaxChar DEFAULT(0) NOT NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'TextEditorArticleMaxChar')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD TextEditorArticleMaxChar INT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_TextEditorArticleMaxChar DEFAULT(0) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'TextEditorArticleMaxChar')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD TextEditorArticleMaxChar INT CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_TextEditorArticleMaxChar DEFAULT(0) NOT NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'DisplayMainArticleImageInGallery')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD DisplayMainArticleImageInGallery BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_DisplayMainArticleImageInGallery DEFAULT(1) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'DisplayMainArticleImageInGallery')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD DisplayMainArticleImageInGallery BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_DisplayMainArticleImageInGallery DEFAULT(1) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNews' and column_name = 'ContactEmail')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNews] ADD ContactEmail NVARCHAR(256) NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'ContactEmailByArticle')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD ContactEmailByArticle BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_ContactEmailByArticle DEFAULT(0) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'ContactEmailByArticle')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD ContactEmailByArticle BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_ContactEmailByArticle DEFAULT(0) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'ReplaceDNNTokens')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD ReplaceDNNTokens BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_ReplaceDNNTokens DEFAULT(0) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'ReplaceDNNTokens')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD ReplaceDNNTokens BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_ReplaceDNNTokens DEFAULT(0) NOT NULL
END
GO
IF EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsLightboxSettings' and column_name = 'GalleryLightbox')
BEGIN
	UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsLightboxSettings] SET GalleryLightbox = 1 WHERE GalleryLightbox = 0
END
GO
IF EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsChameleonSettings' and column_name = 'GalleryLightbox')
BEGIN
	UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsChameleonSettings] SET GalleryLightbox = 1 WHERE GalleryLightbox = 0
END
GO
IF EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsChameleonNestedSettings' and column_name = 'GalleryLightbox')
BEGIN
	UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsChameleonNestedSettings] SET GalleryLightbox = 1 WHERE GalleryLightbox = 0
END
GO
IF EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsLightboxSettings' AND column_name = 'LightboxTheme')
BEGIN
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[DF_{objectQualifier}EasyDNNNewsLightboxSettings_LightboxTheme]') AND type = 'D')
	BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsLightboxSettings] DROP CONSTRAINT [DF_{objectQualifier}EasyDNNNewsLightboxSettings_LightboxTheme]
	END
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsLightboxSettings] DROP COLUMN LightboxTheme
END
GO
IF EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsChameleonSettings' AND column_name = 'LightboxType')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsChameleonSettings] DROP COLUMN LightboxType
END
GO
IF EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsChameleonNestedSettings' AND column_name = 'LightboxType')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsChameleonNestedSettings] DROP COLUMN LightboxType
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsDocuments' and column_name = 'Target')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] ADD Target TINYINT CONSTRAINT DF_{objectQualifier}EasyDNNNewsDocuments_Target DEFAULT (0) NOT NULL
END
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetArticles]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetArticles]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlePreviousNext]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlePreviousNext]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@CurrentArticleID INT,
	@RecurringID INT = NULL,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@DateRangeType TINYINT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,

	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = '''',
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 0,
	@FillterSettingsSource BIT = 0,
	@StartDate DATETIME = NULL,
	@OuterModuleID INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = '''',
	@NewsFilterAuthors NVARCHAR(1000) = '''',
	@NewsFilterGroups NVARCHAR(1000) = '''',
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange TINYINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@FilterByCustomFields BIT = 0
AS
SET NOCOUNT ON;
DECLARE @EditAll TINYINT;

DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF @AdminOrSuperUser = 1 OR (@EditOnlyAsOwner = 0 AND @Perm_EditAllCategores = 1) SET @EditAll = 1;
ELSE IF EXISTS(SELECT * FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)) SET @EditAll = 2;
ELSE SET @EditAll = 3;

DECLARE @sqlcommand NVARCHAR(max);
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N''
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@CurrentArticleID INT
	,@RecurringID INT
	,@DateRangeType TINYINT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@StartDate DATETIME
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange TINYINT''
	
SET @sqlcommand = N''
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); ''

IF @NewsFilterCategories = ''''
BEGIN
	IF @OuterModuleID = 0 AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- -- portal settings
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; ''

	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID ''
		SET @FilterByTags = 1
	END	
	ELSE IF @OuterModuleID = 0 AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- portal settings
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; ''
END

SET @sqlcommand = @sqlcommand + N'' 

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
	
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO #UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND ( ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate ) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;

CREATE TABLE #UserViewCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserViewCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EDS_ViewPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_ViewAllCategores,@PermissionSettingsSource,@CurrentDate) ''

SET @sqlcommand = @sqlcommand + N''

IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;

CREATE TABLE #UserViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;

CREATE TABLE #FiltredByCategories (CategoryID INT NOT NULL PRIMARY KEY); ''

IF @NewsFilterCategories <> ''''
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #FiltredByCategories SELECT fc.KeyID FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID IN (SELECT CAtegoryID FROM #FiltredByCategories); ''
END
ELSE
BEGIN
	IF @OnlyOneCategory IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID = @OnlyOneCategory;
		INSERT INTO #FiltredByCategories SELECT @OnlyOneCategory; ''
	END
	ELSE IF @OuterModuleID <> 0
	BEGIN
		IF @CategoryFilterType = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
				
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID; ''
		END
		ELSE IF @CategoryFilterType = 2
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			;WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
		END
	END
	ELSE
	BEGIN
		IF @CategoryFilterType = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1
		BEGIN
			IF @FillterSettingsSource = 1
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID; ''
			END
			ELSE
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID; ''
			END
		END
		ELSE IF @CategoryFilterType = 2
		BEGIN
			IF @FillterSettingsSource = 1
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
			ELSE
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
		END
	END
END

DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

IF @NewsFilterAuthors = '''' AND @NewsFilterGroups = ''''
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
			IF @FilterByAuthor <> 0
				SET @FilterAuthorOrAuthors = 1;
	END
	ELSE
	BEGIN
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE
		BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;	
		ELSE IF @FilterByAuthor <> 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE IF @FilterByGroupID <> 0
			SET @FilterAuthorOrAuthors = 1;
		END
	END
END
ELSE
	SET @FilterAuthorOrAuthors = 1;

SET @sqlcommand = @sqlcommand + N''
DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY); ''

IF @NewsFilterAuthors = '''' AND @NewsFilterGroups = ''''
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END ''
		END
	END
	ELSE
	BEGIN
		-- ovaj dio odnosi se na filtriranje autora
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
				WHERE mgi.ModuleID = @OuterModuleID ''
		END
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				IF @FillterSettingsSource = 1 -- by portal
				BEGIN
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
						WHERE pgi.PortalID = @PortalID
				END
				ELSE -- by modul
				BEGIN
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
						WHERE mgi.ModuleID = @ModuleID
				END ''
			END
			ELSE IF @FilterByAuthor <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor; ''
			END
			ELSE IF @FilterByGroupID <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
					WHERE agi.GroupID = @FilterByGroupID ''
			END
		END
	END
END
ELSE
BEGIN
	SET @FilterAuthorOrAuthors = 1;
	IF @NewsFilterAuthors <> '''' AND @NewsFilterGroups <> ''''
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID WHERE PortalID = @PortalID
		UNION
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID ''
	ELSE IF @NewsFilterAuthors <> ''''
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID WHERE PortalID = @PortalID ''
	ELSE IF @NewsFilterGroups <> ''''
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT ap.[UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID ''
END

SET @sqlcommand = @sqlcommand + N'' DECLARE @CurrentArticlePosition INT '';

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N''[Text]''
				WHEN 3 THEN N''[Int]''
				WHEN 4 THEN N''[Decimal]''
				WHEN 5 THEN N''[Decimal]''
				WHEN 6 THEN N''[Text]''
				WHEN 9 THEN N''[DateTime]''
				WHEN 10 THEN N''[Text]''
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N''[PublishDate]'';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N''[PublishDate]'';
	END
END
IF @OrderByColumnName = N''NEWID()''
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N'' '' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN

	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(512)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10)NOT NULL,
		CFWhereRoule NVARCHAR(2000) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND cf.FieldElementID IN ('' + STUFF((SELECT '','' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('''')), 1, 1, '''') + '')'' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND cf.FieldElementID IN ('' + STUFF((SELECT '','' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('''')), 1, 1, '''') + '')'' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);
		DECLARE @FilterValue NVARCHAR(2000);
		
		SET @CFFilterQuery = N''SELECT CFFilteredArticles.ArticleID FROM ('';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValue = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N''AND''
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +		
N''SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE '' + @FilterValue + ''
) AS OnlyWithGoogleMaps
WHERE Recency >= '' + CAST(@ElementsCount AS varchar(20)) + '' ''
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N''SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE '' + @FilterValue + '' ''
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N'' INTERSECT ''
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SET @FilterValue = (SELECT CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow);

				SET @CFFilterQuery = @CFFilterQuery +
N''SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE '' + @FilterValue + '' ''

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N'' INTERSECT ''
			END

		END
	END
	
	SET @CFFilterQuery = @CFFilterQuery + N'') AS CFFilteredArticles''
	
	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

DECLARE @MainFilter NVARCHAR(MAX);

SET @MainFilter = N''
;WITH MainFilters AS(
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

		IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
		IF @FilterByDNNGroupID <> 0 
			SET @MainFilter = @MainFilter + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
		ELSE IF @FilterByDNNUserID <> 0
			SET @MainFilter = @MainFilter + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

		IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
		IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
	SET @MainFilter = @MainFilter + N''
	WHERE na.PortalID=@PortalID
		AND na.EventArticle = 1 ''
		IF @AdminFuturePostsVisible = 1
		BEGIN
			IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
			ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
		END
		ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		
		IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
		IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
		IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
	SET @MainFilter = @MainFilter + N''
),
AllContent AS(''

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @MainFilter = @MainFilter + N''
	SELECT ArticleID,RecurringID, ROW_NUMBER() OVER (ORDER BY ''
	IF @FirstOrderBy = ''Featured DESC''
		SET @MainFilter = @MainFilter + N''Featured DESC, ''
		
	IF @OrderByDirection = ''ASC''
		SET @MainFilter = @MainFilter + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
	
	SET @MainFilter = @MainFilter + @CleanOrderColumnWithDirection + N'', ArticleID) AS ArticlePosition ''
END
ELSE
BEGIN
	SET @MainFilter = @MainFilter + N''
	SELECT ArticleID,RecurringID, ROW_NUMBER() OVER (ORDER BY ''
	IF @FirstOrderBy = ''Featured DESC'' SET @MainFilter = @MainFilter + N''Featured DESC, ''

	SET @MainFilter = @MainFilter + @OrderByColumnName + N'' '' + @OrderByDirection + N'', ArticleID) AS ArticlePosition ''
END
	
	SET @MainFilter = @MainFilter + N''
	FROM (
		SELECT n.ArticleID,
			CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate,
			CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
			n.Title,n.NumberOfViews,n.RatingValue,n.DateAdded,n.PublishDate,n.ExpireDate,n.LastModified,n.NumberOfComments,n.Featured ''
		
		IF @OrderByCustomFieldID IS NOT NULL
			SET @MainFilter = @MainFilter + N'',fv.'' + @OrderByColumnName
		
		SET @MainFilter = @MainFilter + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND ''
		IF @DateRangeType = 2
			SET @MainFilter = @MainFilter + N''
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
		ELSE IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
				ELSE
					SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
			END
		ELSE IF @DateRangeType = 0
			SET @MainFilter = @MainFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
		ELSE
			SET @MainFilter = @MainFilter + N'' 1 = 0''
		
		IF @OrderByCustomFieldID IS NOT NULL
		BEGIN
			SET @MainFilter = @MainFilter + N''
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID''
		END
		
		SET @MainFilter = @MainFilter + N''
			WHERE n.ArticleID IN( ''
		
		IF @FilterByCustomFields = 1
			SET @MainFilter = @MainFilter + N'' SELECT ArticleID FROM (''
		
		SET @MainFilter = @MainFilter + N''
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
				WHERE na.HasPermissions = 0
					AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
					AND ne.Recurring = 0 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
						ELSE
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
					SET @MainFilter = @MainFilter + N''
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
				IF @DateRangeType = 2
					SET @MainFilter = @MainFilter + N''
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
						ELSE
							SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
					END
				ELSE IF @DateRangeType = 0
					SET @MainFilter = @MainFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
				ELSE SET @MainFilter = @MainFilter + N'' 1 = 0 ''
				SET @MainFilter = @MainFilter + N''
				WHERE na.HasPermissions = 0
					AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
					AND ne.Recurring = 1 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					END
				SET @MainFilter = @MainFilter + N''
			) AS HasPermissionsFalse
			UNION ALL
			SELECT [ArticleID] FROM (
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
					WHERE na.HasPermissions = 1
						AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
						AND ne.Recurring = 0 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
						IF @UserID = -1 SET @MainFilter = @MainFilter + N'' AND aup.UserID IS NULL ''
						ELSE SET @MainFilter = @MainFilter + N'' AND aup.UserID = @UserID ''
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
						ELSE
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
					SET @MainFilter = @MainFilter + N''
					UNION
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0	
					WHERE na.HasPermissions = 1
						AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
						AND ne.Recurring = 0 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
						ELSE
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
					SET @MainFilter = @MainFilter + N''
				) AS NotRecurring
				UNION ALL
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
					IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N''
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
							ELSE
								SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
						END
					ELSE IF @DateRangeType = 0
						SET @MainFilter = @MainFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
					ELSE SET @MainFilter = @MainFilter + N'' 1 = 0 ''
					SET @MainFilter = @MainFilter + N''
					WHERE na.HasPermissions = 1
						AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
						AND ne.Recurring = 1 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
						IF @UserID = -1 SET @MainFilter = @MainFilter + N'' AND aup.UserID IS NULL ''
						ELSE SET @MainFilter = @MainFilter + N'' AND aup.UserID = @UserID ''
					END
					SET @MainFilter = @MainFilter + N'' 
					UNION
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
					IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N''
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
							ELSE
								SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
						END
					ELSE IF @DateRangeType = 0
						SET @MainFilter = @MainFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
					ELSE SET @MainFilter = @MainFilter + N'' 1 = 0 ''
					SET @MainFilter = @MainFilter + N''
					WHERE na.HasPermissions = 1
						AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
						AND ne.Recurring = 1 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					END
					SET @MainFilter = @MainFilter + N'' 
				) AS Recurring
			) AS HasPermissionsTrue	''
			
			IF @FilterByCustomFields = 1
				SET @MainFilter = @MainFilter + N'') AllBeforeFilters INTERSECT '' + @CFFilterQuery
		
		SET @MainFilter = @MainFilter + N'' 			
		)
	) AS AllArticles
) '';

DECLARE @MainCondition VARCHAR(500);
IF @RecurringID IS NULL
	SET @sqlcommand = @sqlcommand + @MainFilter +N'' SELECT @CurrentArticlePosition = ArticlePosition FROM AllContent WHERE ArticleID = @CurrentArticleID; ''
ELSE
	SET @sqlcommand = @sqlcommand + @MainFilter +N'' SELECT @CurrentArticlePosition = ArticlePosition FROM AllContent WHERE ArticleID = @CurrentArticleID AND RecurringID = @RecurringID; ''

SET @sqlcommand = @sqlcommand + '' '' + @MainFilter;

IF @LocaleCode IS NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N''
SELECT TOP (3) n.[ArticleID],apn.RecurringID,n.[Title],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN AllContent AS apn ON n.ArticleID = apn.ArticleID
WHERE apn.ArticlePosition = @CurrentArticlePosition
	OR (apn.ArticlePosition = @CurrentArticlePosition - 1)
	OR (apn.ArticlePosition = @CurrentArticlePosition + 1)
ORDER BY apn.ArticlePosition ''
END
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N''
SELECT TOP (3) n.[ArticleID],apn.RecurringID,
	CASE WHEN ncl.ArticleID IS NULL THEN n.[Title] ELSE ncl.[Title] END AS Title,
	CASE WHEN ncl.ArticleID IS NULL THEN n.[TitleLink] ELSE ncl.[clTitleLink] END AS TitleLink,
	n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN AllContent AS apn ON n.ArticleID = apn.ArticleID
LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = apn.ArticleID AND ncl.LocaleCode = @LocaleCode
WHERE apn.ArticlePosition = @CurrentArticlePosition
	OR (apn.ArticlePosition = @CurrentArticlePosition - 1)
	OR (apn.ArticlePosition = @CurrentArticlePosition + 1)
ORDER BY apn.ArticlePosition ''
END

SET @sqlcommand = @sqlcommand + N''
IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;
IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories; ''

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@CurrentArticleID = @CurrentArticleID
	,@RecurringID = @RecurringID
	,@DateRangeType = @DateRangeType
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@StartDate = @StartDate
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlePreviousNext]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlePreviousNext]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@CurrentArticleID INT,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@DateRange BIT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,

	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = '''',
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = '''',
	@NewsFilterAuthors NVARCHAR(1000) = '''',
	@NewsFilterGroups NVARCHAR(1000) = '''',
	@FilterByTagID INT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@FilterByCustomFields BIT = 0
AS
SET NOCOUNT ON;
DECLARE @EditAll TINYINT;

DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF @AdminOrSuperUser = 1 OR (@EditOnlyAsOwner = 0 AND @Perm_EditAllCategores = 1) SET @EditAll = 1;
ELSE IF EXISTS(SELECT * FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)) SET @EditAll = 2;
ELSE SET @EditAll = 3;

DECLARE @sqlcommand NVARCHAR(max);
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N''
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@CurrentArticleID INT
	,@DateRange BIT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@LocaleCode NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@FilterByTagID INT''

SET @sqlcommand = N''
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); ''

IF @NewsFilterCategories = ''''
BEGIN
	IF @OuterModuleID = 0 AND @FilterByArticles = 1
		SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- -- portal settings
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; ''
	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID; ''
		SET @FilterByTags = 1; -- must bee because of flow
	END
	ELSE IF @OuterModuleID = 0 AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- portal settings
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; ''
END

SET @sqlcommand = @sqlcommand + N''

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
	
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO #UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND ( ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate ) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;

CREATE TABLE #UserViewCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserViewCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EDS_ViewPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_ViewAllCategores,@PermissionSettingsSource,@CurrentDate) ''

SET @sqlcommand = @sqlcommand + N''
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;

CREATE TABLE #UserViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;

CREATE TABLE #FiltredByCategories (CategoryID INT NOT NULL PRIMARY KEY); ''

IF @NewsFilterCategories <> ''''
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #FiltredByCategories SELECT fc.KeyID FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID IN (SELECT CAtegoryID FROM #FiltredByCategories); ''
END
ELSE
BEGIN
	IF @OnlyOneCategory IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID = @OnlyOneCategory;
		INSERT INTO #FiltredByCategories SELECT @OnlyOneCategory; ''
	END
	ELSE IF @OuterModuleID <> 0
	BEGIN
		IF @CategoryFilterType = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
				
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID; ''
		END
		ELSE IF @CategoryFilterType = 2
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			;WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
		END
	END
	ELSE
	BEGIN
		IF @CategoryFilterType = 0 
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1
		BEGIN
			IF @FillterSettingsSource = 1
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID; ''
			END
			ELSE
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID; ''
			END
		END
		ELSE IF @CategoryFilterType = 2
		BEGIN
			IF @FillterSettingsSource = 1
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
			ELSE
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
		END
	END
END

DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

IF @NewsFilterAuthors = '''' AND @NewsFilterGroups = ''''
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
			IF @FilterByAuthor <> 0
				SET @FilterAuthorOrAuthors = 1;
	END
	ELSE
	BEGIN
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE
		BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;	
		ELSE IF @FilterByAuthor <> 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE IF @FilterByGroupID <> 0
			SET @FilterAuthorOrAuthors = 1;
		END
	END
END
ELSE
	SET @FilterAuthorOrAuthors = 1;

SET @sqlcommand = @sqlcommand + N''
DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY); ''

IF @NewsFilterAuthors = '''' AND @NewsFilterGroups = ''''
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END ''
		END
	END
	ELSE
	BEGIN
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
				WHERE mgi.ModuleID = @OuterModuleID ''
		END
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				IF @FillterSettingsSource = 1 -- by portal
				BEGIN
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
						WHERE pgi.PortalID = @PortalID
				END
				ELSE -- by modul
				BEGIN
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
						WHERE mgi.ModuleID = @ModuleID
				END ''
			END
			ELSE IF @FilterByAuthor <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor; ''
			END
			ELSE IF @FilterByGroupID <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
					WHERE agi.GroupID = @FilterByGroupID ''
			END
		END
	END
END
ELSE
BEGIN
	SET @FilterAuthorOrAuthors = 1;
	IF @NewsFilterAuthors <> '''' AND @NewsFilterGroups <> ''''
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID WHERE PortalID = @PortalID
		UNION
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID ''
	ELSE IF @NewsFilterAuthors <> ''''
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID WHERE PortalID = @PortalID ''
	ELSE IF @NewsFilterGroups <> ''''
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT ap.[UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID ''
END

SET @sqlcommand = @sqlcommand + N'' DECLARE @CurrentArticlePosition INT '';

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N''[Text]''
				WHEN 3 THEN N''[Int]''
				WHEN 4 THEN N''[Decimal]''
				WHEN 5 THEN N''[Decimal]''
				WHEN 6 THEN N''[Text]''
				WHEN 9 THEN N''[DateTime]''
				WHEN 10 THEN N''[Text]''
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N''[PublishDate]'';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N''[PublishDate]'';
	END
END
IF @OrderByColumnName = N''NEWID()''
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N'' '' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN

	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(512)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10)NOT NULL,
		CFWhereRoule NVARCHAR(2000) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND cf.FieldElementID IN ('' + STUFF((SELECT '','' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('''')), 1, 1, '''') + '')'' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND cf.FieldElementID IN ('' + STUFF((SELECT '','' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('''')), 1, 1, '''') + '')'' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);
		DECLARE @FilterValue NVARCHAR(2000);
		
		SET @CFFilterQuery = N''SELECT CFFilteredArticles.ArticleID FROM ('';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValue = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N''AND''
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +		
N''SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE '' + @FilterValue + ''
) AS OnlyWithGoogleMaps
WHERE Recency >= '' + CAST(@ElementsCount AS varchar(20)) + '' ''
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N''SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE '' + @FilterValue + '' ''
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N'' INTERSECT ''
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SET @FilterValue = (SELECT CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow);

				SET @CFFilterQuery = @CFFilterQuery +
N''SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE '' + @FilterValue + '' ''

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N'' INTERSECT ''
			END

		END
	END
	
	SET @CFFilterQuery = @CFFilterQuery + N'') AS CFFilteredArticles''
	
	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

DECLARE @MainFilter NVARCHAR(MAX);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @MainFilter = N''
	SELECT n.ArticleID, ROW_NUMBER() OVER (ORDER BY ''
	IF @FirstOrderBy = ''Featured DESC''
		SET @MainFilter = @MainFilter + N''n.Featured DESC, ''
		
	IF @OrderByDirection = ''ASC''
		SET @MainFilter = @MainFilter + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
	
	SET @MainFilter = @MainFilter + N''fv.''+ @CleanOrderColumnWithDirection + N'', n.ArticleID) AS ArticlePosition
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
	WHERE n.ArticleID IN (''
END
ELSE
BEGIN
	SET @MainFilter = N''
	SELECT n.ArticleID, ROW_NUMBER() OVER (ORDER BY ''
	IF @FirstOrderBy = ''Featured DESC''
		SET @MainFilter = @MainFilter + N''n.Featured DESC, ''
	SET @MainFilter = @MainFilter + @OrderByColumnName + N'' '' + @OrderByDirection + N'', n.ArticleID) AS ArticlePosition
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	WHERE n.ArticleID IN (''
END

	IF @FilterByCustomFields = 1
		SET @MainFilter = @MainFilter + N'' SELECT ArticleID FROM (''

	SET @MainFilter = @MainFilter + N''
		SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	''
		
		-- ovo je iz main filtera
		IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
		IF @FilterByDNNGroupID <> 0 
			SET @MainFilter = @MainFilter + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
		ELSE IF @FilterByDNNUserID <> 0
			SET @MainFilter = @MainFilter + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''	
		IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
		IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
		-- do tud

		SET @MainFilter = @MainFilter + N''
		WHERE na.HasPermissions = 0
			
			AND na.PortalID=@PortalID
			AND na.EventArticle = 0 ''
			IF @EditAll <> 1
			BEGIN
				SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''
				IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
			END
			
			-- ovo je iz main filtera
			IF @AdminFuturePostsVisible = 1
			BEGIN
				IF @DateRange = 2 SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate ''
				ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
			END
			ELSE IF @DateRange = 2 OR @DateRange = 1 SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
			ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
			
			IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
			IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
			IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
			ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
			-- do tud
			
		SET @MainFilter = @MainFilter + N''
		UNION ALL
		SELECT ArticleID FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

				IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
				IF @FilterByDNNGroupID <> 0 
					SET @MainFilter = @MainFilter + N''
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
				ELSE IF @FilterByDNNUserID <> 0
					SET @MainFilter = @MainFilter + N''
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

				IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
				IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
			
			SET @MainFilter = @MainFilter + N''
			WHERE na.HasPermissions = 1
				
				AND na.PortalID=@PortalID
				AND na.EventArticle = 0 ''
				IF @AdminFuturePostsVisible = 1
				BEGIN
					IF @DateRange = 2 SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
				END
				ELSE IF @DateRange = 2 OR @DateRange = 1 SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
				ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
				
				IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
				IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
				IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
				ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
				
				IF @EditAll <> 1
				BEGIN
					SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 ''
					IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					IF @UserID = -1 SET @MainFilter = @MainFilter + N'' AND aup.UserID IS NULL ''
					ELSE SET @MainFilter = @MainFilter + N'' AND aup.UserID = @UserID ''
				END
				SET @MainFilter = @MainFilter + N''
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

				IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
				IF @FilterByDNNGroupID <> 0 
					SET @MainFilter = @MainFilter + N''
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
				ELSE IF @FilterByDNNUserID <> 0
					SET @MainFilter = @MainFilter + N''
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

				IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
				IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
			
			SET @MainFilter = @MainFilter + N''	 		 
			WHERE na.HasPermissions = 1		
				AND na.PortalID=@PortalID
				AND na.EventArticle = 0 ''
				IF @AdminFuturePostsVisible = 1
				BEGIN
					IF @DateRange = 2 SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
				END
				ELSE IF @DateRange = 2 OR @DateRange = 1 SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
				ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
				
				IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
				IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
				IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
				ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
			
				IF @EditAll <> 1
				BEGIN
					SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
				END
				SET @MainFilter = @MainFilter + N''
		) AS HasPermissionsTrue'';

	IF @FilterByCustomFields = 1
		SET @MainFilter = @MainFilter + N'') AllBeforeFilters INTERSECT '' + @CFFilterQuery

	SET @MainFilter = @MainFilter + N'' ) ''

SET @sqlcommand = @sqlcommand + N''
SELECT @CurrentArticlePosition = allContent.ArticlePosition FROM (''+ @MainFilter +'') AS allContent WHERE allContent.ArticleID = @CurrentArticleID;
'';

IF @LocaleCode IS NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N''
SELECT TOP (3) n.[ArticleID],n.[Title],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN (''+ @MainFilter +'') AS apn ON n.ArticleID = apn.ArticleID
WHERE apn.ArticlePosition = @CurrentArticlePosition
	OR (apn.ArticlePosition = @CurrentArticlePosition - 1)
	OR (apn.ArticlePosition = @CurrentArticlePosition + 1)
ORDER BY apn.ArticlePosition ''
END
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N''	
SELECT TOP (3) n.[ArticleID],
	CASE WHEN ncl.ArticleID IS NULL THEN n.[Title] ELSE ncl.[Title] END AS Title,
	CASE WHEN ncl.ArticleID IS NULL THEN n.[TitleLink] ELSE ncl.[clTitleLink] END AS TitleLink,
	n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN (''+ @MainFilter +'') AS apn ON n.ArticleID = apn.ArticleID
LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = apn.ArticleID AND ncl.LocaleCode = @LocaleCode
WHERE apn.ArticlePosition = @CurrentArticlePosition
	OR (apn.ArticlePosition = @CurrentArticlePosition - 1)
	OR (apn.ArticlePosition = @CurrentArticlePosition + 1)
ORDER BY apn.ArticlePosition ''
END

SET @sqlcommand = @sqlcommand + N''
IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;
IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories; ''
		
exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@CurrentArticleID = @CurrentArticleID
	,@DateRange = @DateRange
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@LocaleCode = @LocaleCode
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@FilterByTagID = @FilterByTagID

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@CurrentArticleID INT,
	@RecurringID INT = NULL,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@DateRange BIT = 0,
	@DateRangeType TINYINT = 0,
	@StartDate DATETIME = NULL,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL,
	@eToDate DATETIME = NULL,

	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = '''',
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = '''',
	@NewsFilterAuthors NVARCHAR(1000) = '''',
	@NewsFilterGroups NVARCHAR(1000) = '''',
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange TINYINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@FilterByCustomFields BIT = 0
AS
SET NOCOUNT ON;
DECLARE @EditAll TINYINT;

DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF @AdminOrSuperUser = 1 OR (@EditOnlyAsOwner = 0 AND @Perm_EditAllCategores = 1) SET @EditAll = 1;
ELSE IF EXISTS(SELECT * FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)) SET @EditAll = 2;
ELSE SET @EditAll = 3;

DECLARE @sqlcommand NVARCHAR(max);
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N''
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@CurrentArticleID INT
	,@RecurringID INT
	,@DateRange BIT
	,@DateRangeType TINYINT
	,@StartDate DATETIME
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange TINYINT''

SET @sqlcommand = N''
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); ''

IF @NewsFilterCategories = ''''
BEGIN
	IF @OuterModuleID = 0 AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- -- portal settings
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; ''

	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID ''
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID = 0 AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- portal settings
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; ''
END

SET @sqlcommand = @sqlcommand + N''

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
	
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO #UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND ( ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate ) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;

CREATE TABLE #UserViewCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserViewCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EDS_ViewPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_ViewAllCategores,@PermissionSettingsSource,@CurrentDate) ''

SET @sqlcommand = @sqlcommand + N'' 

IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;

CREATE TABLE #UserViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;

CREATE TABLE #FiltredByCategories (CategoryID INT NOT NULL PRIMARY KEY); ''

IF @NewsFilterCategories <> ''''
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #FiltredByCategories SELECT fc.KeyID FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID IN (SELECT CAtegoryID FROM #FiltredByCategories); ''
END
ELSE
BEGIN
	IF @OnlyOneCategory IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID = @OnlyOneCategory;
		INSERT INTO #FiltredByCategories SELECT @OnlyOneCategory; ''
	END
	ELSE IF @OuterModuleID <> 0
	BEGIN
		IF @CategoryFilterType = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
				
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID; ''
		END
		ELSE IF @CategoryFilterType = 2
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			;WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
		END
	END
	ELSE
	BEGIN
		IF @CategoryFilterType = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1
		BEGIN
			IF @FillterSettingsSource = 1
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID; ''
			END
			ELSE
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID; ''
			END
		END
		ELSE IF @CategoryFilterType = 2
		BEGIN
			IF @FillterSettingsSource = 1
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
			ELSE
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
		END
	END
END

DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

IF @NewsFilterAuthors = '''' AND @NewsFilterGroups = ''''
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
			IF @FilterByAuthor <> 0
				SET @FilterAuthorOrAuthors = 1;
	END
	ELSE
	BEGIN
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE
		BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;	
		ELSE IF @FilterByAuthor <> 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE IF @FilterByGroupID <> 0
			SET @FilterAuthorOrAuthors = 1;
		END
	END
END
ELSE
	SET @FilterAuthorOrAuthors = 1;

SET @sqlcommand = @sqlcommand + N''
DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY); ''

IF @NewsFilterAuthors = '''' AND @NewsFilterGroups = ''''
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END ''
		END
	END
	ELSE
	BEGIN
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
				WHERE mgi.ModuleID = @OuterModuleID ''
		END
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				IF @FillterSettingsSource = 1 -- by portal
				BEGIN
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
						WHERE pgi.PortalID = @PortalID
				END
				ELSE -- by modul
				BEGIN
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
						WHERE mgi.ModuleID = @ModuleID
				END ''
			END
			ELSE IF @FilterByAuthor <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor; ''
			END
			ELSE IF @FilterByGroupID <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
					WHERE agi.GroupID = @FilterByGroupID ''
			END
		END
	END
END
ELSE
BEGIN
	SET @FilterAuthorOrAuthors = 1;
	IF @NewsFilterAuthors <> '''' AND @NewsFilterGroups <> ''''
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID WHERE PortalID = @PortalID
		UNION
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID ''
	ELSE IF @NewsFilterAuthors <> ''''
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID WHERE PortalID = @PortalID ''
	ELSE IF @NewsFilterGroups <> ''''
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT ap.[UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID ''
END

SET @sqlcommand = @sqlcommand + N'' DECLARE @CurrentArticlePosition INT '';

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N''[Text]''
				WHEN 3 THEN N''[Int]''
				WHEN 4 THEN N''[Decimal]''
				WHEN 5 THEN N''[Decimal]''
				WHEN 6 THEN N''[Text]''
				WHEN 9 THEN N''[DateTime]''
				WHEN 10 THEN N''[Text]''
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N''[PublishDate]'';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N''[PublishDate]'';
	END
END
IF @OrderByColumnName = N''NEWID()''
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N'' '' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN

	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(512)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10)NOT NULL,
		CFWhereRoule NVARCHAR(2000) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND cf.FieldElementID IN ('' + STUFF((SELECT '','' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('''')), 1, 1, '''') + '')'' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND cf.FieldElementID IN ('' + STUFF((SELECT '','' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('''')), 1, 1, '''') + '')'' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);
		DECLARE @FilterValue NVARCHAR(2000);
		
		SET @CFFilterQuery = N''SELECT CFFilteredArticles.ArticleID FROM ('';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValue = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N''AND''
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +		
N''SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE '' + @FilterValue + ''
) AS OnlyWithGoogleMaps
WHERE Recency >= '' + CAST(@ElementsCount AS varchar(20)) + '' ''
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N''SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE '' + @FilterValue + '' ''
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N'' INTERSECT ''
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SET @FilterValue = (SELECT CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow);

				SET @CFFilterQuery = @CFFilterQuery +
N''SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE '' + @FilterValue + '' ''

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N'' INTERSECT ''
			END

		END
	END
	
	SET @CFFilterQuery = @CFFilterQuery + N'') AS CFFilteredArticles''
	
	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

DECLARE @MainFilter NVARCHAR(MAX);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @MainFilter = N''
	;WITH AllContent AS(
	SELECT ArticleID,RecurringID, ROW_NUMBER() OVER (ORDER BY ''
	IF @FirstOrderBy = ''Featured DESC''
		SET @MainFilter = @MainFilter + N''Featured DESC, ''
		
	IF @OrderByDirection = ''ASC''
		SET @MainFilter = @MainFilter + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
	
	SET @MainFilter = @MainFilter + @CleanOrderColumnWithDirection + N'', ArticleID) AS ArticlePosition ''
END
ELSE
BEGIN
	SET @MainFilter = N''
	;WITH AllContent AS(
	SELECT ArticleID,RecurringID, ROW_NUMBER() OVER (ORDER BY ''
	IF @FirstOrderBy = ''Featured DESC''
		SET @MainFilter = @MainFilter + N''Featured DESC, ''
	SET @MainFilter = @MainFilter + @OrderByColumnName + N'' '' + @OrderByDirection + N'', ArticleID) AS ArticlePosition ''
END

	SET @MainFilter = @MainFilter + N''
	FROM (
		SELECT n.ArticleID,
			CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
			CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
			n.Title,n.NumberOfViews,n.RatingValue,n.DateAdded,n.PublishDate,n.ExpireDate,n.LastModified,n.NumberOfComments,n.Featured ''
		
		IF @OrderByCustomFieldID IS NOT NULL
			SET @MainFilter = @MainFilter + N'',fv.'' + @OrderByColumnName
		
		SET @MainFilter = @MainFilter + N''	
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND ''
		IF @DateRangeType = 2
			SET @MainFilter = @MainFilter + N''
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
		ELSE IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
				ELSE
					SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
			END
		ELSE IF @DateRangeType = 0
			SET @MainFilter = @MainFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
		ELSE
			SET @MainFilter = @MainFilter + N'' 1 = 0''
		
		IF @OrderByCustomFieldID IS NOT NULL
		BEGIN
			SET @MainFilter = @MainFilter + N''
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID ''
		END
		
		SET @MainFilter = @MainFilter + N''
			WHERE n.ArticleID IN( ''
		
		IF @FilterByCustomFields = 1
			SET @MainFilter = @MainFilter + N'' SELECT ArticleID FROM (''
		
		SET @MainFilter = @MainFilter + N''
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter) ''

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
				
				SET @MainFilter = @MainFilter + N''
				WHERE na.HasPermissions = 0
					AND na.EventArticle = 0
					AND na.PortalID=@PortalID ''
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
						ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
					IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
					ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
	
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					END
					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				SET @MainFilter = @MainFilter + N''
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''
				
					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
				
				SET @MainFilter = @MainFilter + N''
				WHERE na.HasPermissions = 0
					AND ne.Recurring = 0
					AND na.EventArticle = 1
					
					AND na.PortalID=@PortalID ''
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
						ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
					IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
					ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
					
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
						ELSE
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
					SET @MainFilter = @MainFilter + N''
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
						IF @DateRangeType = 2
							SET @MainFilter = @MainFilter + N''
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
						ELSE IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
								ELSE
									SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
							END
						ELSE IF @DateRangeType = 0
							SET @MainFilter = @MainFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
						ELSE SET @MainFilter = @MainFilter + N'' 1 = 0 ''
						
					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
					
				SET @MainFilter = @MainFilter + N''
				WHERE na.HasPermissions = 0
					AND na.EventArticle = 1
					AND ne.Recurring = 1
					
					AND na.PortalID=@PortalID ''
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
						ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
					IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
					ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
					
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					END
				SET @MainFilter = @MainFilter + N''
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
				
				SET @MainFilter = @MainFilter + N''
				WHERE na.HasPermissions = 1
					AND na.EventArticle = 0
					
					AND na.PortalID=@PortalID ''
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
						ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
					IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
					ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''

					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
						IF @UserID = -1 SET @MainFilter = @MainFilter + N'' AND aup.UserID IS NULL ''
						ELSE SET @MainFilter = @MainFilter + N'' AND aup.UserID = @UserID ''
					END
					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				SET @MainFilter = @MainFilter + N''
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
					
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
								
					SET @MainFilter = @MainFilter + N''					 	 
				WHERE na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 0
					
					AND na.PortalID=@PortalID ''
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
						ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
					IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
					ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
					
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
						IF @UserID = -1 SET @MainFilter = @MainFilter + N'' AND aup.UserID IS NULL ''
						ELSE SET @MainFilter = @MainFilter + N'' AND aup.UserID = @UserID ''
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
						ELSE
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
					SET @MainFilter = @MainFilter + N''
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
					IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N''
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
							ELSE
								SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
						END
					ELSE IF @DateRangeType = 0
						SET @MainFilter = @MainFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
					ELSE SET @MainFilter = @MainFilter + N'' 1 = 0 ''
					
					SET @MainFilter = @MainFilter + N''
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
								
					SET @MainFilter = @MainFilter + N''
				WHERE na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 1
					
					AND na.PortalID=@PortalID ''
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
						ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
					IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
					ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
					
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
						IF @UserID = -1 SET @MainFilter = @MainFilter + N'' AND aup.UserID IS NULL ''
						ELSE SET @MainFilter = @MainFilter + N'' AND aup.UserID = @UserID ''
					END
					SET @MainFilter = @MainFilter + N''
			) AS WithNoRolePermissions
			UNION
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
				
				SET @MainFilter = @MainFilter + N''
					 
				WHERE na.HasPermissions = 1
					AND na.EventArticle = 0
					
					AND na.PortalID=@PortalID ''
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
						ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
					IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
					ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
					
				IF @EditAll <> 1
				BEGIN
					SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
				END
				IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				SET @MainFilter = @MainFilter + N''
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
									
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
				
				SET @MainFilter = @MainFilter + N''
				WHERE na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 0
					
					AND na.PortalID=@PortalID ''
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
						ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
					IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
					ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
					
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					END
					IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
							ELSE
								SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
						END
						ELSE IF @DateRangeType = 2
							SET @MainFilter = @MainFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
						SET @MainFilter = @MainFilter + N''
				UNION All
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
					IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N''
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
							ELSE
								SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
						END
					ELSE IF @DateRangeType = 0
						SET @MainFilter = @MainFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
					ELSE SET @MainFilter = @MainFilter + N'' 1 = 0 ''
					
					SET @MainFilter = @MainFilter + N''
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
					
					SET @MainFilter = @MainFilter + N''
				WHERE na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 1
					
					AND na.PortalID=@PortalID ''
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
						ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
					IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
					ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
					
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					END
					SET @MainFilter = @MainFilter + N''
			) AS ByRolePermissions ''
			
			IF @FilterByCustomFields = 1
				SET @MainFilter = @MainFilter + N'') AllBeforeFilters INTERSECT '' + @CFFilterQuery
	
		SET @MainFilter = @MainFilter + N''	
		)
	) AS AllArticles
) '';

DECLARE @MainCondition VARCHAR(500);
IF @RecurringID IS NULL
	SET @sqlcommand = @sqlcommand + @MainFilter +N'' SELECT @CurrentArticlePosition = ArticlePosition FROM AllContent WHERE ArticleID = @CurrentArticleID; ''
ELSE
	SET @sqlcommand = @sqlcommand + @MainFilter +N'' SELECT @CurrentArticlePosition = ArticlePosition FROM AllContent WHERE ArticleID = @CurrentArticleID AND RecurringID = @RecurringID; ''

SET @sqlcommand = @sqlcommand + '' '' + @MainFilter;

IF @LocaleCode IS NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N''
SELECT TOP (3) n.[ArticleID],apn.RecurringID,n.[Title],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN AllContent AS apn ON n.ArticleID = apn.ArticleID
WHERE apn.ArticlePosition = @CurrentArticlePosition 
	OR (apn.ArticlePosition = @CurrentArticlePosition - 1)
	OR (apn.ArticlePosition = @CurrentArticlePosition + 1)
ORDER BY apn.ArticlePosition ''
END
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N''	
SELECT TOP (3) n.[ArticleID],apn.RecurringID,
	CASE WHEN ncl.ArticleID IS NULL THEN n.[Title] ELSE ncl.[Title] END AS Title,
	CASE WHEN ncl.ArticleID IS NULL THEN n.[TitleLink] ELSE ncl.[clTitleLink] END AS TitleLink,
	n.[DetailType],n.[DetailTypeData],n.[ArticleImage]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN AllContent AS apn ON n.ArticleID = apn.ArticleID
LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = apn.ArticleID AND ncl.LocaleCode = @LocaleCode
WHERE apn.ArticlePosition = @CurrentArticlePosition
	OR (apn.ArticlePosition = @CurrentArticlePosition - 1)
	OR (apn.ArticlePosition = @CurrentArticlePosition + 1)
ORDER BY apn.ArticlePosition ''			
END

SET @sqlcommand = @sqlcommand + N''
IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;
IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories; ''

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@CurrentArticleID = @CurrentArticleID
	,@RecurringID = @RecurringID
	,@DateRange = @DateRange
	,@DateRangeType = @DateRangeType
	,@StartDate = @StartDate
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT = 1,
	@ItemsTo INT = 5,
	@DateRangeType TINYINT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 0,
	@FillterSettingsSource BIT = 0,
	@StartDate DATETIME = NULL,
	@OuterModuleID INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange TINYINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	@FilterByCustomFields BIT = 0
AS
SET NOCOUNT ON;
DECLARE @EditAll TINYINT;

DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF @AdminOrSuperUser = 1 OR (@EditOnlyAsOwner = 0 AND @Perm_EditAllCategores = 1) SET @EditAll = 1;
ELSE IF EXISTS(SELECT * FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)) SET @EditAll = 2;
ELSE SET @EditAll = 3;

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(2000);

SET @paramList = N''
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRangeType TINYINT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@StartDate DATETIME
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange TINYINT''
	
SET @sqlcommand = N''
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
	
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO #UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND ( ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate ) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;

CREATE TABLE #UserViewCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserViewCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EDS_ViewPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_ViewAllCategores,@PermissionSettingsSource,@CurrentDate)

IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;

CREATE TABLE #UserViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;

CREATE TABLE #FiltredByCategories (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#LocalizedCategories'''') IS NOT NULL
	DROP TABLE #LocalizedCategories; ''

IF @LocaleCode IS NOT NULL
SET @sqlcommand = @sqlcommand + N'' 
CREATE TABLE #LocalizedCategories (ID INT NOT NULL PRIMARY KEY, Name NVARCHAR(200)); ''

IF @EditAll = 2
SET @sqlcommand = @sqlcommand + N'' 

IF OBJECT_ID(''''tempdb..#UserEditCategories'''') IS NOT NULL
	DROP TABLE #UserEditCategories;

CREATE TABLE #UserEditCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate) ''

IF @NewsFilterCategories IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #FiltredByCategories SELECT fc.KeyID FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID IN (SELECT CAtegoryID FROM #FiltredByCategories); ''
END
ELSE
BEGIN

	IF @OuterModuleID = 0 AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; ''

	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID ''
		SET @FilterByTags = 1
	END	
	ELSE IF @OuterModuleID = 0 AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; ''

	IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID = @OnlyOneCategory;
		INSERT INTO #FiltredByCategories SELECT @OnlyOneCategory; ''
	END
	ELSE IF @OuterModuleID <> 0
	BEGIN
		IF @CategoryFilterType = 0 -- 0 All categories
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter 
			SELECT c.[CategoryID] FROM #UserViewCategories AS c
			WHERE c.[CategoryID] IN (SELECT mci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci WHERE mci.ModuleID = @OuterModuleID);

			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID; ''
		END
		ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			;WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
		END
	END
	ELSE
	BEGIN
		IF @CategoryFilterType = 0 -- 0 All categories
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		BEGIN
			IF @FillterSettingsSource = 1 -- portal
			BEGIN
				SET @sqlcommand = @sqlcommand + N''
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT c.[CategoryID] FROM #UserViewCategories AS c
				WHERE c.[CategoryID] IN (SELECT pci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci WHERE pci.PortalID = @PortalID);		
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID; ''
			END
			ELSE -- module
			BEGIN
				SET @sqlcommand = @sqlcommand + N''
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT c.[CategoryID] FROM #UserViewCategories AS c
				WHERE c.[CategoryID] IN (SELECT mci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci WHERE mci.ModuleID = @ModuleID);
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID; ''
			END
		END
		ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		BEGIN
			IF @FillterSettingsSource = 1 -- portal
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
			ELSE -- module
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
		END
	END
END

DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
			IF @FilterByAuthor <> 0
				SET @FilterAuthorOrAuthors = 1;
	END
	ELSE
	BEGIN
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE
		BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;	
		ELSE IF @FilterByAuthor <> 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE IF @FilterByGroupID <> 0
			SET @FilterAuthorOrAuthors = 1;
		END
	END
END
ELSE
	SET @FilterAuthorOrAuthors = 1;

SET @sqlcommand = @sqlcommand + N''
DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY); ''

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END ''
		END
	END
	ELSE
	BEGIN
		-- ovaj dio odnosi se na filtriranje autora
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; ''
		END
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				IF @FillterSettingsSource = 1
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID;
				ELSE
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; ''
			END
			ELSE IF @FilterByAuthor <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor; ''
			END
			ELSE IF @FilterByGroupID <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; ''
			END
		END
	END
END
ELSE
BEGIN
	-- treba selektirati sve autore ili grupe !!!
	SET @FilterAuthorOrAuthors = 1;
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE PortalID = @PortalID
		UNION
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID; ''
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE PortalID = @PortalID; ''
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT ap.[UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID; ''
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS ID, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID
	WHERE c.CategoryID IN (SELECT CategoryID FROM #UserViewCategories) AND c.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode; ''
	
SET @sqlcommand = @sqlcommand + N'' DECLARE @AllContentCount INT''

SET @TopInnerFilter = N'''';

	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N''''''''''
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID ''

	IF @HideUnlocalizedItems = 1 SET @TopInnerFilter = @TopInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

	IF @FilterByTags = 1 SET @TopInnerFilter = @TopInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
	IF @FilterByArticles = 1 SET @TopInnerFilter = @TopInnerFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
SET @TopInnerFilter = @TopInnerFilter + N''
WHERE na.PortalID=@PortalID
	AND na.EventArticle = 1 ''
	IF @AdminFuturePostsVisible = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
		ELSE SET @TopInnerFilter = @TopInnerFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
	ELSE SET @TopInnerFilter = @TopInnerFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		
	IF @LocaleCode IS NULL SET @TopInnerFilter = @TopInnerFilter + N'' AND na.HideDefaultLocale = 0 ''
	IF @Featured = 1 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.Featured = 1 ''
	IF @FilterByDNNUserID <> 0 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.UserID = @FilterByDNNUserID ''
	ELSE IF @FilterAuthorOrAuthors = 1 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''

	IF @EditAll <> 1
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.Approved = 1 ''
		SET @TopInnerFilter = @TopInnerFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''		
	END

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N''[Text]''
				WHEN 3 THEN N''[Int]''
				WHEN 4 THEN N''[Decimal]''
				WHEN 5 THEN N''[Decimal]''
				WHEN 6 THEN N''[Text]''
				WHEN 9 THEN N''[DateTime]''
				WHEN 10 THEN N''[Text]''
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N''[PublishDate]'';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N''[PublishDate]'';
	END
END

IF @OrderByColumnName = N''NEWID()''
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N'' '' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN

	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(512)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10)NOT NULL,
		CFWhereRoule NVARCHAR(2000) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND cf.FieldElementID IN ('' + STUFF((SELECT '','' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('''')), 1, 1, '''') + '')'' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND cf.FieldElementID IN ('' + STUFF((SELECT '','' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('''')), 1, 1, '''') + '')'' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);
		DECLARE @FilterValue NVARCHAR(2000);
		
		SET @CFFilterQuery = N''SELECT CFFilteredArticles.ArticleID FROM ('';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValue = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N''AND''
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +		
N''SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE '' + @FilterValue + ''
) AS OnlyWithGoogleMaps
WHERE Recency >= '' + CAST(@ElementsCount AS varchar(20)) + '' ''
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N''SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE '' + @FilterValue + '' ''
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N'' INTERSECT ''
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SET @FilterValue = (SELECT CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow);

				SET @CFFilterQuery = @CFFilterQuery +
N''SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE '' + @FilterValue + '' ''

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N'' INTERSECT ''
			END

		END
	END
	
	SET @CFFilterQuery = @CFFilterQuery + N'') AS CFFilteredArticles''
	
	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

SET @MainContentFilter = N''
;WITH AllContent AS( ''

	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
		SELECT ArticleID, CommentedDate,RecurringID,StartDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,inner_all.RecurringID
			,inner_all.StartDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID], inner_all.RecurringID ORDER BY ''
			
			IF @FirstOrderBy = ''Featured DESC'' SET @MainContentFilter = @MainContentFilter + N''inner_all.Featured DESC, ''
			
			SET @MainContentFilter = @MainContentFilter + N'' nc.[DateAdded] '' + @OrderByDirection + '') AS OnlyFirstOccurance
			
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc
		INNER JOIN ('';
	END
	
	SET @MainContentFilter = @MainContentFilter + N''
	SELECT n.ArticleID,n.Featured,
		CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate,
		CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND ''
	IF @DateRangeType = 2
		SET @MainContentFilter = @MainContentFilter + N''
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
	ELSE IF @DateRangeType = 1
		BEGIN
			IF @ListArchive = 0
				SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
			ELSE
				SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
		END
	ELSE IF @DateRangeType = 0
		SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
	ELSE
		SET @MainContentFilter = @MainContentFilter + N'' 1 = 0''
	
	SET @MainContentFilter = @MainContentFilter + N''
	WHERE n.ArticleID IN( ''
	 
	 -- tu bi trebal staviti okolo da se filtrira po and !!!
	 
	IF @UseAndOperator IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID		
			WHERE na.ArticleID IN ( '';
	END
	 
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N'' SELECT ArticleID FROM (''
	 
	SET @MainContentFilter = @MainContentFilter + N''
		SELECT [ArticleID] FROM (
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''

				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

				AND na.HasPermissions = 0
				AND ne.Recurring = 0 ''
				IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
					ELSE
						SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
				END
				ELSE IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
				
			SET @MainContentFilter = @MainContentFilter + N''
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
				IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N''
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
						ELSE
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
					END
				ELSE IF @DateRangeType = 0
					SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
				ELSE SET @MainContentFilter = @MainContentFilter + N'' 1 = 0 ''

				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

				AND na.HasPermissions = 0
				AND ne.Recurring = 1
		) AS HasPermissionsFalse
		UNION ALL
		SELECT [ArticleID] FROM (
			SELECT [ArticleID] FROM (
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

					AND na.HasPermissions = 1
					AND ne.Recurring = 0 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND aup.Show = 1 ''
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID IS NULL ''
						ELSE SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID = @UserID ''
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
						ELSE
							SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
				SET @MainContentFilter = @MainContentFilter + N''
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

					AND na.HasPermissions = 1
					AND ne.Recurring = 0 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
						ELSE
							SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
			SET @MainContentFilter = @MainContentFilter + N''
			) AS NotRecurring
			UNION ALL
			SELECT [ArticleID] FROM (
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
				IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N''
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
						ELSE
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
					END
				ELSE IF @DateRangeType = 0
					SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
				ELSE SET @MainContentFilter = @MainContentFilter + N'' 1 = 0 ''

				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

					AND na.HasPermissions = 1
					AND ne.Recurring = 1 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND aup.Show = 1 ''
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID IS NULL ''
						ELSE SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID = @UserID ''
					END
				SET @MainContentFilter = @MainContentFilter + N'' 
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
					IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N''
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
							ELSE
								SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
					ELSE SET @MainContentFilter = @MainContentFilter + N'' 1 = 0 ''

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

					AND na.HasPermissions = 1
					AND ne.Recurring = 1 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					END
					SET @MainContentFilter = @MainContentFilter + N'' 
			) AS Recurring
		) AS HasPermissionsTrue	''
	
	-- treba desti ako se koristi AND operator
	
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N'') AllBeforeFilters INTERSECT '' + @CFFilterQuery
	
	IF @UseAndOperator IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FiltredByCategories) '';
	END
	
	SET @MainContentFilter = @MainContentFilter + N''	
	) ''
	
	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'') AS inner_all ON nc.ArticleID = inner_all.ArticleID AND nc.Approved = ''''True'''' AND nc.PortalID = @PortalID
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1''
	END
	
SET @MainContentFilter = @MainContentFilter + N'' 
) ''

SET @sqlcommand = @sqlcommand + @MainContentFilter + N'' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent ''

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N''
SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
	,e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], ''
ELSE
SET @sqlcommand = @sqlcommand + N''
SELECT n.[ArticleID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], '';

IF @EditAll = 0
	SET @sqlcommand = @sqlcommand + N''0 AS CanEdit, ''
ELSE IF @EditAll = 1
	SET @sqlcommand = @sqlcommand + N''1 AS CanEdit, ''
ELSE IF @EditAll = 2
BEGIN
	IF @EditOnlyAsOwner = 0
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories))
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
	ELSE
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE n.UserID = @UserID AND c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
END
ELSE IF @EditAll = 3
BEGIN
	IF @EditOnlyAsOwner = 0
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
	ELSE
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
END
ELSE
	SET @sqlcommand = @sqlcommand + N''0 AS CanEdit, ''

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N''
	(SELECT c.CategoryID AS "@id", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserViewCategories) AND c.PortalID = @PortalID
	ORDER BY c.Position
	FOR XML PATH(''''category''''), ROOT(''''categories'''')) AS CatToShow, ''
ELSE
SET @sqlcommand = @sqlcommand + N''
	(SELECT c.CategoryID AS "@id", lc.Name AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.ID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''''category''''), ROOT(''''categories'''')) AS CatToShow, ''

SET @sqlcommand = @sqlcommand + N''
CASE n.Active
	WHEN 1 THEN 0
	WHEN 0 THEN 1
END AS Published, ''
IF @UserCanApprove = 0
	SET @sqlcommand = @sqlcommand + N''0 AS Approve, ''
ELSE
	SET @sqlcommand = @sqlcommand + N''
		CASE n.Approved
			WHEN 1 THEN 0
			WHEN 0 THEN n.Active
		END AS Approve, ''
SET @sqlcommand = @sqlcommand + N'' @AllContentCount AS ContentCount ''

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
				,ROW_NUMBER() OVER (ORDER BY '' IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inner_n.Featured DESC, ''SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'',e_fsd.'' + @OrderByColumnName + '',(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END)
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.'' + @OrderByColumnName + '' FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.'' + @OrderByColumnName + ''
				,ROW_NUMBER() OVER (ORDER BY ''
				IF @FirstOrderBy = ''Featured DESC''
					SET @sqlcommand = @sqlcommand + N''inner_n.Featured DESC, ''	
				IF @OrderByDirection = ''ASC''
					SET @sqlcommand = @sqlcommand + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
				
				SET @sqlcommand = @sqlcommand + N''fv.''+ @CleanOrderColumnWithDirection + N'') AS Kulike	 	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
				,ROW_NUMBER() OVER (ORDER BY '' IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inner_n.Featured DESC, ''SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ''
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
				,ROW_NUMBER() OVER (ORDER BY '' IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inner_n.Featured DESC, ''SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.'' + @OrderByColumnName + '' FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.'' + @OrderByColumnName + ''
				,ROW_NUMBER() OVER (ORDER BY '' IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inner_n.Featured DESC, ''	
				IF @OrderByDirection = ''ASC''
					SET @sqlcommand = @sqlcommand + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
				
				SET @sqlcommand = @sqlcommand + N''fv.''+ @CleanOrderColumnWithDirection + N'') AS Kulike	 	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
				,ROW_NUMBER() OVER (ORDER BY '' IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inner_n.Featured DESC, ''SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '';
	END
END

SET @sqlcommand = @sqlcommand + N'' ORDER BY ''
	IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''Featured DESC, ''
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = ''ASC''
		SET @sqlcommand = @sqlcommand + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

SET @sqlcommand = @sqlcommand + N''
IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
IF OBJECT_ID(''''tempdb..#UserEditCategories'''') IS NOT NULL
	DROP TABLE #UserEditCategories;
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;
IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;
IF OBJECT_ID(''''tempdb..#LocalizedCategories'''') IS NOT NULL
	DROP TABLE #LocalizedCategories; ''

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRangeType = @DateRangeType
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@StartDate = @StartDate
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@DateRange BIT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@FilterByTagID INT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	@FilterByCustomFields BIT = 0
AS
SET NOCOUNT ON;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();
DECLARE @EditAll TINYINT;

IF @AdminOrSuperUser = 1 OR (@EditOnlyAsOwner = 0 AND @Perm_EditAllCategores = 1)
	SET @EditAll = 1;
ELSE IF EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate))
	SET @EditAll = 2;
ELSE
	SET @EditAll = 3;

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(2000);

SET @paramList = N''
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRange BIT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@LocaleCode NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@FilterByTagID INT''

SET @sqlcommand = N''
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
	
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO #UserInRoles
SELECT DISTINCT r.[RoleID]
FROM {databaseOwner}[{objectQualifier}Roles] AS r
INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;

CREATE TABLE #UserViewCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserViewCategories
SELECT CategoryID
FROM {databaseOwner}[{objectQualifier}EDS_ViewPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_ViewAllCategores,@PermissionSettingsSource,@CurrentDate)

IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;

CREATE TABLE #UserViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;

CREATE TABLE #FiltredByCategories (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#LocalizedCategories'''') IS NOT NULL
	DROP TABLE #LocalizedCategories; ''

IF @LocaleCode IS NOT NULL
SET @sqlcommand = @sqlcommand + N'' 
CREATE TABLE #LocalizedCategories (ID INT NOT NULL PRIMARY KEY, Name NVARCHAR(200)); ''

IF @EditAll = 2
SET @sqlcommand = @sqlcommand + N'' 

IF OBJECT_ID(''''tempdb..#UserEditCategories'''') IS NOT NULL
	DROP TABLE #UserEditCategories;

CREATE TABLE #UserEditCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate) ''

IF @NewsFilterCategories IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #FiltredByCategories SELECT fc.KeyID FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID IN (SELECT CAtegoryID FROM #FiltredByCategories); ''
END
ELSE
BEGIN

	IF @OuterModuleID = 0 AND @FilterByArticles = 1
		SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; ''
	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID; ''
		SET @FilterByTags = 1; -- must bee because of flow
	END
	ELSE IF @OuterModuleID = 0 AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; ''

	IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID = @OnlyOneCategory;
		INSERT INTO #FiltredByCategories SELECT @OnlyOneCategory; ''
	END
	ELSE IF @OuterModuleID <> 0
	BEGIN
		IF @CategoryFilterType = 0 -- 0 All categories
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter 
			SELECT c.[CategoryID] FROM #UserViewCategories AS c
			WHERE c.[CategoryID] IN (SELECT mci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci WHERE mci.ModuleID = @OuterModuleID);

			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID; ''
		END
		ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			;WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
		END
	END
	ELSE
	BEGIN
		IF @CategoryFilterType = 0 -- 0 All categories
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		BEGIN
			IF @FillterSettingsSource = 1 -- portal
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT c.[CategoryID] FROM #UserViewCategories AS c
				WHERE c.[CategoryID] IN (SELECT pci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci WHERE pci.PortalID = @PortalID);		
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID; ''
			END
			ELSE -- module
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT c.[CategoryID] FROM #UserViewCategories AS c
				WHERE c.[CategoryID] IN (SELECT mci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci WHERE mci.ModuleID = @ModuleID);
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID; ''
			END
		END
		ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		BEGIN
			IF @FillterSettingsSource = 1 -- portal
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
			ELSE -- module
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
		END
	END
END

DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
			IF @FilterByAuthor <> 0
				SET @FilterAuthorOrAuthors = 1;
	END
	ELSE
	BEGIN
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE
		BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;	
		ELSE IF @FilterByAuthor <> 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE IF @FilterByGroupID <> 0
			SET @FilterAuthorOrAuthors = 1;
		END
	END
END
ELSE
	SET @FilterAuthorOrAuthors = 1;

SET @sqlcommand = @sqlcommand + N''
DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY); ''

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile]
				WHERE [AuthorProfileID] = @FilterByAuthor;
			END ''
		END
	END
	ELSE
	BEGIN
		-- ovaj dio odnosi se na filtriranje autora
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; ''
		END
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				IF @FillterSettingsSource = 1
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID;
				ELSE
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; ''
			END
			ELSE IF @FilterByAuthor <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor; ''
			END
			ELSE IF @FilterByGroupID <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; ''
			END
		END
	END
END
ELSE
BEGIN
	-- treba selektirati sve autore ili grupe !!!
	SET @FilterAuthorOrAuthors = 1;
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE PortalID = @PortalID
		UNION
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID; ''
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE PortalID = @PortalID; ''
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT ap.[UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID; ''
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS ID, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID
	WHERE c.CategoryID IN (SELECT CategoryID FROM #UserViewCategories) AND c.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode; ''

SET @sqlcommand = @sqlcommand + N'' DECLARE @AllContentCount INT; ''

SET @TopInnerFilter = N'''';

	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N''''''''''
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID ''

	IF @HideUnlocalizedItems = 1 SET @TopInnerFilter = @TopInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

	IF @FilterByTags = 1 SET @TopInnerFilter = @TopInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
	IF @FilterByArticles = 1 SET @TopInnerFilter = @TopInnerFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
SET @TopInnerFilter = @TopInnerFilter + N''
WHERE na.PortalID=@PortalID
	AND na.EventArticle = 0 ''
	IF @AdminFuturePostsVisible = 1
	BEGIN
		IF @DateRange = 2 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate ''
		ELSE SET @TopInnerFilter = @TopInnerFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
	END
	ELSE IF @DateRange = 2 OR @DateRange = 1 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
	ELSE SET @TopInnerFilter = @TopInnerFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		
	IF @LocaleCode IS NULL SET @TopInnerFilter = @TopInnerFilter + N'' AND na.HideDefaultLocale = 0 ''
	IF @Featured = 1 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.Featured = 1 ''
	IF @FilterByDNNUserID <> 0 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.UserID = @FilterByDNNUserID ''
	ELSE IF @FilterAuthorOrAuthors = 1 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''

	IF @EditAll <> 1
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.Approved = 1 ''
		SET @TopInnerFilter = @TopInnerFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''		
	END

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N''[Text]''
				WHEN 3 THEN N''[Int]''
				WHEN 4 THEN N''[Decimal]''
				WHEN 5 THEN N''[Decimal]''
				WHEN 6 THEN N''[Text]''
				WHEN 9 THEN N''[DateTime]''
				WHEN 10 THEN N''[Text]''
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N''[PublishDate]'';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N''[PublishDate]'';
	END
END
IF @OrderByColumnName = N''NEWID()''
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N'' '' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN

	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(512)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10)NOT NULL,
		CFWhereRoule NVARCHAR(2000) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND cf.FieldElementID IN ('' + STUFF((SELECT '','' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('''')), 1, 1, '''') + '')'' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND cf.FieldElementID IN ('' + STUFF((SELECT '','' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('''')), 1, 1, '''') + '')'' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);
		DECLARE @FilterValue NVARCHAR(2000);
		
		SET @CFFilterQuery = N''SELECT CFFilteredArticles.ArticleID FROM ('';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValue = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N''AND''
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +		
N''SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE '' + @FilterValue + ''
) AS OnlyWithGoogleMaps
WHERE Recency >= '' + CAST(@ElementsCount AS varchar(20)) + '' ''
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N''SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE '' + @FilterValue + '' ''
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N'' INTERSECT ''
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SET @FilterValue = (SELECT CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow);

				SET @CFFilterQuery = @CFFilterQuery +
N''SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE '' + @FilterValue + '' ''

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N'' INTERSECT ''
			END

		END
	END
	
	SET @CFFilterQuery = @CFFilterQuery + N'') AS CFFilteredArticles''
	
	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

SET @MainContentFilter = N''
;WITH AllContent AS( ''
	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
		SELECT ArticleID, CommentedDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID] ORDER BY ''
			
			IF @FirstOrderBy = ''Featured DESC'' SET @MainContentFilter = @MainContentFilter + N''n.Featured DESC, ''
			
			SET @MainContentFilter = @MainContentFilter + N'' nc.[DateAdded] '' + @OrderByDirection + '') AS OnlyFirstOccurance
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc ON nc.ArticleID = n.ArticleID AND nc.Approved = ''''True'''' AND nc.PortalID = @PortalID
		WHERE nc.ArticleID IN ('';
	END
	
	IF @UseAndOperator IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID		
			WHERE na.ArticleID IN ( '';
	END
	
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N'' SELECT ArticleID FROM (''
	
	SET @MainContentFilter = @MainContentFilter + N''
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter) ''

		SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''
	
		AND na.HasPermissions = 0
	UNION ALL
	SELECT ArticleID FROM (
		SELECT ArticleID FROM (
		SELECT aup.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ''
			IF @EditAll <> 1
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N'' WHERE aup.Show = 1 ''
				IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID IS NULL ''
				ELSE SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID = @UserID ''
			END
		IF @UserID <> -1
		BEGIN
			SET @MainContentFilter = @MainContentFilter + N''
			UNION
			SELECT arp.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ''
				IF @EditAll <> 1
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N'' WHERE arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
				END
		END
		SET @MainContentFilter = @MainContentFilter + N''
		) AS PermissionsByArticle
		INTERSECT
		SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

		SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

		AND na.HasPermissions = 1
	) AS HasPermissionsTrue ''
	
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N'') AllBeforeFilters INTERSECT '' + @CFFilterQuery
	
	IF @UseAndOperator IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FiltredByCategories) '';
	END
	
	IF @OrderByColumnName = N''CommentedDate''
	SET @MainContentFilter = @MainContentFilter + N''
		)
	) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1
	''
SET @MainContentFilter = @MainContentFilter + N''
) ''
SET @sqlcommand = @sqlcommand + @MainContentFilter + N'' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent ''

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N''
SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID],n.[ContactEmail], '';
ELSE
SET @sqlcommand = @sqlcommand + N''
SELECT n.[ArticleID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],n.[ContactEmail], '';

IF @EditAll = 0
	SET @sqlcommand = @sqlcommand + N''0 AS CanEdit, ''
ELSE IF @EditAll = 1
	SET @sqlcommand = @sqlcommand + N''1 AS CanEdit, ''
ELSE IF @EditAll = 2
BEGIN
	IF @EditOnlyAsOwner = 0
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories))
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
	ELSE
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE n.UserID = @UserID AND c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
END
ELSE IF @EditAll = 3
BEGIN
	IF @EditOnlyAsOwner = 0
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
	ELSE
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
END
ELSE
	SET @sqlcommand = @sqlcommand + N''0 AS CanEdit, ''

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N''
	(SELECT c.CategoryID AS "@id", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserViewCategories) AND c.PortalID = @PortalID
	ORDER BY c.Position
	FOR XML PATH(''''category''''), ROOT(''''categories'''')) AS CatToShow, ''
ELSE
SET @sqlcommand = @sqlcommand + N''
	(SELECT c.CategoryID AS "@id", lc.Name AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.ID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''''category''''), ROOT(''''categories'''')) AS CatToShow, ''

SET @sqlcommand = @sqlcommand + N''
CASE n.Active
	WHEN 1 THEN 0
	WHEN 0 THEN 1
END AS Published, ''
IF @UserCanApprove = 0
	SET @sqlcommand = @sqlcommand + N''0 AS Approve, ''
ELSE
	SET @sqlcommand = @sqlcommand + N''
		CASE n.Approved
			WHEN 1 THEN 0
			WHEN 0 THEN n.Active
		END AS Approve, ''
SET @sqlcommand = @sqlcommand + N'' @AllContentCount AS ContentCount ''

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.CommentedDate FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.CommentedDate
				,ROW_NUMBER() OVER (ORDER BY '' IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inner_n.Featured DESC, '' SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.'' + @OrderByColumnName + '' FROM (	 
				SELECT inner_n.[ArticleID],fv.'' + @OrderByColumnName + ''
				,ROW_NUMBER() OVER (ORDER BY '' IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inner_n.Featured DESC, ''
				IF @OrderByDirection = ''ASC''
					SET @sqlcommand = @sqlcommand + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
				
				SET @sqlcommand = @sqlcommand + N''fv.''+ @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE n.ArticleID IN (
			SELECT finalSelection.ArticleID FROM (
				SELECT inner_n.ArticleID, ROW_NUMBER() OVER (ORDER BY '' IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inner_n.Featured DESC, '' SET @sqlcommand = @sqlcommand + N'' '' + @CleanOrderColumnWithDirection + N'') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				WHERE inner_n.ArticleID IN (SELECT ArticleID FROM AllContent)
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		)'';
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.CommentedDate FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.CommentedDate
				,ROW_NUMBER() OVER (ORDER BY '' IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inner_n.Featured DESC, '' SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.'' + @OrderByColumnName + '' FROM (	 
				SELECT inner_n.[ArticleID],fv.'' + @OrderByColumnName + ''
				,ROW_NUMBER() OVER (ORDER BY '' IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inner_n.Featured DESC, fv.''
				IF @OrderByDirection = ''ASC''
					SET @sqlcommand = @sqlcommand + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
				
				SET @sqlcommand = @sqlcommand + N''fv.''+ @CleanOrderColumnWithDirection + N'') AS Kulike
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode
		WHERE n.ArticleID IN (
			SELECT finalSelection.ArticleID FROM (
				SELECT inner_n.ArticleID, ROW_NUMBER() OVER (ORDER BY '' IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inner_n.Featured DESC, '' SET @sqlcommand = @sqlcommand + N'' '' + @CleanOrderColumnWithDirection + N'') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
				WHERE inner_n.ArticleID IN (SELECT ArticleID FROM AllContent)
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		)'';
	END
END

SET @sqlcommand = @sqlcommand + N'' ORDER BY ''
	IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''Featured DESC, ''
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = ''ASC''
		SET @sqlcommand = @sqlcommand + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

SET @sqlcommand = @sqlcommand + N''
IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
IF OBJECT_ID(''''tempdb..#UserEditCategories'''') IS NOT NULL
	DROP TABLE #UserEditCategories;
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;
IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;
IF OBJECT_ID(''''tempdb..#LocalizedCategories'''') IS NOT NULL
	DROP TABLE #LocalizedCategories; ''
		
exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRange = @DateRange
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@LocaleCode = @LocaleCode
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@FilterByTagID = @FilterByTagID

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@DateRange BIT = 0,
	@DateRangeType TINYINT = 0,
	@StartDate DATETIME = NULL,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL,
	@eToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange TINYINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	@FilterByCustomFields BIT = 0
AS
SET NOCOUNT ON;
DECLARE @EditAll TINYINT;

DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF @AdminOrSuperUser = 1 OR (@EditOnlyAsOwner = 0 AND @Perm_EditAllCategores = 1) SET @EditAll = 1;
ELSE IF EXISTS(SELECT * FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)) SET @EditAll = 2;
ELSE SET @EditAll = 3;

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(2000);

SET @paramList = N''
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRange BIT
	,@DateRangeType TINYINT
	,@StartDate DATETIME
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange TINYINT''

SET @sqlcommand = N''
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
	
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO #UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND ( ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate ) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;

CREATE TABLE #UserViewCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserViewCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EDS_ViewPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_ViewAllCategores,@PermissionSettingsSource,@CurrentDate)

IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;

CREATE TABLE #UserViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;

CREATE TABLE #FiltredByCategories (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#LocalizedCategories'''') IS NOT NULL
	DROP TABLE #LocalizedCategories; ''

IF @LocaleCode IS NOT NULL
SET @sqlcommand = @sqlcommand + N'' 
CREATE TABLE #LocalizedCategories (ID INT NOT NULL PRIMARY KEY, Name NVARCHAR(200)); ''

IF @EditAll = 2
SET @sqlcommand = @sqlcommand + N'' 

IF OBJECT_ID(''''tempdb..#UserEditCategories'''') IS NOT NULL
	DROP TABLE #UserEditCategories;

CREATE TABLE #UserEditCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate) ''

IF @NewsFilterCategories IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #FiltredByCategories SELECT fc.KeyID FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID IN (SELECT CAtegoryID FROM #FiltredByCategories); ''
END
ELSE
BEGIN

	IF @OuterModuleID = 0 AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; ''

	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID ''
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID = 0 AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; ''

	IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID = @OnlyOneCategory;
		INSERT INTO #FiltredByCategories SELECT @OnlyOneCategory; ''
	END
	ELSE IF @OuterModuleID <> 0
	BEGIN
		IF @CategoryFilterType = 0 -- 0 All categories
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter 
			SELECT c.[CategoryID] FROM #UserViewCategories AS c
			WHERE c.[CategoryID] IN (SELECT mci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci WHERE mci.ModuleID = @OuterModuleID);

			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID; ''
		END
		ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			;WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
		END
	END
	ELSE
	BEGIN
		IF @CategoryFilterType = 0 -- 0 All categories
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		BEGIN
			IF @FillterSettingsSource = 1 -- portal
			BEGIN
				SET @sqlcommand = @sqlcommand + N''
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT c.[CategoryID] FROM #UserViewCategories AS c
				WHERE c.[CategoryID] IN (SELECT pci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci WHERE pci.PortalID = @PortalID);		
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID; ''
			END
			ELSE -- module
			BEGIN
				SET @sqlcommand = @sqlcommand + N''
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT c.[CategoryID] FROM #UserViewCategories AS c
				WHERE c.[CategoryID] IN (SELECT mci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci WHERE mci.ModuleID = @ModuleID);
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID; ''
			END
		END
		ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		BEGIN
			IF @FillterSettingsSource = 1 -- portal
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
			ELSE -- module
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
		END
	END
END

DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
			IF @FilterByAuthor <> 0
				SET @FilterAuthorOrAuthors = 1;
	END
	ELSE
	BEGIN
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE
		BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;	
		ELSE IF @FilterByAuthor <> 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE IF @FilterByGroupID <> 0
			SET @FilterAuthorOrAuthors = 1;
		END
	END
END
ELSE
	SET @FilterAuthorOrAuthors = 1;

SET @sqlcommand = @sqlcommand + N''
DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY); ''

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END ''
		END
	END
	ELSE
	BEGIN
		-- ovaj dio odnosi se na filtriranje autora
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID ''
		END
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				IF @FillterSettingsSource = 1
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID;
				ELSE
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; ''
			END
			ELSE IF @FilterByAuthor <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor; ''
			END
			ELSE IF @FilterByGroupID <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; ''
			END
		END
	END
END
ELSE
BEGIN
	-- treba selektirati sve autore ili grupe !!!
	SET @FilterAuthorOrAuthors = 1;
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE PortalID = @PortalID
		UNION
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID; ''
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE PortalID = @PortalID; ''
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT ap.[UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID; ''
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS ID, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID
	WHERE c.CategoryID IN (SELECT CategoryID FROM #UserViewCategories) AND c.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode; ''
	
SET @sqlcommand = @sqlcommand + N'' DECLARE @AllContentCount INT''

SET @TopInnerFilter = N'''';

	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N''''''''''
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID ''

	IF @HideUnlocalizedItems = 1 SET @TopInnerFilter = @TopInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

	IF @FilterByTags = 1 SET @TopInnerFilter = @TopInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
	IF @FilterByArticles = 1 SET @TopInnerFilter = @TopInnerFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
SET @TopInnerFilter = @TopInnerFilter + N''
WHERE na.PortalID=@PortalID ''
	IF @AdminFuturePostsVisible = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
		ELSE SET @TopInnerFilter = @TopInnerFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
	ELSE SET @TopInnerFilter = @TopInnerFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		
	IF @LocaleCode IS NULL SET @TopInnerFilter = @TopInnerFilter + N'' AND na.HideDefaultLocale = 0 ''
	IF @Featured = 1 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.Featured = 1 ''
	IF @FilterByDNNUserID <> 0 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.UserID = @FilterByDNNUserID ''
	ELSE IF @FilterAuthorOrAuthors = 1 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
	
	IF @EditAll <> 1
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.Approved = 1 ''
		SET @TopInnerFilter = @TopInnerFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''		
	END

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N''[Text]''
				WHEN 3 THEN N''[Int]''
				WHEN 4 THEN N''[Decimal]''
				WHEN 5 THEN N''[Decimal]''
				WHEN 6 THEN N''[Text]''
				WHEN 9 THEN N''[DateTime]''
				WHEN 10 THEN N''[Text]''
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N''[PublishDate]'';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N''[PublishDate]'';
	END
END

IF @OrderByColumnName = N''NEWID()''
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N'' '' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN

	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(512)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10)NOT NULL,
		CFWhereRoule NVARCHAR(2000) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND cf.FieldElementID IN ('' + STUFF((SELECT '','' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('''')), 1, 1, '''') + '')'' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND '' + [QueryRule] FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, ''cf.[CustomFieldID] = '' + CAST(CustomFieldID AS varchar(20)) + '' AND cf.FieldElementID IN ('' + STUFF((SELECT '','' + CAST(fme.FieldElementID AS VARCHAR(20)) FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('''')), 1, 1, '''') + '')'' AS CFQueryRoule
			FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);
		DECLARE @FilterValue NVARCHAR(2000);
		
		SET @CFFilterQuery = N''SELECT CFFilteredArticles.ArticleID FROM ('';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValue = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N''AND''
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +		
N''SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE '' + @FilterValue + ''
) AS OnlyWithGoogleMaps
WHERE Recency >= '' + CAST(@ElementsCount AS varchar(20)) + '' ''
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N''SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE '' + @FilterValue + '' ''
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N'' INTERSECT ''
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;	
				SET @FilterValue = (SELECT CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow);

				SET @CFFilterQuery = @CFFilterQuery +
N''SELECT n.[ArticleID]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE '' + @FilterValue + '' ''

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N'' INTERSECT ''
			END

		END
	END
	
	SET @CFFilterQuery = @CFFilterQuery + N'') AS CFFilteredArticles''
	
	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

SET @MainContentFilter = N''
;WITH AllContent AS( ''

	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
		SELECT ArticleID, CommentedDate,RecurringID,StartDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,inner_all.RecurringID
			,inner_all.StartDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID], inner_all.RecurringID ORDER BY ''
			
			IF @FirstOrderBy = ''Featured DESC'' SET @MainContentFilter = @MainContentFilter + N''inner_all.Featured DESC, ''
			
			SET @MainContentFilter = @MainContentFilter + N'' nc.[DateAdded] '' + @OrderByDirection + '') AS OnlyFirstOccurance
			
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc
		INNER JOIN ('';
	END
	
	SET @MainContentFilter = @MainContentFilter + N''
	SELECT n.ArticleID,n.Featured,
		CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
		CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND ''
	IF @DateRangeType = 2
		SET @MainContentFilter = @MainContentFilter + N''
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
	ELSE IF @DateRangeType = 1
		BEGIN
			IF @ListArchive = 0
				SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
			ELSE
				SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
		END
	ELSE IF @DateRangeType = 0
		SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
	ELSE
		SET @MainContentFilter = @MainContentFilter + N'' 1 = 0''
	
	SET @MainContentFilter = @MainContentFilter + N''
	WHERE n.ArticleID IN( ''
	 
	 -- tu bi trebal staviti okolo da se filtrira po and !!!
	 
	IF @UseAndOperator IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID		
			WHERE na.ArticleID IN ( '';
	END
	 
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N'' SELECT ArticleID FROM (''
	 
	SET @MainContentFilter = @MainContentFilter + N''
		SELECT [ArticleID] FROM (
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter) ''
			
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''
			
				AND na.HasPermissions = 0
				AND na.EventArticle = 0 ''

				IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainContentFilter = @MainContentFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
			
			SET @MainContentFilter = @MainContentFilter + N''
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''

				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

				AND na.HasPermissions = 0
				AND na.EventArticle = 1
				AND ne.Recurring = 0 ''

				IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
					ELSE
						SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
				END
				ELSE IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''

			SET @MainContentFilter = @MainContentFilter + N''
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
				IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N''
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
						ELSE
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
					END
				ELSE IF @DateRangeType = 0
					SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
				ELSE SET @MainContentFilter = @MainContentFilter + N'' 1 = 0 ''

				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

				AND na.HasPermissions = 0
				AND na.EventArticle = 1
				AND ne.Recurring = 1 ''

			SET @MainContentFilter = @MainContentFilter + N''
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

				AND na.HasPermissions = 1
				AND na.EventArticle = 0 ''
				IF @EditAll <> 1
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N'' AND aup.Show = 1 ''
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID IS NULL ''
					ELSE SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID = @UserID ''
				END
				IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainContentFilter = @MainContentFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
			
			SET @MainContentFilter = @MainContentFilter + N''
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''
				
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''
					 	 
				AND na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 0 ''
				IF @EditAll <> 1
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N'' AND aup.Show = 1 ''
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID IS NULL ''
					ELSE SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID = @UserID ''
				END
				IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
					ELSE
						SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
				END
				ELSE IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
				SET @MainContentFilter = @MainContentFilter + N''
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
				IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N''
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
						ELSE
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
					END
				ELSE IF @DateRangeType = 0
					SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
				ELSE SET @MainContentFilter = @MainContentFilter + N'' 1 = 0 ''

				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

				AND na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 1 ''
				IF @EditAll <> 1
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N'' AND aup.Show = 1 ''
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID IS NULL ''
					ELSE SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID = @UserID ''
				END
				SET @MainContentFilter = @MainContentFilter + N''
		) AS WithNoRolePermissions ''

		IF @UserID <> -1
		BEGIN
			SET @MainContentFilter = @MainContentFilter + N''
			UNION
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''
					
					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''
					
					AND na.HasPermissions = 1
					AND na.EventArticle = 0 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					END
					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainContentFilter = @MainContentFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''

				SET @MainContentFilter = @MainContentFilter + N''
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0 ''

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 0 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					END
					IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
							ELSE
								SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
						END
						ELSE IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
				
				SET @MainContentFilter = @MainContentFilter + N''
				UNION All
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
					IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N''
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
							ELSE
								SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
					ELSE SET @MainContentFilter = @MainContentFilter + N'' 1 = 0 ''

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 1 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					END
					SET @MainContentFilter = @MainContentFilter + N''
			) AS ByRolePermissions ''
		END
	
	-- treba desti ako se koristi AND operator
	
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N'') AllBeforeFilters INTERSECT '' + @CFFilterQuery
	
	IF @UseAndOperator IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FiltredByCategories) '';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'' 
	) ''
	
	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'') AS inner_all ON nc.ArticleID = inner_all.ArticleID AND nc.Approved = ''''True'''' AND nc.PortalID = @PortalID
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1''
	END
	
SET @MainContentFilter = @MainContentFilter + N'' 
) ''


SET @sqlcommand = @sqlcommand + @MainContentFilter + N'' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent ''

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N''
SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
	,e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], ''
ELSE
SET @sqlcommand = @sqlcommand + N''
SELECT n.[ArticleID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], '';

IF @EditAll = 0
	SET @sqlcommand = @sqlcommand + N''0 AS CanEdit, ''
ELSE IF @EditAll = 1
	SET @sqlcommand = @sqlcommand + N''1 AS CanEdit, ''
ELSE IF @EditAll = 2
BEGIN
	IF @EditOnlyAsOwner = 0
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories))
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
	ELSE
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE n.UserID = @UserID AND c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
END
ELSE IF @EditAll = 3
BEGIN
	IF @EditOnlyAsOwner = 0
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
	ELSE
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
END
ELSE
	SET @sqlcommand = @sqlcommand + N''0 AS CanEdit, ''

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N''
	(SELECT c.CategoryID AS "@id", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserViewCategories) AND c.PortalID = @PortalID
	ORDER BY c.Position
	FOR XML PATH(''''category''''), ROOT(''''categories'''')) AS CatToShow, ''
ELSE
SET @sqlcommand = @sqlcommand + N''
	(SELECT c.CategoryID AS "@id", lc.Name AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.ID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''''category''''), ROOT(''''categories'''')) AS CatToShow, ''

SET @sqlcommand = @sqlcommand + N''
CASE n.Active
	WHEN 1 THEN 0
	WHEN 0 THEN 1
END AS Published, ''
IF @UserCanApprove = 0
	SET @sqlcommand = @sqlcommand + N''0 AS Approve, ''
ELSE
	SET @sqlcommand = @sqlcommand + N''
		CASE n.Approved
			WHEN 1 THEN 0
			WHEN 0 THEN n.Active
		END AS Approve, ''
SET @sqlcommand = @sqlcommand + N'' @AllContentCount AS ContentCount ''

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
				,ROW_NUMBER() OVER (ORDER BY '' IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inner_n.Featured DESC, ''SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'',e_fsd.'' + @OrderByColumnName + '',(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END)
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.'' + @OrderByColumnName + '' FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.'' + @OrderByColumnName + ''
				,ROW_NUMBER() OVER (ORDER BY ''
				IF @FirstOrderBy = ''Featured DESC''
					SET @sqlcommand = @sqlcommand + N''inner_n.Featured DESC, ''	
				IF @OrderByDirection = ''ASC''
					SET @sqlcommand = @sqlcommand + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
				
				SET @sqlcommand = @sqlcommand + N''fv.''+ @CleanOrderColumnWithDirection + N'') AS Kulike	 	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
				,ROW_NUMBER() OVER (ORDER BY '' IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inner_n.Featured DESC, ''SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ''
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
				,ROW_NUMBER() OVER (ORDER BY '' IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inner_n.Featured DESC, ''SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '';
		END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.'' + @OrderByColumnName + '' FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.'' + @OrderByColumnName + ''
				,ROW_NUMBER() OVER (ORDER BY '' IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inner_n.Featured DESC, ''	
				IF @OrderByDirection = ''ASC''
					SET @sqlcommand = @sqlcommand + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
				
				SET @sqlcommand = @sqlcommand + N''fv.''+ @CleanOrderColumnWithDirection + N'') AS Kulike	 	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID FROM (	 
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
				,ROW_NUMBER() OVER (ORDER BY '' IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inner_n.Featured DESC, ''SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inner_n INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '';
	END
END

SET @sqlcommand = @sqlcommand + N'' ORDER BY ''
	IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''Featured DESC, ''
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = ''ASC''
		SET @sqlcommand = @sqlcommand + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection


SET @sqlcommand = @sqlcommand + N''
IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
IF OBJECT_ID(''''tempdb..#UserEditCategories'''') IS NOT NULL
	DROP TABLE #UserEditCategories;
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;
IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;
IF OBJECT_ID(''''tempdb..#LocalizedCategories'''') IS NOT NULL
	DROP TABLE #LocalizedCategories; ''

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRange = @DateRange
	,@DateRangeType = @DateRangeType
	,@StartDate = @StartDate
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@ArticleID INT,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@PermissionSettingsSource BIT = 1
AS
SET NOCOUNT ON;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @UserInRoles TABLE (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO @UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate ) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

DECLARE @UserViewCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY);
DECLARE @UserEditCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY);

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
		WHERE rpsc.PremissionSettingsID IN (SELECT PremissionSettingsID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE PortalID = @PortalID AND ModuleID IS NULL AND RoleID IS NULL);
	ELSE
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] = @ModuleID AND [RoleID] IS NULL);
END
ELSE
BEGIN
	IF @PermissionSettingsSource = 1
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND RoleID IN (SELECT [RoleID] FROM @UserInRoles))
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] IS NULL);
	ELSE
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [ModuleID] = @ModuleID AND RoleID IN (SELECT [RoleID] FROM @UserInRoles))
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] = @ModuleID)
END

IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			WHERE rpatc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND [RoleID] IS NULL);
		ELSE
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			WHERE rpatc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] = @ModuleID AND [RoleID] IS NULL);
	END
	ELSE
	BEGIN
		IF @PermissionSettingsSource = 1
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			WHERE rpatc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND RoleID IN (SELECT [RoleID] FROM @UserInRoles))
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			WHERE upatc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] IS NULL);
		ELSE
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			WHERE rpatc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [ModuleID] = @ModuleID AND RoleID IN (SELECT [RoleID] FROM @UserInRoles))
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			WHERE upatc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [UserID] = @UserID AND [PortalID] = @PortalID AND [ModuleID] = @ModuleID);
	END
END

DECLARE @CanView BIT;
SET @CanView = 0;
DECLARE @CanEdit BIT;
SET @CanEdit = 0;

IF @EditOnlyAsOwner = 0 AND (@AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1)
BEGIN
	SET @CanView = 1;
	SET @CanEdit = 1;
END
ELSE
BEGIN
	IF @EditOnlyAsOwner = 0
	BEGIN
		IF EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = @ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
		OR EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = @ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT [RoleID] FROM @UserInRoles))
		OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = @ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
			SET @CanEdit = 1;
	END
	ELSE
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] WHERE ArticleID = @ArticleID AND UserID = @UserID)
		AND EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = @ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
			SET @CanEdit = 1;
		
		IF @CanEdit = 0 -- ovako je bilo prije, ako nije proslo ovo iznad onda se islo na posebne dozvole, mozda to nije ispravno
		BEGIN
			IF EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = @ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT [RoleID] FROM @UserInRoles))
			OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = @ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
				SET @CanEdit = 1;
		END
	END
	
	IF @CanEdit = 1
		SET @CanView = 1;
	ELSE
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID
			INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = c.CategoryID
			WHERE n.ArticleID=@ArticleID
				AND n.HasPermissions = 0
				AND (n.Approved = 1 OR @UserCanApprove = 1)
				AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
			)
			SET @CanView = 1;
		ELSE -- posebne dozvole
		BEGIN
			IF @UserID = -1 -- neregistirani korisnik ne moze BITi u roli
			BEGIN
				IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
					WHERE aup.ArticleID = @ArticleID
						AND aup.UserID IS NULL
						AND n.HasPermissions = 1
						AND (n.Approved = 1 OR @UserCanApprove = 1)
						AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
					)
					SET @CanView = 1;
			END
			ELSE
			BEGIN
				IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
					WHERE aup.ArticleID = @ArticleID
						AND n.HasPermissions = 1
						AND aup.UserID = @UserID
						AND aup.Show = 1
						AND (n.Approved = 1 OR @UserCanApprove = 1)
						AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
					)
					SET @CanView = 1;
				ELSE
				BEGIN 
					IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
						WHERE arp.ArticleID = @ArticleID
							AND n.HasPermissions = 1
							AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
							AND arp.Show = 1
							AND (n.Approved = 1 OR @UserCanApprove = 1)
							AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
						)
						SET @CanView = 1;
				END
			 END
		END
	END
END
-- ovo se odnosi za lokalizaciju tablice kategorija u posebnu tablicu koja se direktno spaja
DECLARE @localize BIT;
SET @localize = 0;

DECLARE @LocalizedCategories TABLE (id INT NOT NULL PRIMARY KEY, name NVARCHAR(200), position INT, url NVARCHAR(1500), color NVARCHAR(16));

IF @LocaleCode IS NOT NULL
BEGIN
	IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID = @ArticleID AND LocaleCode = @LocaleCode)
		SET @localize = 1;
	
	INSERT INTO @LocalizedCategories
	SELECT c.CategoryID AS id, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS name, c.Position, c.CategoryURL, c.Color
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID
	WHERE c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories) AND c.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode;	
END	
ELSE
BEGIN
	INSERT INTO @LocalizedCategories
	SELECT c.CategoryID AS id, c.CategoryName AS name, c.Position, c.CategoryURL, c.Color
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	WHERE c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories) AND c.PortalID = @PortalID;
END

IF @CanView = 1
BEGIN
	IF @localize = 1
	BEGIN
		SELECT n.[ArticleID],n.[PortalID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
			,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
			,fla.[clTitleLink] AS TitleLink,n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
			,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
			,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
			,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription],n.[CFGroupeID]
			,n.[DetailsDocumentsTemplate],n.[DetailsLinksTemplate],n.[DetailsRelatedArticlesTemplate],n.[ContactEmail],
			CASE WHEN @CanEdit = 1 THEN 1 ELSE 0 END AS CanEdit,	
			(SELECT c.id AS "@id", c.name AS "@name", c.url AS "@url", c.Color AS "@color"
			FROM @LocalizedCategories AS c
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci
			ON c.id = ci.CategoryID
			WHERE ci.ArticleID = n.ArticleID
			ORDER BY c.Position
			FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow,
			
			CASE WHEN n.Active = 1 THEN 0 ELSE 1 END AS Published,
			CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE n.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE n.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			END AS Approve
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS fla ON fla.ArticleID = n.ArticleID AND fla.LocaleCode = @LocaleCode
		WHERE n.ArticleID = @ArticleID;
	END
	ELSE
	BEGIN		 
		SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
			,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
			,n.TitleLink,n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
			,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
			,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
			,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
			,n.[DetailsDocumentsTemplate],n.[DetailsLinksTemplate],n.[DetailsRelatedArticlesTemplate],n.[ContactEmail],
			CASE WHEN @CanEdit = 1 THEN 1 ELSE 0 END AS CanEdit,		
			(SELECT c.id AS "@id", c.name AS "@name", c.url AS "@url", c.Color AS "@color"
			FROM @LocalizedCategories AS c
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci
			ON c.id = ci.CategoryID
			WHERE ci.ArticleID = n.ArticleID
			ORDER BY c.Position
			FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow,
			CASE WHEN n.Active = 1 THEN 0 ELSE 1 END AS Published,
			CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE n.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE n.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			END AS Approve
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		WHERE n.ArticleID = @ArticleID;	 
	END
END' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT = 1,
	@ItemsTo INT = 5,
	@DateRangeType TINYINT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 0,
	@FillterSettingsSource BIT = 0,
	@StartDate DATETIME = NULL,
	@OuterModuleID INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange TINYINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	
	@FieldsTemplateID INT = NULL,
	@SearchOnlySelectedCFGroup BIT = 0,
	@CFGeneratedSQL NVARCHAR(MAX) = NULL,
	@SimpleSearchFindCondition NVARCHAR(300) = NULL,
	@SimpleSearchType TINYINT = NULL,
	@SysDatesWhereCondition NVARCHAR(1000) = NULL,
	@OrderByID INT = NULL
AS
SET NOCOUNT ON;
DECLARE @EditAll TINYINT;

DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF @AdminOrSuperUser = 1 OR (@EditOnlyAsOwner = 0 AND @Perm_EditAllCategores = 1) SET @EditAll = 1;
ELSE IF EXISTS(SELECT * FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)) SET @EditAll = 2;
ELSE SET @EditAll = 3;

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(2000);

SET @paramList = N''
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRangeType TINYINT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@StartDate DATETIME
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange TINYINT
	,@FieldsTemplateID INT
	,@SimpleSearchFindCondition NVARCHAR(300)''
	
SET @sqlcommand = N''
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
	
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO #UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND ( ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate ) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;

CREATE TABLE #UserViewCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserViewCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EDS_ViewPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_ViewAllCategores,@PermissionSettingsSource,@CurrentDate)

IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;

CREATE TABLE #UserViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;

CREATE TABLE #FiltredByCategories (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#LocalizedCategories'''') IS NOT NULL
	DROP TABLE #LocalizedCategories; ''

IF @LocaleCode IS NOT NULL
SET @sqlcommand = @sqlcommand + N'' 
CREATE TABLE #LocalizedCategories (ID INT NOT NULL PRIMARY KEY, Name NVARCHAR(200)); ''

IF @EditAll = 2
SET @sqlcommand = @sqlcommand + N'' 

IF OBJECT_ID(''''tempdb..#UserEditCategories'''') IS NOT NULL
	DROP TABLE #UserEditCategories;

CREATE TABLE #UserEditCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate) ''

IF @NewsFilterCategories IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #FiltredByCategories SELECT fc.KeyID FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID IN (SELECT CAtegoryID FROM #FiltredByCategories); ''
END
ELSE
BEGIN

	IF @OuterModuleID = 0 AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- -- portal settings
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; ''

	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID ''
		SET @FilterByTags = 1
	END	
	ELSE IF @OuterModuleID = 0 AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- portal settings
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; ''

	IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID = @OnlyOneCategory;
		INSERT INTO #FiltredByCategories SELECT @OnlyOneCategory; ''
	END
	ELSE IF @OuterModuleID <> 0
	BEGIN
		IF @CategoryFilterType = 0 -- 0 All categories
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter 
			SELECT c.[CategoryID] FROM #UserViewCategories AS c
			WHERE c.[CategoryID] IN (SELECT mci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci WHERE mci.ModuleID = @OuterModuleID);

			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID; ''
		END
		ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			;WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
		END
	END
	ELSE
	BEGIN
		IF @CategoryFilterType = 0 -- 0 All categories
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		BEGIN
			IF @FillterSettingsSource = 1 -- portal
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT c.[CategoryID] FROM #UserViewCategories AS c
				WHERE c.[CategoryID] IN (SELECT pci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci WHERE pci.PortalID = @PortalID);		
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID; ''
			END
			ELSE -- module
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT c.[CategoryID] FROM #UserViewCategories AS c
				WHERE c.[CategoryID] IN (SELECT mci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci WHERE mci.ModuleID = @ModuleID);
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID; ''
			END
		END
		ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		BEGIN
			IF @FillterSettingsSource = 1 -- portal
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
			ELSE -- module
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
		END
	END
END

DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
			IF @FilterByAuthor <> 0
				SET @FilterAuthorOrAuthors = 1;
	END
	ELSE
	BEGIN
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE
		BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;	
		ELSE IF @FilterByAuthor <> 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE IF @FilterByGroupID <> 0
			SET @FilterAuthorOrAuthors = 1;
		END
	END
END
ELSE
	SET @FilterAuthorOrAuthors = 1;

SET @sqlcommand = @sqlcommand + N''
DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY); ''

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile]
				WHERE [AuthorProfileID] = @FilterByAuthor;
			END ''
		END
	END
	ELSE
	BEGIN
		-- ovaj dio odnosi se na filtriranje autora
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; ''
		END
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				IF @FillterSettingsSource = 1
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID;
				ELSE
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; ''
			END
			ELSE IF @FilterByAuthor <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor; ''
			END
			ELSE IF @FilterByGroupID <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; ''
			END
		END
	END
END
ELSE
BEGIN
	-- treba selektirati sve autore ili grupe !!!
	SET @FilterAuthorOrAuthors = 1;
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE PortalID = @PortalID
		UNION
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID; ''
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE PortalID = @PortalID; ''
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT ap.[UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID; ''
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS ID, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID
	WHERE c.CategoryID IN (SELECT CategoryID FROM #UserViewCategories) AND c.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode; ''

IF @CFGeneratedSQL IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'' DECLARE @tempArticles TABLE (ArticleID INT NOT NULL PRIMARY KEY); '' + @CFGeneratedSQL;

IF @SimpleSearchFindCondition IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'' 
	DECLARE @SearchTable TABLE (Words NVARCHAR(256) NOT NULL, SearchPhraseOrder BIT);
	DECLARE @word NVARCHAR(256), @PosWord INT
	SET @SimpleSearchFindCondition = LTRIM(RTRIM(@SimpleSearchFindCondition))+ '''':''''
	SET @PosWord = CHARINDEX('''':'''', @SimpleSearchFindCondition, 1)
	IF REPLACE(@SimpleSearchFindCondition, '''':'''', '''''''') <> ''''''''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SimpleSearchFindCondition, @PosWord - 1)))
			IF @word <> ''''''''
			BEGIN
				SET @word = replace( 
							replace( 
							replace( 
							replace( @word
							,''''\'''', ''''\\'''' )
							,''''%'''', ''''\%'''' )
							,''''_'''', ''''\_'''' )
							,''''['''', ''''\['''' );
				IF CHARINDEX('''' '''', @word) > 0
				BEGIN
					INSERT INTO @SearchTable VALUES (''''% ''''+@word+''''%'''', 1)
					INSERT INTO @SearchTable VALUES (@word+''''%'''', 1)
				END
				ELSE
				BEGIN
					INSERT INTO @SearchTable VALUES (''''% ''''+@word+''''%'''', 0)
					INSERT INTO @SearchTable VALUES (@word+''''%'''', 0)
				END
			END
			SET @SimpleSearchFindCondition = RIGHT(@SimpleSearchFindCondition, LEN(@SimpleSearchFindCondition) - @PosWord)
			SET @PosWord = CHARINDEX('''':'''', @SimpleSearchFindCondition, 1)
		END
	END '';

SET @TopInnerFilter = N'''';

IF @CFGeneratedSQL IS NOT NULL
	SET @TopInnerFilter = @TopInnerFilter + N''
	INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID ''

IF @GoogleMapsFilter = 2
	SET @TopInnerFilter = @TopInnerFilter + N''
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N''''''''''	
ELSE IF @GoogleMapsFilter = 1
	SET @TopInnerFilter = @TopInnerFilter + N''
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID ''

IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
	SET @TopInnerFilter = @TopInnerFilter + N''
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
IF @FilterByDNNGroupID <> 0 
	SET @TopInnerFilter = @TopInnerFilter + N''
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID ''
ELSE IF @FilterByDNNUserID <> 0
	SET @TopInnerFilter = @TopInnerFilter + N''
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

IF @SimpleSearchFindCondition IS NOT NULL
BEGIN
	IF @LocaleCode IS NULL
	BEGIN
		IF @SimpleSearchType = 2
			SET @TopInnerFilter = @TopInnerFilter + N''
			INNER JOIN @SearchTable AS st ON (na.CleanArticleData LIKE st.Words ESCAPE ''''\'''') ''
		ELSE IF @SimpleSearchType = 1
		SET @TopInnerFilter = @TopInnerFilter + N''
			INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE ''''\'''' OR na.SubTitle LIKE st.Words ESCAPE ''''\'''') ''
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N''
			INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE ''''\'''' OR na.SubTitle LIKE st.Words ESCAPE ''''\'''' OR na.CleanArticleData LIKE st.Words ESCAPE ''''\'''') ''	
	END
	ELSE
	BEGIN
		IF @SimpleSearchType = 2
			SET @TopInnerFilter = @TopInnerFilter + N''
			INNER JOIN @SearchTable AS st ON (ncl.CleanArticleData LIKE st.Words ESCAPE ''''\'''') ''
		ELSE IF @SimpleSearchType = 1
		SET @TopInnerFilter = @TopInnerFilter + N''
			INNER JOIN @SearchTable AS st ON (ncl.Title LIKE st.Words ESCAPE ''''\'''' OR ncl.SubTitle LIKE st.Words ESCAPE ''''\'''') ''
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N''
			INNER JOIN @SearchTable AS st ON (ncl.Title LIKE st.Words ESCAPE ''''\'''' OR ncl.SubTitle LIKE st.Words ESCAPE ''''\'''' OR ncl.CleanArticleData LIKE st.Words ESCAPE ''''\'''') ''
	END
END

	IF @FilterByTags = 1 SET @TopInnerFilter = @TopInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
	IF @FilterByArticles = 1 SET @TopInnerFilter = @TopInnerFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
	
SET @TopInnerFilter = @TopInnerFilter + N''
WHERE na.PortalID=@PortalID
	AND na.EventArticle = 1 ''
	
	IF @SysDatesWhereCondition IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + @SysDatesWhereCondition
	
	IF @AdminFuturePostsVisible = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
		ELSE SET @TopInnerFilter = @TopInnerFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
	ELSE SET @TopInnerFilter = @TopInnerFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		
	IF @LocaleCode IS NULL SET @TopInnerFilter = @TopInnerFilter + N'' AND na.HideDefaultLocale = 0 ''
	IF @Featured = 1 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.Featured = 1 ''
	IF @FilterByDNNUserID <> 0 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.UserID = @FilterByDNNUserID ''
	ELSE IF @FilterAuthorOrAuthors = 1 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''

	IF @EditAll <> 1
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.Approved = 1 ''
		SET @TopInnerFilter = @TopInnerFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''		
	END
	
	IF @SearchOnlySelectedCFGroup = 1
		SET @TopInnerFilter = @TopInnerFilter + N'' AND na.CFGroupeID = @FieldsTemplateID ''		

IF @SimpleSearchFindCondition IS NOT NULL
BEGIN

	DECLARE @TopTagInnerFilter NVARCHAR(MAX);
	SET @TopTagInnerFilter = N'''';
		IF @CFGeneratedSQL IS NOT NULL
		SET @TopTagInnerFilter = @TopTagInnerFilter + N''
		INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID ''
		
	IF @GoogleMapsFilter = 2
		SET @TopTagInnerFilter = @TopTagInnerFilter + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''''''' ''
	ELSE IF @GoogleMapsFilter = 1
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID ''

	IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL) SET @TopTagInnerFilter = @TopTagInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	IF @FilterByDNNGroupID <> 0 
		SET @TopTagInnerFilter = @TopTagInnerFilter + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopTagInnerFilter = @TopTagInnerFilter + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

	IF @FilterByTags = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
	IF @FilterByArticles = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
	
	SET @TopTagInnerFilter = @TopTagInnerFilter + N''
	WHERE na.PortalID=@PortalID
	AND na.EventArticle = 1 ''
	
	IF @SysDatesWhereCondition IS NOT NULL
		SET @TopTagInnerFilter = @TopTagInnerFilter + @SysDatesWhereCondition
	
	IF @AdminFuturePostsVisible = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
		ELSE SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
	ELSE SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		
	IF @LocaleCode IS NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.HideDefaultLocale = 0 ''
	IF @Featured = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.Featured = 1 ''
	IF @FilterByDNNUserID <> 0 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.UserID = @FilterByDNNUserID ''
	ELSE IF @FilterAuthorOrAuthors = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''

	IF @EditAll <> 1
	BEGIN
		IF @UserCanApprove = 0 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.Approved = 1 ''
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''		
	END
	
	IF @SearchOnlySelectedCFGroup = 1
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.CFGroupeID = @FieldsTemplateID ''	
END

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);
DECLARE @ControlTypeID INT;

IF @OrderByID IS NOT NULL
BEGIN
	DECLARE @CfOrderByID INT;
	DECLARE @SysOrderByID INT;
	DECLARE @SortOrder NCHAR(4);

	SELECT @CfOrderByID = CfIdOrderable
		,@SysOrderByID = SysIdOrderable
		,@SortOrder = SortOrder
	FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsOrderByItems] AS obi
	WHERE obi.Id = @OrderByID
		--AND obi.CustomFieldID IN (
		--	SELECT CustomFieldID
		--	FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems]
		--	WHERE FieldsTemplateID = @FieldsTemplateID
		--	)

	IF @CfOrderByID IS NOT NULL
	BEGIN

		SELECT @ControlTypeID = [ControlTypeID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNfields]
		WHERE CustomFieldID = @CfOrderByID
			AND IsOrderable = 1;

		IF @ControlTypeID IS NOT NULL
		BEGIN
			SELECT @OrderByColumnName = CASE @ControlTypeID
					WHEN 1
						THEN N''[Text]''
					WHEN 3
						THEN N''[Int]''
					WHEN 4
						THEN N''[Decimal]''
					WHEN 5
						THEN N''[Decimal]''
					WHEN 6
						THEN N''[Text]''
					WHEN 9
						THEN N''[DateTime]''
					WHEN 10
						THEN N''[Text]''
					ELSE NULL
					END

			IF @OrderByColumnName IS NULL
			BEGIN
				SET @OrderByID = NULL;
				SET @CfOrderByID = NULL;
				SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
				SET @OrderByDirection = N''DESC'';
				SET @OrderByColumnName = N''[PublishDate]'';
			END
			ELSE
			BEGIN
				SET @OrderByCustomFieldID = @CfOrderByID;
				SET @OrderByDirection = @SortOrder;
			END
		END
		ELSE
		BEGIN
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByDirection = N''DESC'';
			SET @OrderByColumnName = N''[PublishDate]'';
		END
	END
	ELSE
		IF @SysOrderByID IS NOT NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			
			SELECT @OrderByColumnName = CASE @SysOrderByID
					WHEN 0
						THEN N''[DateAdded]''
					WHEN 1
						THEN N''[LastModified]''
					WHEN 2
						THEN N''[PublishDate]''
					WHEN 3
						THEN N''[ExpireDate]''
					WHEN 4
						THEN N''[NumberOfViews]''
					WHEN 5
						THEN N''[RatingValue]''
					WHEN 6
						THEN N''[Title]''
					WHEN 7
						THEN N''[StartDate]''
					WHEN 8
						THEN N''CommentedDate''
					WHEN 9
						THEN N''[NumberOfComments]''
					WHEN 10
						THEN N''NEWID()''				
					ELSE N''[PublishDate]''
					END
			
			SET @OrderByDirection = @SortOrder;
		END
		ELSE
		BEGIN	
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
			SET @OrderByDirection = N''DESC'';
			SET @OrderByColumnName = N''[PublishDate]'';
		END
END
ELSE IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N''[Text]''
				WHEN 3 THEN N''[Int]''
				WHEN 4 THEN N''[Decimal]''
				WHEN 5 THEN N''[Decimal]''
				WHEN 6 THEN N''[Text]''
				WHEN 9 THEN N''[DateTime]''
				WHEN 10 THEN N''[Text]''
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N''[PublishDate]'';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N''[PublishDate]'';
	END
END

IF @OrderByColumnName = N''NEWID()''
BEGIN
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
	SET @OrderByDirection = N''''
END
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N'' '' + @OrderByDirection;

SET @MainContentFilter = N''
;WITH AllContent AS( 
	SELECT FinalAnyContent.*, COUNT(*) OVER() AS ContentCount FROM (''

	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
		SELECT ArticleID, CommentedDate,RecurringID,StartDate,SearchPhraseOrder FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,inner_all.RecurringID
			,inner_all.StartDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID], inner_all.RecurringID ORDER BY ''
			
			IF @FirstOrderBy = ''Featured DESC'' SET @MainContentFilter = @MainContentFilter + N''inner_all.Featured DESC, ''
			
			SET @MainContentFilter = @MainContentFilter + N'' nc.[DateAdded] '' + @OrderByDirection + '') AS OnlyFirstOccurance
			
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc
		INNER JOIN ('';
	END
	
	IF @SimpleSearchFindCondition IS NOT NULL
		SET @MainContentFilter = @MainContentFilter + N''
		SELECT OrderedContentRemovedDupli.* FROM (
		SELECT DupliContent.*, ROW_NUMBER() OVER(PARTITION BY [ArticleID] ORDER BY SearchPhraseOrder DESC) AS orderDup
		FROM ( ''
	
	SET @MainContentFilter = @MainContentFilter + N''
	SELECT n.ArticleID,n.Featured,
		CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate,
		CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID ''
		
	IF @SimpleSearchFindCondition IS NOT NULL
		SET @MainContentFilter = @MainContentFilter + N'',CASE WHEN storder.SearchPhraseOrder IS NULL THEN 0 ELSE storder.SearchPhraseOrder END AS SearchPhraseOrder ''	
	ELSE
		SET @MainContentFilter = @MainContentFilter + N'',NULL AS SearchPhraseOrder ''
		
	SET @MainContentFilter = @MainContentFilter + N''	
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ''
	
	-- only because AND order first - NULL because of tags
	IF @SimpleSearchFindCondition IS NOT NULL
	BEGIN
		IF @LocaleCode IS NULL
		BEGIN
			IF @SimpleSearchType = 2
				SET @MainContentFilter = @MainContentFilter + N''
				LEFT OUTER JOIN @SearchTable AS storder ON (n.CleanArticleData LIKE storder.Words ESCAPE ''''\'''') ''
			ELSE IF @SimpleSearchType = 1
			SET @MainContentFilter = @MainContentFilter + N''
				LEFT OUTER JOIN @SearchTable AS storder ON (n.Title LIKE storder.Words ESCAPE ''''\'''' OR n.SubTitle LIKE storder.Words ESCAPE ''''\'''') ''
			ELSE
				SET @MainContentFilter = @MainContentFilter + N''
				LEFT OUTER JOIN @SearchTable AS storder ON (n.Title LIKE storder.Words ESCAPE ''''\'''' OR n.SubTitle LIKE storder.Words ESCAPE ''''\'''' OR n.CleanArticleData LIKE storder.Words ESCAPE ''''\'''') ''	
		END
		ELSE
		BEGIN
			SET @MainContentFilter = @MainContentFilter + N''
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
		
			IF @SimpleSearchType = 2
				SET @MainContentFilter = @MainContentFilter + N''
				LEFT OUTER JOIN @SearchTable AS storder ON (ncl.CleanArticleData LIKE storder.Words ESCAPE ''''\'''') ''
			ELSE IF @SimpleSearchType = 1
			SET @MainContentFilter = @MainContentFilter + N''
				LEFT OUTER JOIN @SearchTable AS storder ON (ncl.Title LIKE storder.Words ESCAPE ''''\'''' OR ncl.SubTitle LIKE storder.Words ESCAPE ''''\'''') ''
			ELSE
				SET @MainContentFilter = @MainContentFilter + N''
				LEFT OUTER JOIN @SearchTable AS storder ON (ncl.Title LIKE storder.Words ESCAPE ''''\'''' OR ncl.SubTitle LIKE storder.Words ESCAPE ''''\'''' OR ncl.CleanArticleData LIKE storder.Words ESCAPE ''''\'''') ''
		END
	END
	
	SET @MainContentFilter = @MainContentFilter + N''
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND ''
	IF @DateRangeType = 2
		SET @MainContentFilter = @MainContentFilter + N''
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
	ELSE IF @DateRangeType = 1
		BEGIN
			IF @ListArchive = 0
				SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
			ELSE
				SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
		END
	ELSE IF @DateRangeType = 0
		SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
	ELSE
		SET @MainContentFilter = @MainContentFilter + N'' 1 = 0''
	
	SET @MainContentFilter = @MainContentFilter + N''
	WHERE n.ArticleID IN( ''
	 
	 -- tu bi trebal staviti okolo da se filtrira po and !!!
	 
	IF @UseAndOperator IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID		
			WHERE na.ArticleID IN ( '';
	END
	 
	 SET @MainContentFilter = @MainContentFilter + N''
		SELECT [ArticleID] FROM (
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''

				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

				AND na.HasPermissions = 0
				AND ne.Recurring = 0 ''
				IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
					ELSE
						SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
				END
				ELSE IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
			
			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
			SET @MainContentFilter = @MainContentFilter + N''
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words  ''

				SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N''

				AND na.HasPermissions = 0
				AND ne.Recurring = 0 ''
				IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
					ELSE
						SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
				END
				ELSE IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''

			END
			
			SET @MainContentFilter = @MainContentFilter + N''
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
				IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N''
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
						ELSE
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
					END
				ELSE IF @DateRangeType = 0
					SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
				ELSE SET @MainContentFilter = @MainContentFilter + N'' 1 = 0 ''

				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

				AND na.HasPermissions = 0
				AND ne.Recurring = 1 ''
				
			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
			SET @MainContentFilter = @MainContentFilter + N''
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
				IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N''
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
						ELSE
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
					END
				ELSE IF @DateRangeType = 0
					SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
				ELSE SET @MainContentFilter = @MainContentFilter + N'' 1 = 0 ''

				SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N''

				AND na.HasPermissions = 0
				AND ne.Recurring = 1 ''
				
			END
				
		SET @MainContentFilter = @MainContentFilter + N''
		) AS HasPermissionsFalse
		UNION ALL
		SELECT [ArticleID] FROM (
			SELECT [ArticleID] FROM (
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

					AND na.HasPermissions = 1
					AND ne.Recurring = 0 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND aup.Show = 1 ''
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID IS NULL ''
						ELSE SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID = @UserID ''
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
						ELSE
							SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
				
				IF @SimpleSearchFindCondition IS NOT NULL
				BEGIN
				SET @MainContentFilter = @MainContentFilter + N''
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
					INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words ''

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N''

					AND na.HasPermissions = 1
					AND ne.Recurring = 0 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND aup.Show = 1 ''
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID IS NULL ''
						ELSE SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID = @UserID ''
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
						ELSE
							SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''

				END	
				
				SET @MainContentFilter = @MainContentFilter + N''
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

					AND na.HasPermissions = 1
					AND ne.Recurring = 0 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
						ELSE
							SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
			
				IF @SimpleSearchFindCondition IS NOT NULL
				BEGIN
				SET @MainContentFilter = @MainContentFilter + N''
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
					INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words ''

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N''

					AND na.HasPermissions = 1
					AND ne.Recurring = 0 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
						ELSE
							SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''

				END		
											
			SET @MainContentFilter = @MainContentFilter + N''
			) AS NotRecurring
			UNION ALL
			SELECT [ArticleID] FROM (
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
				IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N''
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
						ELSE
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
					END
				ELSE IF @DateRangeType = 0
					SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
				ELSE SET @MainContentFilter = @MainContentFilter + N'' 1 = 0 ''

				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

					AND na.HasPermissions = 1
					AND ne.Recurring = 1 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND aup.Show = 1 ''
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID IS NULL ''
						ELSE SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID = @UserID ''
					END
					
				IF @SimpleSearchFindCondition IS NOT NULL
				BEGIN
				SET @MainContentFilter = @MainContentFilter + N''
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
					INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words  
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
				IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N''
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
						ELSE
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
					END
				ELSE IF @DateRangeType = 0
					SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
				ELSE SET @MainContentFilter = @MainContentFilter + N'' 1 = 0 ''

				SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N''

					AND na.HasPermissions = 1
					AND ne.Recurring = 1 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND aup.Show = 1 ''
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID IS NULL ''
						ELSE SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID = @UserID ''
					END

				END		
					
				SET @MainContentFilter = @MainContentFilter + N'' 
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
					IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N''
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
							ELSE
								SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
					ELSE SET @MainContentFilter = @MainContentFilter + N'' 1 = 0 ''

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

					AND na.HasPermissions = 1
					AND ne.Recurring = 1 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					END
			
				IF @SimpleSearchFindCondition IS NOT NULL
				BEGIN
				SET @MainContentFilter = @MainContentFilter + N''
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
					INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
					IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N''
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
							ELSE
								SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
					ELSE SET @MainContentFilter = @MainContentFilter + N'' 1 = 0 ''

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N''

					AND na.HasPermissions = 1
					AND ne.Recurring = 1 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					END

				END		
					
			SET @MainContentFilter = @MainContentFilter + N'' 
			) AS Recurring
		) AS HasPermissionsTrue	''
	
	-- treba desti ako se koristi AND operator
	
	IF @UseAndOperator IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FiltredByCategories) '';
	END
	
	SET @MainContentFilter = @MainContentFilter + N''	
	) ''
	
	IF @SimpleSearchFindCondition IS NOT NULL
		SET @MainContentFilter = @MainContentFilter + N'' 
		) AS DupliContent ) AS OrderedContentRemovedDupli WHERE orderDup = 1''
		
	IF @OrderByColumnName = N''CommentedDate''
		SET @MainContentFilter = @MainContentFilter + N'') AS inner_all ON nc.ArticleID = inner_all.ArticleID AND nc.Approved = ''''True'''' AND nc.PortalID = @PortalID
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1''
	
SET @MainContentFilter = @MainContentFilter + N'' ) AS FinalAnyContent
) ''

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N''
SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
	,e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], ''
ELSE
SET @sqlcommand = @sqlcommand + N''
SELECT n.[ArticleID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], '';


IF @EditAll = 0
	SET @sqlcommand = @sqlcommand + N''0 AS CanEdit, ''
ELSE IF @EditAll = 1
	SET @sqlcommand = @sqlcommand + N''1 AS CanEdit, ''
ELSE IF @EditAll = 2
BEGIN
	IF @EditOnlyAsOwner = 0
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories))
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
	ELSE
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE n.UserID = @UserID AND c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
END
ELSE IF @EditAll = 3
BEGIN
	IF @EditOnlyAsOwner = 0
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
	ELSE
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
END
ELSE
	SET @sqlcommand = @sqlcommand + N''0 AS CanEdit, ''

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N''
	(SELECT c.CategoryID AS "@id", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserViewCategories) AND c.PortalID = @PortalID
	ORDER BY c.Position
	FOR XML PATH(''''category''''), ROOT(''''categories'''')) AS CatToShow, ''
ELSE
SET @sqlcommand = @sqlcommand + N''
	(SELECT c.CategoryID AS "@id", lc.Name AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.ID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''''category''''), ROOT(''''categories'''')) AS CatToShow, ''

SET @sqlcommand = @sqlcommand + N''
CASE n.Active
	WHEN 1 THEN 0
	WHEN 0 THEN 1
END AS Published, ''
IF @UserCanApprove = 0
	SET @sqlcommand = @sqlcommand + N''0 AS Approve, ''
ELSE
	SET @sqlcommand = @sqlcommand + N''
		CASE n.Approved
			WHEN 1 THEN 0
			WHEN 0 THEN n.Active
		END AS Approve, ''
SET @sqlcommand = @sqlcommand + N''e_fsd.ContentCount ''

IF @SimpleSearchFindCondition IS NOT NULL
	SET @MainContentFilter = @MainContentFilter + N'' ,e_fsd.SearchPhraseOrder '';

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT fsAll.[ArticleID],fsAll.StartDate,fsAll.RecurringID,fsAll.CommentedDate,fsAll.ContentCount,fsAll.SearchPhraseOrder FROM (	 
				SELECT inr_ac.[ArticleID],inr_ac.StartDate,inr_ac.RecurringID,inr_ac.CommentedDate,inr_ac.ContentCount,inr_ac.SearchPhraseOrder
				,ROW_NUMBER() OVER (ORDER BY ''
				IF @SimpleSearchFindCondition IS NOT NULL
					SET @sqlcommand = @sqlcommand + N''inr_ac.SearchPhraseOrder DESC, ''
				IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inr_n.Featured DESC, ''SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inr_n INNER JOIN AllContent AS inr_ac ON inr_n.ArticleID = inr_ac.ArticleID
			) AS fsAll
			WHERE fsAll.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'',e_fsd.'' + @OrderByColumnName + '',(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END)
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT fsAll.[ArticleID],fsAll.StartDate,fsAll.RecurringID,fsAll.'' + @OrderByColumnName + '',fsAll.ContentCount,fsAll.SearchPhraseOrder FROM (	 
				SELECT inr_ac.[ArticleID],inr_ac.StartDate,inr_ac.RecurringID,fv.'' + @OrderByColumnName + '',inr_ac.ContentCount,inr_ac.SearchPhraseOrder
				,ROW_NUMBER() OVER (ORDER BY ''
				IF @SimpleSearchFindCondition IS NOT NULL
					SET @sqlcommand = @sqlcommand + N''inr_ac.SearchPhraseOrder DESC, ''
				IF @FirstOrderBy = ''Featured DESC''
					SET @sqlcommand = @sqlcommand + N''inr_n.Featured DESC, ''	
				IF @OrderByDirection = ''ASC''
					SET @sqlcommand = @sqlcommand + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
				
				SET @sqlcommand = @sqlcommand + N''fv.''+ @CleanOrderColumnWithDirection + N'') AS Kulike	 	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inr_n
					INNER JOIN AllContent AS inr_ac ON inr_n.ArticleID = inr_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inr_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS fsAll
			WHERE fsAll.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT fsAll.[ArticleID],fsAll.StartDate,fsAll.RecurringID,fsAll.ContentCount,fsAll.SearchPhraseOrder FROM (	 
				SELECT inr_ac.[ArticleID],inr_ac.StartDate,inr_ac.RecurringID,inr_ac.ContentCount,inr_ac.SearchPhraseOrder
				,ROW_NUMBER() OVER (ORDER BY ''
				IF @SimpleSearchFindCondition IS NOT NULL
					SET @sqlcommand = @sqlcommand + N''inr_ac.SearchPhraseOrder DESC, ''
				IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inr_n.Featured DESC, ''SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inr_n INNER JOIN AllContent AS inr_ac ON inr_n.ArticleID = inr_ac.ArticleID
			) AS fsAll
			WHERE fsAll.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ''
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT fsAll.[ArticleID],fsAll.StartDate,fsAll.RecurringID,fsAll.CommentedDate,fsAll.ContentCount,fsAll.SearchPhraseOrder FROM (	 
				SELECT inr_ac.[ArticleID],inr_ac.StartDate,inr_ac.RecurringID,inr_ac.CommentedDate,inr_ac.ContentCount,inr_ac.SearchPhraseOrder
				,ROW_NUMBER() OVER (ORDER BY ''
				IF @SimpleSearchFindCondition IS NOT NULL
					SET @sqlcommand = @sqlcommand + N''inr_ac.SearchPhraseOrder DESC, ''
				IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inr_n.Featured DESC, ''SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inr_n INNER JOIN AllContent AS inr_ac ON inr_n.ArticleID = inr_ac.ArticleID
			) AS fsAll
			WHERE fsAll.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT fsAll.[ArticleID],fsAll.StartDate,fsAll.RecurringID,fsAll.'' + @OrderByColumnName + '',fsAll.ContentCount,fsAll.SearchPhraseOrder FROM (	 
				SELECT inr_ac.[ArticleID],inr_ac.StartDate,inr_ac.RecurringID,fv.'' + @OrderByColumnName + '',inr_ac.ContentCount,inr_ac.SearchPhraseOrder
				,ROW_NUMBER() OVER (ORDER BY ''
				IF @SimpleSearchFindCondition IS NOT NULL
					SET @sqlcommand = @sqlcommand + N''inr_ac.SearchPhraseOrder DESC, ''
				IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inr_n.Featured DESC, ''	
				IF @OrderByDirection = ''ASC''
					SET @sqlcommand = @sqlcommand + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
				
				SET @sqlcommand = @sqlcommand + N''fv.''+ @CleanOrderColumnWithDirection + N'') AS Kulike	 	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inr_n
					INNER JOIN AllContent AS inr_ac ON inr_n.ArticleID = inr_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inr_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS fsAll
			WHERE fsAll.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT fsAll.[ArticleID],fsAll.StartDate,fsAll.RecurringID,fsAll.ContentCount,fsAll.SearchPhraseOrder FROM (	 
				SELECT inr_ac.[ArticleID],inr_ac.StartDate,inr_ac.RecurringID,inr_ac.ContentCount,inr_ac.SearchPhraseOrder
				,ROW_NUMBER() OVER (ORDER BY ''
				IF @SimpleSearchFindCondition IS NOT NULL
					SET @sqlcommand = @sqlcommand + N''inr_ac.SearchPhraseOrder DESC, ''
				IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inr_n.Featured DESC, ''SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inr_n INNER JOIN AllContent AS inr_ac ON inr_n.ArticleID = inr_ac.ArticleID
			) AS fsAll
			WHERE fsAll.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '';
	END
END

SET @sqlcommand = @sqlcommand + N'' ORDER BY ''
	IF @SimpleSearchFindCondition IS NOT NULL
		SET @sqlcommand = @sqlcommand + N''e_fsd.SearchPhraseOrder DESC, ''
	IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''Featured DESC, ''
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = ''ASC''
		SET @sqlcommand = @sqlcommand + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

SET @sqlcommand = @sqlcommand + N''
IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
IF OBJECT_ID(''''tempdb..#UserEditCategories'''') IS NOT NULL
	DROP TABLE #UserEditCategories;
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;
IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;
IF OBJECT_ID(''''tempdb..#LocalizedCategories'''') IS NOT NULL
	DROP TABLE #LocalizedCategories; ''

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRangeType = @DateRangeType
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@StartDate = @StartDate
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@FieldsTemplateID = @FieldsTemplateID
	,@SimpleSearchFindCondition = @SimpleSearchFindCondition' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@DateRange BIT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@FilterByTagID INT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	
	@FieldsTemplateID INT = NULL,
	@SearchOnlySelectedCFGroup BIT = 0,
	@CFGeneratedSQL NVARCHAR(MAX) = NULL,
	@SimpleSearchFindCondition NVARCHAR(300) = NULL,
	@SimpleSearchType TINYINT = NULL,
	@SysDatesWhereCondition NVARCHAR(1000) = NULL,
	@OrderByID INT = NULL
AS
SET NOCOUNT ON;
DECLARE @EditAll TINYINT;

DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF @AdminOrSuperUser = 1 OR (@EditOnlyAsOwner = 0 AND @Perm_EditAllCategores = 1) SET @EditAll = 1;
ELSE IF EXISTS(SELECT * FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)) SET @EditAll = 2;
ELSE SET @EditAll = 3;

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(2000);

SET @paramList = N''
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRange BIT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@LocaleCode NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@FilterByTagID INT
	,@FieldsTemplateID INT
	,@SimpleSearchFindCondition NVARCHAR(300)''

SET @sqlcommand = N''
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
	
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO #UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;

CREATE TABLE #UserViewCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserViewCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EDS_ViewPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_ViewAllCategores,@PermissionSettingsSource,@CurrentDate)

IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;

CREATE TABLE #UserViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;

CREATE TABLE #FiltredByCategories (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#LocalizedCategories'''') IS NOT NULL
	DROP TABLE #LocalizedCategories; ''

IF @LocaleCode IS NOT NULL
SET @sqlcommand = @sqlcommand + N'' 
CREATE TABLE #LocalizedCategories (ID INT NOT NULL PRIMARY KEY, Name NVARCHAR(200)); ''

IF @EditAll = 2
SET @sqlcommand = @sqlcommand + N'' 

IF OBJECT_ID(''''tempdb..#UserEditCategories'''') IS NOT NULL
	DROP TABLE #UserEditCategories;

CREATE TABLE #UserEditCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate) ''

IF @NewsFilterCategories IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #FiltredByCategories SELECT fc.KeyID FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID IN (SELECT CAtegoryID FROM #FiltredByCategories); ''
END
ELSE
BEGIN

	IF @OuterModuleID = 0 AND @FilterByArticles = 1
		SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; ''
	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID; ''
		SET @FilterByTags = 1; -- must bee because of flow
	END
	ELSE IF @OuterModuleID = 0 AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; ''

	IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID = @OnlyOneCategory;
		INSERT INTO #FiltredByCategories SELECT @OnlyOneCategory; ''
	END
	ELSE IF @OuterModuleID <> 0
	BEGIN
		IF @CategoryFilterType = 0 -- 0 All categories
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter 
			SELECT c.[CategoryID] FROM #UserViewCategories AS c
			WHERE c.[CategoryID] IN (SELECT mci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci WHERE mci.ModuleID = @OuterModuleID);

			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID; ''
		END
		ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			;WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
		END
	END
	ELSE
	BEGIN
		IF @CategoryFilterType = 0 -- 0 All categories
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		BEGIN
			IF @FillterSettingsSource = 1 -- portal
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT c.[CategoryID] FROM #UserViewCategories AS c
				WHERE c.[CategoryID] IN (SELECT pci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci WHERE pci.PortalID = @PortalID);		
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID; ''
			END
			ELSE -- module
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT c.[CategoryID] FROM #UserViewCategories AS c
				WHERE c.[CategoryID] IN (SELECT mci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci WHERE mci.ModuleID = @ModuleID);
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID; ''
			END
		END
		ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		BEGIN
			IF @FillterSettingsSource = 1 -- portal
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
			ELSE -- module
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
		END
	END
END

DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
			IF @FilterByAuthor <> 0
				SET @FilterAuthorOrAuthors = 1;
	END
	ELSE
	BEGIN
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE
		BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;	
		ELSE IF @FilterByAuthor <> 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE IF @FilterByGroupID <> 0
			SET @FilterAuthorOrAuthors = 1;
		END
	END
END
ELSE
	SET @FilterAuthorOrAuthors = 1;

SET @sqlcommand = @sqlcommand + N''
DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY); ''

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile]
				WHERE [AuthorProfileID] = @FilterByAuthor;
			END ''
		END
	END
	ELSE
	BEGIN
		-- ovaj dio odnosi se na filtriranje autora
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; ''
		END
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				IF @FillterSettingsSource = 1
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID;
				ELSE
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; ''
			END
			ELSE IF @FilterByAuthor <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor; ''
			END
			ELSE IF @FilterByGroupID <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; ''
			END
		END
	END
END
ELSE
BEGIN
	-- treba selektirati sve autore ili grupe !!!
	SET @FilterAuthorOrAuthors = 1;
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE PortalID = @PortalID
		UNION
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID; ''
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE PortalID = @PortalID; ''
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT ap.[UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID; ''
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS ID, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID
	WHERE c.CategoryID IN (SELECT CategoryID FROM #UserViewCategories) AND c.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode; ''

IF @CFGeneratedSQL IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'' DECLARE @tempArticles TABLE (ArticleID INT NOT NULL PRIMARY KEY); '' + @CFGeneratedSQL;

IF @SimpleSearchFindCondition IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'' 
	DECLARE @SearchTable TABLE (Words NVARCHAR(256) NOT NULL, SearchPhraseOrder BIT);
	DECLARE @word NVARCHAR(256), @PosWord INT
	SET @SimpleSearchFindCondition = LTRIM(RTRIM(@SimpleSearchFindCondition))+ '''':''''
	SET @PosWord = CHARINDEX('''':'''', @SimpleSearchFindCondition, 1)
	IF REPLACE(@SimpleSearchFindCondition, '''':'''', '''''''') <> ''''''''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SimpleSearchFindCondition, @PosWord - 1)))
			IF @word <> ''''''''
			BEGIN
				SET @word = replace( 
							replace( 
							replace( 
							replace( @word
							,''''\'''', ''''\\'''' )
							,''''%'''', ''''\%'''' )
							,''''_'''', ''''\_'''' )
							,''''['''', ''''\['''' );
				IF CHARINDEX('''' '''', @word) > 0
				BEGIN
					INSERT INTO @SearchTable VALUES (''''% ''''+@word+''''%'''', 1)
					INSERT INTO @SearchTable VALUES (@word+''''%'''', 1)
				END
				ELSE
				BEGIN
					INSERT INTO @SearchTable VALUES (''''% ''''+@word+''''%'''', 0)
					INSERT INTO @SearchTable VALUES (@word+''''%'''', 0)
				END
			END
			SET @SimpleSearchFindCondition = RIGHT(@SimpleSearchFindCondition, LEN(@SimpleSearchFindCondition) - @PosWord)
			SET @PosWord = CHARINDEX('''':'''', @SimpleSearchFindCondition, 1)
		END
	END '';

SET @TopInnerFilter = N'''';

IF @CFGeneratedSQL IS NOT NULL
	SET @TopInnerFilter = @TopInnerFilter + N''
	INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID ''

IF @GoogleMapsFilter = 2
	SET @TopInnerFilter = @TopInnerFilter + N''
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N''''''''''	
ELSE IF @GoogleMapsFilter = 1
	SET @TopInnerFilter = @TopInnerFilter + N''
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID ''

IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
	SET @TopInnerFilter = @TopInnerFilter + N''
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
IF @FilterByDNNGroupID <> 0 
	SET @TopInnerFilter = @TopInnerFilter + N''
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID ''
ELSE IF @FilterByDNNUserID <> 0
	SET @TopInnerFilter = @TopInnerFilter + N''
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

IF @SimpleSearchFindCondition IS NOT NULL
BEGIN
	IF @LocaleCode IS NULL
	BEGIN
		IF @SimpleSearchType = 2
			SET @TopInnerFilter = @TopInnerFilter + N''
			INNER JOIN @SearchTable AS st ON (na.CleanArticleData LIKE st.Words ESCAPE ''''\'''') ''
		ELSE IF @SimpleSearchType = 1
		SET @TopInnerFilter = @TopInnerFilter + N''
			INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE ''''\'''' OR na.SubTitle LIKE st.Words ESCAPE ''''\'''') ''
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N''
			INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE ''''\'''' OR na.SubTitle LIKE st.Words ESCAPE ''''\'''' OR na.CleanArticleData LIKE st.Words ESCAPE ''''\'''') ''	
	END
	ELSE
	BEGIN
		IF @SimpleSearchType = 2
			SET @TopInnerFilter = @TopInnerFilter + N''
			INNER JOIN @SearchTable AS st ON (ncl.CleanArticleData LIKE st.Words ESCAPE ''''\'''') ''
		ELSE IF @SimpleSearchType = 1
		SET @TopInnerFilter = @TopInnerFilter + N''
			INNER JOIN @SearchTable AS st ON (ncl.Title LIKE st.Words ESCAPE ''''\'''' OR ncl.SubTitle LIKE st.Words ESCAPE ''''\'''') ''
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N''
			INNER JOIN @SearchTable AS st ON (ncl.Title LIKE st.Words ESCAPE ''''\'''' OR ncl.SubTitle LIKE st.Words ESCAPE ''''\'''' OR ncl.CleanArticleData LIKE st.Words ESCAPE ''''\'''') ''
	END
END

	IF @FilterByTags = 1 SET @TopInnerFilter = @TopInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
	IF @FilterByArticles = 1 SET @TopInnerFilter = @TopInnerFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
SET @TopInnerFilter = @TopInnerFilter + N''
WHERE na.PortalID=@PortalID
	AND na.EventArticle = 0 ''
	
	IF @SysDatesWhereCondition IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + @SysDatesWhereCondition
	
	IF @AdminFuturePostsVisible = 1
	BEGIN
		IF @DateRange = 2 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate ''
		ELSE SET @TopInnerFilter = @TopInnerFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
	END
	ELSE IF @DateRange = 2 OR @DateRange = 1 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
	ELSE SET @TopInnerFilter = @TopInnerFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		
	IF @LocaleCode IS NULL SET @TopInnerFilter = @TopInnerFilter + N'' AND na.HideDefaultLocale = 0 ''
	IF @Featured = 1 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.Featured = 1 ''
	IF @FilterByDNNUserID <> 0 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.UserID = @FilterByDNNUserID ''
	ELSE IF @FilterAuthorOrAuthors = 1 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''

	IF @EditAll <> 1
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.Approved = 1 ''
		SET @TopInnerFilter = @TopInnerFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''		
	END

	IF @SearchOnlySelectedCFGroup = 1
		SET @TopInnerFilter = @TopInnerFilter + N'' AND na.CFGroupeID = @FieldsTemplateID ''	

IF @SimpleSearchFindCondition IS NOT NULL
BEGIN

	DECLARE @TopTagInnerFilter NVARCHAR(MAX);
	SET @TopTagInnerFilter = N'''';	
		IF @CFGeneratedSQL IS NOT NULL
			SET @TopTagInnerFilter = @TopTagInnerFilter + N''
			INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID ''
			
		IF @GoogleMapsFilter = 2
			SET @TopTagInnerFilter = @TopTagInnerFilter + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N''''''''''
		ELSE IF @GoogleMapsFilter = 1
			SET @TopTagInnerFilter = @TopTagInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID ''

		IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL) SET @TopTagInnerFilter = @TopTagInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
		IF @FilterByDNNGroupID <> 0 
			SET @TopTagInnerFilter = @TopTagInnerFilter + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID ''
		ELSE IF @FilterByDNNUserID <> 0
			SET @TopTagInnerFilter = @TopTagInnerFilter + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

		IF @FilterByTags = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
		IF @FilterByArticles = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
	SET @TopTagInnerFilter = @TopTagInnerFilter + N''
	WHERE na.PortalID=@PortalID
		AND na.EventArticle = 0 ''
		
		IF @SysDatesWhereCondition IS NOT NULL
			SET @TopTagInnerFilter = @TopTagInnerFilter + @SysDatesWhereCondition
		
		IF @AdminFuturePostsVisible = 1
		BEGIN
			IF @DateRange = 2 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate ''
			ELSE SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
		END
		ELSE IF @DateRange = 2 OR @DateRange = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		ELSE SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
			
		IF @LocaleCode IS NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.HideDefaultLocale = 0 ''
		IF @Featured = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.Featured = 1 ''
		IF @FilterByDNNUserID <> 0 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''

		IF @EditAll <> 1
		BEGIN
			IF @UserCanApprove = 0 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.Approved = 1 ''
			SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''		
		END
		
		IF @SearchOnlySelectedCFGroup = 1
			SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.CFGroupeID = @FieldsTemplateID ''
END

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);
DECLARE @ControlTypeID INT;

IF @OrderByID IS NOT NULL
BEGIN
	DECLARE @CfOrderByID INT;
	DECLARE @SysOrderByID INT;
	DECLARE @SortOrder NCHAR(4);

	SELECT @CfOrderByID = CfIdOrderable
		,@SysOrderByID = SysIdOrderable
		,@SortOrder = SortOrder
	FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsOrderByItems] AS obi
	WHERE obi.Id = @OrderByID
		--AND obi.CustomFieldID IN (
		--	SELECT CustomFieldID
		--	FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems]
		--	WHERE FieldsTemplateID = @FieldsTemplateID
		--	)

	IF @CfOrderByID IS NOT NULL
	BEGIN

		SELECT @ControlTypeID = [ControlTypeID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNfields]
		WHERE CustomFieldID = @CfOrderByID
			AND IsOrderable = 1;

		IF @ControlTypeID IS NOT NULL
		BEGIN
			SELECT @OrderByColumnName = CASE @ControlTypeID
					WHEN 1
						THEN N''[Text]''
					WHEN 3
						THEN N''[Int]''
					WHEN 4
						THEN N''[Decimal]''
					WHEN 5
						THEN N''[Decimal]''
					WHEN 6
						THEN N''[Text]''
					WHEN 9
						THEN N''[DateTime]''
					WHEN 10
						THEN N''[Text]''
					ELSE NULL
					END

			IF @OrderByColumnName IS NULL
			BEGIN
				SET @OrderByID = NULL;
				SET @CfOrderByID = NULL;
				SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
				SET @OrderByDirection = N''DESC'';
				SET @OrderByColumnName = N''[PublishDate]'';
			END
			ELSE
			BEGIN
				SET @OrderByCustomFieldID = @CfOrderByID;
				SET @OrderByDirection = @SortOrder;
			END
		END
		ELSE
		BEGIN
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByDirection = N''DESC'';
			SET @OrderByColumnName = N''[PublishDate]'';
		END
	END
	ELSE
		IF @SysOrderByID IS NOT NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			
			SELECT @OrderByColumnName = CASE @SysOrderByID
					WHEN 0
						THEN N''[DateAdded]''
					WHEN 1
						THEN N''[LastModified]''
					WHEN 2
						THEN N''[PublishDate]''
					WHEN 3
						THEN N''[ExpireDate]''
					WHEN 4
						THEN N''[NumberOfViews]''
					WHEN 5
						THEN N''[RatingValue]''
					WHEN 6
						THEN N''[Title]''
					WHEN 7
						THEN N''[PublishDate]''-- EventStartDate - only articles
					WHEN 8
						THEN N''CommentedDate''
					WHEN 9
						THEN N''[NumberOfComments]''
					WHEN 10
						THEN N''NEWID()''				
					ELSE N''[PublishDate]''
					END
			
			SET @OrderByDirection = @SortOrder;
		END
		ELSE
		BEGIN	
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
			SET @OrderByDirection = N''DESC'';
			SET @OrderByColumnName = N''[PublishDate]'';
		END
END
ELSE IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N''[Text]''
				WHEN 3 THEN N''[Int]''
				WHEN 4 THEN N''[Decimal]''
				WHEN 5 THEN N''[Decimal]''
				WHEN 6 THEN N''[Text]''
				WHEN 9 THEN N''[DateTime]''
				WHEN 10 THEN N''[Text]''
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N''[PublishDate]'';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N''[PublishDate]'';
	END
END

IF @OrderByColumnName = N''NEWID()''
BEGIN
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
	SET @OrderByDirection = N''''
END
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N'' '' + @OrderByDirection;
	
SET @MainContentFilter = N''
;WITH AllContent AS( 
	SELECT FinalAnyContent.*, COUNT(*) OVER() AS ContentCount FROM (''
	
	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
		SELECT ArticleID, CommentedDate,SearchPhraseOrder FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID] ORDER BY ''
			
			IF @FirstOrderBy = ''Featured DESC'' SET @MainContentFilter = @MainContentFilter + N''inner_all.Featured DESC, ''
			
			SET @MainContentFilter = @MainContentFilter + N'' nc.[DateAdded] '' + @OrderByDirection + '') AS OnlyFirstOccurance
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc
		INNER JOIN ('';
	END

	IF @SimpleSearchFindCondition IS NOT NULL
		SET @MainContentFilter = @MainContentFilter + N''
		SELECT OrderedContentRemovedDupli.* FROM (
		SELECT DupliContent.*, ROW_NUMBER() OVER(PARTITION BY [ArticleID] ORDER BY SearchPhraseOrder DESC) AS orderDup
		FROM ( ''

	SET @MainContentFilter = @MainContentFilter + N''
		SELECT n.ArticleID,n.Featured ''

	IF @SimpleSearchFindCondition IS NOT NULL
		SET @MainContentFilter = @MainContentFilter + N'',CASE WHEN storder.SearchPhraseOrder IS NULL THEN 0 ELSE storder.SearchPhraseOrder END AS SearchPhraseOrder ''	
	ELSE
		SET @MainContentFilter = @MainContentFilter + N'',NULL AS SearchPhraseOrder ''
		
	SET @MainContentFilter = @MainContentFilter + N''	
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ''

	-- only because AND order first - NULL because of tags
	IF @SimpleSearchFindCondition IS NOT NULL
	BEGIN
		IF @LocaleCode IS NULL
		BEGIN
			IF @SimpleSearchType = 2
				SET @MainContentFilter = @MainContentFilter + N''
				LEFT OUTER JOIN @SearchTable AS storder ON (n.CleanArticleData LIKE storder.Words ESCAPE ''''\'''') ''
			ELSE IF @SimpleSearchType = 1
			SET @MainContentFilter = @MainContentFilter + N''
				LEFT OUTER JOIN @SearchTable AS storder ON (n.Title LIKE storder.Words ESCAPE ''''\'''' OR n.SubTitle LIKE storder.Words ESCAPE ''''\'''') ''
			ELSE
				SET @MainContentFilter = @MainContentFilter + N''
				LEFT OUTER JOIN @SearchTable AS storder ON (n.Title LIKE storder.Words ESCAPE ''''\'''' OR n.SubTitle LIKE storder.Words ESCAPE ''''\'''' OR n.CleanArticleData LIKE storder.Words ESCAPE ''''\'''') ''	
		END
		ELSE
		BEGIN
			SET @MainContentFilter = @MainContentFilter + N''
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
		
			IF @SimpleSearchType = 2
				SET @MainContentFilter = @MainContentFilter + N''
				LEFT OUTER JOIN @SearchTable AS storder ON (ncl.CleanArticleData LIKE storder.Words ESCAPE ''''\'''') ''
			ELSE IF @SimpleSearchType = 1
			SET @MainContentFilter = @MainContentFilter + N''
				LEFT OUTER JOIN @SearchTable AS storder ON (ncl.Title LIKE storder.Words ESCAPE ''''\'''' OR ncl.SubTitle LIKE storder.Words ESCAPE ''''\'''') ''
			ELSE
				SET @MainContentFilter = @MainContentFilter + N''
				LEFT OUTER JOIN @SearchTable AS storder ON (ncl.Title LIKE storder.Words ESCAPE ''''\'''' OR ncl.SubTitle LIKE storder.Words ESCAPE ''''\'''' OR ncl.CleanArticleData LIKE storder.Words ESCAPE ''''\'''') ''
		END
	END

	SET @MainContentFilter = @MainContentFilter + N''
	WHERE n.ArticleID IN( ''

	IF @UseAndOperator IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID		
			WHERE na.ArticleID IN ( '';
	END
	
	SET @MainContentFilter = @MainContentFilter + N''
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter) ''

		SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''
	
		AND na.HasPermissions = 0 ''

	IF @SimpleSearchFindCondition IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
		UNION
		SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
			INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words ''

			SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N''
		
			AND na.HasPermissions = 0 ''
	END
	
	SET @MainContentFilter = @MainContentFilter + N''
	UNION ALL
	SELECT ArticleID FROM (
		SELECT ArticleID FROM (
		SELECT aup.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ''
			IF @EditAll <> 1
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N'' WHERE aup.Show = 1 ''
				IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID IS NULL ''
				ELSE SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID = @UserID ''
			END
		IF @UserID <> -1
		BEGIN
			SET @MainContentFilter = @MainContentFilter + N''
			UNION
			SELECT arp.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ''
				IF @EditAll <> 1
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N'' WHERE arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
				END
		END
		SET @MainContentFilter = @MainContentFilter + N''
		) AS PermissionsByArticle
		INTERSECT
		SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

		SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

		AND na.HasPermissions = 1 '' 
		
		IF @SimpleSearchFindCondition IS NOT NULL
		BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
		UNION
		SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
			INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words ''

			SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N''
		
			AND na.HasPermissions = 1 ''
		END
			
	SET @MainContentFilter = @MainContentFilter + N''
	) AS HasPermissionsTrue ''
	
	IF @UseAndOperator IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FiltredByCategories) '';
	END

	SET @MainContentFilter = @MainContentFilter + N'' 
	) ''

	IF @SimpleSearchFindCondition IS NOT NULL
		SET @MainContentFilter = @MainContentFilter + N''
		) AS DupliContent ) AS OrderedContentRemovedDupli WHERE orderDup = 1''
	
	IF @OrderByColumnName = N''CommentedDate''
		SET @MainContentFilter = @MainContentFilter + N'') AS inner_all ON nc.ArticleID = inner_all.ArticleID AND nc.Approved = ''''True'''' AND nc.PortalID = @PortalID
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1''

SET @MainContentFilter = @MainContentFilter + N'' ) AS FinalAnyContent
) ''

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N''
SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID],n.[ContactEmail], '';
ELSE
SET @sqlcommand = @sqlcommand + N''
SELECT n.[ArticleID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],n.[ContactEmail], '';


IF @EditAll = 0
	SET @sqlcommand = @sqlcommand + N''0 AS CanEdit, ''
ELSE IF @EditAll = 1
	SET @sqlcommand = @sqlcommand + N''1 AS CanEdit, ''
ELSE IF @EditAll = 2
BEGIN
	IF @EditOnlyAsOwner = 0
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories))
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
	ELSE
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE n.UserID = @UserID AND c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
END
ELSE IF @EditAll = 3
BEGIN
	IF @EditOnlyAsOwner = 0
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
	ELSE
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
END
ELSE
	SET @sqlcommand = @sqlcommand + N''0 AS CanEdit, ''

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N''
	(SELECT c.CategoryID AS "@id", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserViewCategories) AND c.PortalID = @PortalID
	ORDER BY c.Position
	FOR XML PATH(''''category''''), ROOT(''''categories'''')) AS CatToShow, ''
ELSE
SET @sqlcommand = @sqlcommand + N''
	(SELECT c.CategoryID AS "@id", lc.Name AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.ID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''''category''''), ROOT(''''categories'''')) AS CatToShow, ''

SET @sqlcommand = @sqlcommand + N''
CASE n.Active
	WHEN 1 THEN 0
	WHEN 0 THEN 1
END AS Published, ''
IF @UserCanApprove = 0
	SET @sqlcommand = @sqlcommand + N''0 AS Approve, ''
ELSE
	SET @sqlcommand = @sqlcommand + N''
		CASE n.Approved
			WHEN 1 THEN 0
			WHEN 0 THEN n.Active
		END AS Approve, ''
SET @sqlcommand = @sqlcommand + N''e_fsd.ContentCount ''

IF @SimpleSearchFindCondition IS NOT NULL
	SET @MainContentFilter = @MainContentFilter + N'' ,e_fsd.SearchPhraseOrder '';

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT fsAll.[ArticleID],fsAll.CommentedDate,fsAll.ContentCount,fsAll.SearchPhraseOrderFROM (	 
				SELECT inr_ac.[ArticleID],inr_ac.CommentedDate,inr_ac.ContentCount,inr_ac.SearchPhraseOrder
				,ROW_NUMBER() OVER (ORDER BY ''
				IF @SimpleSearchFindCondition IS NOT NULL
					SET @sqlcommand = @sqlcommand + N''inr_ac.SearchPhraseOrder DESC, ''
				IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inr_n.Featured DESC, '' SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inr_n INNER JOIN AllContent AS inr_ac ON inr_n.ArticleID = inr_ac.ArticleID
			) AS fsAll
			WHERE fsAll.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT fsAll.[ArticleID],fsAll.'' + @OrderByColumnName + '',fsAll.ContentCount,fsAll.SearchPhraseOrder FROM (	 
				SELECT inr_ac.[ArticleID],fv.'' + @OrderByColumnName + '',inr_ac.ContentCount,inr_ac.SearchPhraseOrder
				,ROW_NUMBER() OVER (ORDER BY ''
				IF @SimpleSearchFindCondition IS NOT NULL
					SET @sqlcommand = @sqlcommand + N''inr_ac.SearchPhraseOrder DESC, ''
				IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inr_n.Featured DESC, ''
				IF @OrderByDirection = ''ASC''
					SET @sqlcommand = @sqlcommand + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
				
				SET @sqlcommand = @sqlcommand + N''fv.''+ @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inr_n
					INNER JOIN AllContent AS inr_ac ON inr_n.ArticleID = inr_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inr_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS fsAll
			WHERE fsAll.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN
		(
			SELECT fsAll.ArticleID,fsAll.ContentCount,fsAll.SearchPhraseOrder FROM (
				SELECT inr_ac.ArticleID,inr_ac.ContentCount,inr_ac.SearchPhraseOrder, ROW_NUMBER() OVER (ORDER BY ''
				IF @SimpleSearchFindCondition IS NOT NULL
					SET @sqlcommand = @sqlcommand + N''inr_ac.SearchPhraseOrder DESC, ''
				IF @FirstOrderBy = ''inr_n.Featured DESC'' SET @sqlcommand = @sqlcommand + N''inr_n.Featured DESC, '' SET @sqlcommand = @sqlcommand + N'' '' + @CleanOrderColumnWithDirection + N'') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inr_n
				INNER JOIN AllContent AS inr_ac ON inr_n.ArticleID = inr_ac.ArticleID
			) AS fsAll
			WHERE fsAll.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '';
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT fsAll.[ArticleID],fsAll.CommentedDate,fsAll.ContentCount,fsAll.SearchPhraseOrder FROM (	 
				SELECT inr_n.[ArticleID],inr_ac.CommentedDate,inr_ac.ContentCount,inr_ac.SearchPhraseOrder
				,ROW_NUMBER() OVER (ORDER BY ''
				IF @SimpleSearchFindCondition IS NOT NULL
					SET @sqlcommand = @sqlcommand + N''inr_ac.SearchPhraseOrder DESC, ''
				IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inr_n.Featured DESC, '' SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inr_n
					INNER JOIN AllContent AS inr_ac ON inr_n.ArticleID = inr_ac.ArticleID
			) AS fsAll
			WHERE fsAll.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT fsAll.[ArticleID],fsAll.'' + @OrderByColumnName + '',fsAll.ContentCount,fsAll.SearchPhraseOrder FROM (	 
				SELECT inr_n.[ArticleID],fv.'' + @OrderByColumnName + '',inr_ac.ContentCount,inr_ac.SearchPhraseOrder
				,ROW_NUMBER() OVER (ORDER BY ''
				IF @SimpleSearchFindCondition IS NOT NULL
					SET @sqlcommand = @sqlcommand + N''inr_ac.SearchPhraseOrder DESC, ''
				IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inr_n.Featured DESC, fv.''
				IF @OrderByDirection = ''ASC''
					SET @sqlcommand = @sqlcommand + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
				
				SET @sqlcommand = @sqlcommand + N''fv.''+ @CleanOrderColumnWithDirection + N'') AS Kulike
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inr_n
					INNER JOIN AllContent AS inr_ac ON inr_n.ArticleID = inr_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inr_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS fsAll
			WHERE fsAll.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN
		(
			SELECT fsAll.ArticleID,fsAll.ContentCount,fsAll.SearchPhraseOrder FROM (
				SELECT inr_ac.ArticleID,inr_ac.ContentCount,inr_ac.SearchPhraseOrder, ROW_NUMBER() OVER (ORDER BY ''
				IF @SimpleSearchFindCondition IS NOT NULL
					SET @sqlcommand = @sqlcommand + N''inr_ac.SearchPhraseOrder DESC, ''
				IF @FirstOrderBy = ''inr_n.Featured DESC'' SET @sqlcommand = @sqlcommand + N''inr_n.Featured DESC, '' SET @sqlcommand = @sqlcommand + N'' '' + @CleanOrderColumnWithDirection + N'') AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inr_n
				INNER JOIN AllContent AS inr_ac ON inr_n.ArticleID = inr_ac.ArticleID
			) AS fsAll
			WHERE fsAll.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '';
	END
END

SET @sqlcommand = @sqlcommand + N'' ORDER BY ''
	IF @SimpleSearchFindCondition IS NOT NULL
		SET @sqlcommand = @sqlcommand + N''e_fsd.SearchPhraseOrder DESC, '' 	
	IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''Featured DESC, ''
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = ''ASC''
		SET @sqlcommand = @sqlcommand + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

SET @sqlcommand = @sqlcommand + N''
IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
IF OBJECT_ID(''''tempdb..#UserEditCategories'''') IS NOT NULL
	DROP TABLE #UserEditCategories;
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;
IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;
IF OBJECT_ID(''''tempdb..#LocalizedCategories'''') IS NOT NULL
	DROP TABLE #LocalizedCategories; ''
		
exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRange = @DateRange
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@LocaleCode = @LocaleCode
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@FilterByTagID = @FilterByTagID
	,@FieldsTemplateID = @FieldsTemplateID
	,@SimpleSearchFindCondition = @SimpleSearchFindCondition

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@DateRange BIT = 0,
	@DateRangeType TINYINT = 0,
	@StartDate DATETIME = NULL,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL,
	@eToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange TINYINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	
	@FieldsTemplateID INT = NULL,
	@SearchOnlySelectedCFGroup BIT = 0,
	@CFGeneratedSQL NVARCHAR(MAX) = NULL,
	@SimpleSearchFindCondition NVARCHAR(300) = NULL,
	@SimpleSearchType TINYINT = NULL,
	@SysDatesWhereCondition NVARCHAR(1000) = NULL,
	@OrderByID INT = NULL
AS
SET NOCOUNT ON;
DECLARE @EditAll TINYINT;

DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF @AdminOrSuperUser = 1 OR (@EditOnlyAsOwner = 0 AND @Perm_EditAllCategores = 1) SET @EditAll = 1;
ELSE IF EXISTS(SELECT * FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)) SET @EditAll = 2;
ELSE SET @EditAll = 3;

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(2000);

SET @paramList = N''
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRange BIT
	,@DateRangeType TINYINT
	,@StartDate DATETIME
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange TINYINT
	,@FieldsTemplateID INT
	,@SimpleSearchFindCondition NVARCHAR(300)''

SET @sqlcommand = N''
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
	
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO #UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND ( ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate ) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;

CREATE TABLE #UserViewCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserViewCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EDS_ViewPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_ViewAllCategores,@PermissionSettingsSource,@CurrentDate)

IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;

CREATE TABLE #UserViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;

CREATE TABLE #FiltredByCategories (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#LocalizedCategories'''') IS NOT NULL
	DROP TABLE #LocalizedCategories; ''

IF @LocaleCode IS NOT NULL
SET @sqlcommand = @sqlcommand + N'' 
CREATE TABLE #LocalizedCategories (ID INT NOT NULL PRIMARY KEY, Name NVARCHAR(200)); ''

IF @EditAll = 2
SET @sqlcommand = @sqlcommand + N'' 

IF OBJECT_ID(''''tempdb..#UserEditCategories'''') IS NOT NULL
	DROP TABLE #UserEditCategories;

CREATE TABLE #UserEditCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate) ''

IF @NewsFilterCategories IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #FiltredByCategories SELECT fc.KeyID FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID IN (SELECT CAtegoryID FROM #FiltredByCategories); ''
END
ELSE
BEGIN

	IF @OuterModuleID = 0 AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- -- portal settings
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; ''

	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID ''
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID = 0 AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- portal settings
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; ''

	IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID = @OnlyOneCategory;
		INSERT INTO #FiltredByCategories SELECT @OnlyOneCategory; ''
	END
	ELSE IF @OuterModuleID <> 0
	BEGIN
		IF @CategoryFilterType = 0 -- 0 All categories
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter 
			SELECT c.[CategoryID] FROM #UserViewCategories AS c
			WHERE c.[CategoryID] IN (SELECT mci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci WHERE mci.ModuleID = @OuterModuleID);

			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID; ''
		END
		ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			;WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
		END
	END
	ELSE
	BEGIN
		IF @CategoryFilterType = 0 -- 0 All categories
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		BEGIN
			IF @FillterSettingsSource = 1 -- portal
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT c.[CategoryID] FROM #UserViewCategories AS c
				WHERE c.[CategoryID] IN (SELECT pci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci WHERE pci.PortalID = @PortalID);		
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID; ''
			END
			ELSE -- module
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT c.[CategoryID] FROM #UserViewCategories AS c
				WHERE c.[CategoryID] IN (SELECT mci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci WHERE mci.ModuleID = @ModuleID);
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID; ''
			END
		END
		ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		BEGIN
			IF @FillterSettingsSource = 1 -- portal
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
			ELSE -- module
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
		END
	END
END

DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
			IF @FilterByAuthor <> 0
				SET @FilterAuthorOrAuthors = 1;
	END
	ELSE
	BEGIN
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE
		BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;	
		ELSE IF @FilterByAuthor <> 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE IF @FilterByGroupID <> 0
			SET @FilterAuthorOrAuthors = 1;
		END
	END
END
ELSE
	SET @FilterAuthorOrAuthors = 1;

SET @sqlcommand = @sqlcommand + N''
DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY); ''

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile]
				WHERE [AuthorProfileID] = @FilterByAuthor;
			END ''
		END
	END
	ELSE
	BEGIN
		-- ovaj dio odnosi se na filtriranje autora
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; ''
		END
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				IF @FillterSettingsSource = 1
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID;
				ELSE
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; ''
			END
			ELSE IF @FilterByAuthor <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor; ''
			END
			ELSE IF @FilterByGroupID <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; ''
			END
		END
	END
END
ELSE
BEGIN
	-- treba selektirati sve autore ili grupe !!!
	SET @FilterAuthorOrAuthors = 1;
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE PortalID = @PortalID
		UNION
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID; ''
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE PortalID = @PortalID; ''
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT ap.[UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID; ''
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS ID, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID
	WHERE c.CategoryID IN (SELECT CategoryID FROM #UserViewCategories) AND c.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode; ''

IF @CFGeneratedSQL IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'' DECLARE @tempArticles TABLE (ArticleID INT NOT NULL PRIMARY KEY); '' + @CFGeneratedSQL;

IF @SimpleSearchFindCondition IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'' 
	DECLARE @SearchTable TABLE (Words NVARCHAR(256) NOT NULL, SearchPhraseOrder BIT);
	DECLARE @word NVARCHAR(256), @PosWord INT
	SET @SimpleSearchFindCondition = LTRIM(RTRIM(@SimpleSearchFindCondition))+ '''':''''
	SET @PosWord = CHARINDEX('''':'''', @SimpleSearchFindCondition, 1)
	IF REPLACE(@SimpleSearchFindCondition, '''':'''', '''''''') <> ''''''''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SimpleSearchFindCondition, @PosWord - 1)))
			IF @word <> ''''''''
			BEGIN
				SET @word = replace( 
							replace( 
							replace( 
							replace( @word
							,''''\'''', ''''\\'''' )
							,''''%'''', ''''\%'''' )
							,''''_'''', ''''\_'''' )
							,''''['''', ''''\['''' );
				IF CHARINDEX('''' '''', @word) > 0
				BEGIN
					INSERT INTO @SearchTable VALUES (''''% ''''+@word+''''%'''', 1)
					INSERT INTO @SearchTable VALUES (@word+''''%'''', 1)
				END
				ELSE
				BEGIN
					INSERT INTO @SearchTable VALUES (''''% ''''+@word+''''%'''', 0)
					INSERT INTO @SearchTable VALUES (@word+''''%'''', 0)
				END
			END
			SET @SimpleSearchFindCondition = RIGHT(@SimpleSearchFindCondition, LEN(@SimpleSearchFindCondition) - @PosWord)
			SET @PosWord = CHARINDEX('''':'''', @SimpleSearchFindCondition, 1)
		END
	END '';

SET @TopInnerFilter = N'''';

IF @CFGeneratedSQL IS NOT NULL
	SET @TopInnerFilter = @TopInnerFilter + N''
	INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID ''

IF @GoogleMapsFilter = 2
	SET @TopInnerFilter = @TopInnerFilter + N''
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N''''''''''	
ELSE IF @GoogleMapsFilter = 1
	SET @TopInnerFilter = @TopInnerFilter + N''
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID ''

IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
	SET @TopInnerFilter = @TopInnerFilter + N''
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
IF @FilterByDNNGroupID <> 0 
	SET @TopInnerFilter = @TopInnerFilter + N''
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID ''
ELSE IF @FilterByDNNUserID <> 0
	SET @TopInnerFilter = @TopInnerFilter + N''
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

IF @SimpleSearchFindCondition IS NOT NULL
BEGIN
	IF @LocaleCode IS NULL
	BEGIN
		IF @SimpleSearchType = 2
			SET @TopInnerFilter = @TopInnerFilter + N''
			INNER JOIN @SearchTable AS st ON (na.CleanArticleData LIKE st.Words ESCAPE ''''\'''') ''
		ELSE IF @SimpleSearchType = 1
		SET @TopInnerFilter = @TopInnerFilter + N''
			INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE ''''\'''' OR na.SubTitle LIKE st.Words ESCAPE ''''\'''') ''
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N''
			INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE ''''\'''' OR na.SubTitle LIKE st.Words ESCAPE ''''\'''' OR na.CleanArticleData LIKE st.Words ESCAPE ''''\'''') ''	
	END
	ELSE
	BEGIN
		IF @SimpleSearchType = 2
			SET @TopInnerFilter = @TopInnerFilter + N''
			INNER JOIN @SearchTable AS st ON (ncl.CleanArticleData LIKE st.Words ESCAPE ''''\'''') ''
		ELSE IF @SimpleSearchType = 1
		SET @TopInnerFilter = @TopInnerFilter + N''
			INNER JOIN @SearchTable AS st ON (ncl.Title LIKE st.Words ESCAPE ''''\'''' OR ncl.SubTitle LIKE st.Words ESCAPE ''''\'''') ''
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N''
			INNER JOIN @SearchTable AS st ON (ncl.Title LIKE st.Words ESCAPE ''''\'''' OR ncl.SubTitle LIKE st.Words ESCAPE ''''\'''' OR ncl.CleanArticleData LIKE st.Words ESCAPE ''''\'''') ''
	END
END

	IF @FilterByTags = 1 SET @TopInnerFilter = @TopInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
	IF @FilterByArticles = 1 SET @TopInnerFilter = @TopInnerFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
SET @TopInnerFilter = @TopInnerFilter + N''
WHERE na.PortalID=@PortalID ''

	IF @SysDatesWhereCondition IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + @SysDatesWhereCondition

	IF @AdminFuturePostsVisible = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
		ELSE SET @TopInnerFilter = @TopInnerFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
	ELSE SET @TopInnerFilter = @TopInnerFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		
	IF @LocaleCode IS NULL SET @TopInnerFilter = @TopInnerFilter + N'' AND na.HideDefaultLocale = 0 ''
	IF @Featured = 1 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.Featured = 1 ''
	IF @FilterByDNNUserID <> 0 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.UserID = @FilterByDNNUserID ''
	ELSE IF @FilterAuthorOrAuthors = 1 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
	
	IF @EditAll <> 1
	BEGIN
		IF @UserCanApprove = 0 SET @TopInnerFilter = @TopInnerFilter + N'' AND na.Approved = 1 ''
		SET @TopInnerFilter = @TopInnerFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''		
	END

	IF @SearchOnlySelectedCFGroup = 1
		SET @TopInnerFilter = @TopInnerFilter + N'' AND na.CFGroupeID = @FieldsTemplateID ''	

-- only for tag filter + simple search
IF @SimpleSearchFindCondition IS NOT NULL
BEGIN

	DECLARE @TopTagInnerFilter NVARCHAR(MAX);
	SET @TopTagInnerFilter = N'''';
		IF @CFGeneratedSQL IS NOT NULL
		SET @TopTagInnerFilter = @TopTagInnerFilter + N''
		INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID ''

	IF @GoogleMapsFilter = 2
		SET @TopTagInnerFilter = @TopTagInnerFilter + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N''''''''''
	ELSE IF @GoogleMapsFilter = 1
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID ''

	IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL) SET @TopTagInnerFilter = @TopTagInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	IF @FilterByDNNGroupID <> 0 
		SET @TopTagInnerFilter = @TopTagInnerFilter + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopTagInnerFilter = @TopTagInnerFilter + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

	IF @FilterByTags = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
	IF @FilterByArticles = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
	SET @TopTagInnerFilter = @TopTagInnerFilter + N''
	WHERE na.PortalID=@PortalID ''

	IF @SysDatesWhereCondition IS NOT NULL
		SET @TopTagInnerFilter = @TopTagInnerFilter + @SysDatesWhereCondition

	IF @AdminFuturePostsVisible = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
		ELSE SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
	ELSE SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		
	IF @LocaleCode IS NULL SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.HideDefaultLocale = 0 ''
	IF @Featured = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.Featured = 1 ''
	IF @FilterByDNNUserID <> 0 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.UserID = @FilterByDNNUserID ''
	ELSE IF @FilterAuthorOrAuthors = 1 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
	
	IF @EditAll <> 1
	BEGIN
		IF @UserCanApprove = 0 SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.Approved = 1 ''
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''		
	END

	IF @SearchOnlySelectedCFGroup = 1
		SET @TopTagInnerFilter = @TopTagInnerFilter + N'' AND na.CFGroupeID = @FieldsTemplateID ''	
END

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);
DECLARE @ControlTypeID INT;

IF @OrderByID IS NOT NULL
BEGIN
	DECLARE @CfOrderByID INT;
	DECLARE @SysOrderByID INT;
	DECLARE @SortOrder NCHAR(4);

	SELECT @CfOrderByID = CfIdOrderable
		,@SysOrderByID = SysIdOrderable
		,@SortOrder = SortOrder
	FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsOrderByItems] AS obi
	WHERE obi.Id = @OrderByID
		--AND obi.CustomFieldID IN (
		--	SELECT CustomFieldID
		--	FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems]
		--	WHERE FieldsTemplateID = @FieldsTemplateID
		--	)

	IF @CfOrderByID IS NOT NULL
	BEGIN

		SELECT @ControlTypeID = [ControlTypeID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNfields]
		WHERE CustomFieldID = @CfOrderByID
			AND IsOrderable = 1;

		IF @ControlTypeID IS NOT NULL
		BEGIN
			SELECT @OrderByColumnName = CASE @ControlTypeID
					WHEN 1
						THEN N''[Text]''
					WHEN 3
						THEN N''[Int]''
					WHEN 4
						THEN N''[Decimal]''
					WHEN 5
						THEN N''[Decimal]''
					WHEN 6
						THEN N''[Text]''
					WHEN 9
						THEN N''[DateTime]''
					WHEN 10
						THEN N''[Text]''
					ELSE NULL
					END

			IF @OrderByColumnName IS NULL
			BEGIN
				SET @OrderByID = NULL;
				SET @CfOrderByID = NULL;
				SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
				SET @OrderByDirection = N''DESC'';
				SET @OrderByColumnName = N''[PublishDate]'';
			END
			ELSE
			BEGIN
				SET @OrderByCustomFieldID = @CfOrderByID;
				SET @OrderByDirection = @SortOrder;
			END
		END
		ELSE
		BEGIN
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByDirection = N''DESC'';
			SET @OrderByColumnName = N''[PublishDate]'';
		END
	END
	ELSE
		IF @SysOrderByID IS NOT NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			
			SELECT @OrderByColumnName = CASE @SysOrderByID
					WHEN 0
						THEN N''[DateAdded]''
					WHEN 1
						THEN N''[LastModified]''
					WHEN 2
						THEN N''[PublishDate]''
					WHEN 3
						THEN N''[ExpireDate]''
					WHEN 4
						THEN N''[NumberOfViews]''
					WHEN 5
						THEN N''[RatingValue]''
					WHEN 6
						THEN N''[Title]''
					WHEN 7
						THEN N''[StartDate]''
					WHEN 8
						THEN N''CommentedDate''
					WHEN 9
						THEN N''[NumberOfComments]''
					WHEN 10
						THEN N''NEWID()''				
					ELSE N''[PublishDate]''
					END
			
			SET @OrderByDirection = @SortOrder;
		END
		ELSE
		BEGIN	
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
			SET @OrderByDirection = N''DESC'';
			SET @OrderByColumnName = N''[PublishDate]'';
		END
END
ELSE IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N''[Text]''
				WHEN 3 THEN N''[Int]''
				WHEN 4 THEN N''[Decimal]''
				WHEN 5 THEN N''[Decimal]''
				WHEN 6 THEN N''[Text]''
				WHEN 9 THEN N''[DateTime]''
				WHEN 10 THEN N''[Text]''
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N''[PublishDate]'';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N''[PublishDate]'';
	END
END

IF @OrderByColumnName = N''NEWID()''
BEGIN
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
	SET @OrderByDirection = N''''
END
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N'' '' + @OrderByDirection;

SET @MainContentFilter = N''
;WITH AllContent AS( 
	SELECT FinalAnyContent.*, COUNT(*) OVER() AS ContentCount FROM (''

	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
		SELECT ArticleID, CommentedDate,RecurringID,StartDate,SearchPhraseOrder FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,inner_all.RecurringID
			,inner_all.StartDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID], inner_all.RecurringID ORDER BY ''
			
			IF @FirstOrderBy = ''Featured DESC'' SET @MainContentFilter = @MainContentFilter + N''inner_all.Featured DESC, ''
			
			SET @MainContentFilter = @MainContentFilter + N'' nc.[DateAdded] '' + @OrderByDirection + '') AS OnlyFirstOccurance
			
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsComments] AS nc
		INNER JOIN ('';
	END
	
	IF @SimpleSearchFindCondition IS NOT NULL
		SET @MainContentFilter = @MainContentFilter + N''
		SELECT OrderedContentRemovedDupli.* FROM (
		SELECT DupliContent.*, ROW_NUMBER() OVER(PARTITION BY [ArticleID] ORDER BY SearchPhraseOrder DESC) AS orderDup
		FROM ( ''
	
	SET @MainContentFilter = @MainContentFilter + N''
	SELECT n.ArticleID,n.Featured,
		CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
		CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID ''
		
	IF @SimpleSearchFindCondition IS NOT NULL
		SET @MainContentFilter = @MainContentFilter + N'',CASE WHEN storder.SearchPhraseOrder IS NULL THEN 0 ELSE storder.SearchPhraseOrder END AS SearchPhraseOrder ''	
	ELSE
		SET @MainContentFilter = @MainContentFilter + N'',NULL AS SearchPhraseOrder ''
		
	SET @MainContentFilter = @MainContentFilter + N''	
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ''
	
	-- only because AND order first - NULL because of tags
	IF @SimpleSearchFindCondition IS NOT NULL
	BEGIN
		IF @LocaleCode IS NULL
		BEGIN
			IF @SimpleSearchType = 2
				SET @MainContentFilter = @MainContentFilter + N''
				LEFT OUTER JOIN @SearchTable AS storder ON (n.CleanArticleData LIKE storder.Words ESCAPE ''''\'''') ''
			ELSE IF @SimpleSearchType = 1
			SET @MainContentFilter = @MainContentFilter + N''
				LEFT OUTER JOIN @SearchTable AS storder ON (n.Title LIKE storder.Words ESCAPE ''''\'''' OR n.SubTitle LIKE storder.Words ESCAPE ''''\'''') ''
			ELSE
				SET @MainContentFilter = @MainContentFilter + N''
				LEFT OUTER JOIN @SearchTable AS storder ON (n.Title LIKE storder.Words ESCAPE ''''\'''' OR n.SubTitle LIKE storder.Words ESCAPE ''''\'''' OR n.CleanArticleData LIKE storder.Words ESCAPE ''''\'''') ''	
		END
		ELSE
		BEGIN
			SET @MainContentFilter = @MainContentFilter + N''
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
		
			IF @SimpleSearchType = 2
				SET @MainContentFilter = @MainContentFilter + N''
				LEFT OUTER JOIN @SearchTable AS storder ON (ncl.CleanArticleData LIKE storder.Words ESCAPE ''''\'''') ''
			ELSE IF @SimpleSearchType = 1
			SET @MainContentFilter = @MainContentFilter + N''
				LEFT OUTER JOIN @SearchTable AS storder ON (ncl.Title LIKE storder.Words ESCAPE ''''\'''' OR ncl.SubTitle LIKE storder.Words ESCAPE ''''\'''') ''
			ELSE
				SET @MainContentFilter = @MainContentFilter + N''
				LEFT OUTER JOIN @SearchTable AS storder ON (ncl.Title LIKE storder.Words ESCAPE ''''\'''' OR ncl.SubTitle LIKE storder.Words ESCAPE ''''\'''' OR ncl.CleanArticleData LIKE storder.Words ESCAPE ''''\'''') ''
		END
	END
	
	SET @MainContentFilter = @MainContentFilter + N''	
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND ''
	IF @DateRangeType = 2
		SET @MainContentFilter = @MainContentFilter + N''
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
	ELSE IF @DateRangeType = 1
		BEGIN
			IF @ListArchive = 0
				SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
			ELSE
				SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
		END
	ELSE IF @DateRangeType = 0
		SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
	ELSE
		SET @MainContentFilter = @MainContentFilter + N'' 1 = 0''
	
	SET @MainContentFilter = @MainContentFilter + N''
	WHERE n.ArticleID IN( ''
	 
	 -- tu bi trebal staviti okolo da se filtrira po and !!!
	 
	IF @UseAndOperator IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID		
			WHERE na.ArticleID IN ( '';
	END
	 
	 SET @MainContentFilter = @MainContentFilter + N''
		SELECT [ArticleID] FROM (
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter) ''
			
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''
			
				AND na.HasPermissions = 0
				AND na.EventArticle = 0 ''

				IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainContentFilter = @MainContentFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
			
			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
			SET @MainContentFilter = @MainContentFilter + N''
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words  ''
			
				SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N''
			
				AND na.HasPermissions = 0
				AND na.EventArticle = 0 ''

				IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainContentFilter = @MainContentFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''

			END
			
			SET @MainContentFilter = @MainContentFilter + N''
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''

				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

				AND na.HasPermissions = 0
				AND na.EventArticle = 1
				AND ne.Recurring = 0 ''

				IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
					ELSE
						SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
				END
				ELSE IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''

			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
			SET @MainContentFilter = @MainContentFilter + N''
			UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words  ''

				SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N''

				AND na.HasPermissions = 0
				AND na.EventArticle = 1
				AND ne.Recurring = 0 ''

				IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
					ELSE
						SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
				END
				ELSE IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''

			END

			SET @MainContentFilter = @MainContentFilter + N''
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
				IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N''
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
						ELSE
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
					END
				ELSE IF @DateRangeType = 0
					SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
				ELSE SET @MainContentFilter = @MainContentFilter + N'' 1 = 0 ''

				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

				AND na.HasPermissions = 0
				AND na.EventArticle = 1
				AND ne.Recurring = 1 ''

			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
			SET @MainContentFilter = @MainContentFilter + N''
			UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
				IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N''
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
						ELSE
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
					END
				ELSE IF @DateRangeType = 0
					SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
				ELSE SET @MainContentFilter = @MainContentFilter + N'' 1 = 0 ''

				SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N''

				AND na.HasPermissions = 0
				AND na.EventArticle = 1
				AND ne.Recurring = 1 ''
			END

			SET @MainContentFilter = @MainContentFilter + N''
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

				AND na.HasPermissions = 1
				AND na.EventArticle = 0 ''
				IF @EditAll <> 1
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N'' AND aup.Show = 1 ''
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID IS NULL ''
					ELSE SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID = @UserID ''
				END
				IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainContentFilter = @MainContentFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
			
			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
			SET @MainContentFilter = @MainContentFilter + N''
			UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words  ''

				SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N''

				AND na.HasPermissions = 1
				AND na.EventArticle = 0 ''
				IF @EditAll <> 1
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N'' AND aup.Show = 1 ''
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID IS NULL ''
					ELSE SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID = @UserID ''
				END
				IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainContentFilter = @MainContentFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				
			END
			
			SET @MainContentFilter = @MainContentFilter + N''
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''
				
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''
					 	 
				AND na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 0 ''
				IF @EditAll <> 1
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N'' AND aup.Show = 1 ''
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID IS NULL ''
					ELSE SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID = @UserID ''
				END
				IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
					ELSE
						SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
				END
				ELSE IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
					
			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
			SET @MainContentFilter = @MainContentFilter + N''
			UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words  ''
				
				SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N''
					 	 
				AND na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 0 ''
				IF @EditAll <> 1
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N'' AND aup.Show = 1 ''
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID IS NULL ''
					ELSE SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID = @UserID ''
				END
				IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
					ELSE
						SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
				END
				ELSE IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
				
			END
					
			SET @MainContentFilter = @MainContentFilter + N''
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
				IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N''
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
						ELSE
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
					END
				ELSE IF @DateRangeType = 0
					SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
				ELSE SET @MainContentFilter = @MainContentFilter + N'' 1 = 0 ''

				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

				AND na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 1 ''
				IF @EditAll <> 1
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N'' AND aup.Show = 1 ''
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID IS NULL ''
					ELSE SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID = @UserID ''
				END
			
			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
			SET @MainContentFilter = @MainContentFilter + N''
			UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
				IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N''
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
						ELSE
							SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
					END
				ELSE IF @DateRangeType = 0
					SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
				ELSE SET @MainContentFilter = @MainContentFilter + N'' 1 = 0 ''

				SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N''

				AND na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 1 ''
				IF @EditAll <> 1
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N'' AND aup.Show = 1 ''
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID IS NULL ''
					ELSE SET @MainContentFilter = @MainContentFilter + N'' AND aup.UserID = @UserID ''
				END
				
			END
			
				SET @MainContentFilter = @MainContentFilter + N''
		) AS WithNoRolePermissions ''

		IF @UserID <> -1
		BEGIN
			SET @MainContentFilter = @MainContentFilter + N''
			UNION
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''
					
					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''
					
					AND na.HasPermissions = 1
					AND na.EventArticle = 0 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					END
					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainContentFilter = @MainContentFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''


				IF @SimpleSearchFindCondition IS NOT NULL
				BEGIN
				SET @MainContentFilter = @MainContentFilter + N''
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
					INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words  ''
					
					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N''
					
					AND na.HasPermissions = 1
					AND na.EventArticle = 0 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					END
					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainContentFilter = @MainContentFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				
				END

				SET @MainContentFilter = @MainContentFilter + N''
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0 ''

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 0 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					END
					IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
							ELSE
								SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
						END
						ELSE IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
				
				IF @SimpleSearchFindCondition IS NOT NULL
				BEGIN
				SET @MainContentFilter = @MainContentFilter + N''
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
					INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words  ''

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N''

					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 0 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					END
					IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
							ELSE
								SET @MainContentFilter = @MainContentFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
						END
						ELSE IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
				
				END
				
				SET @MainContentFilter = @MainContentFilter + N''
				UNION All
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
					IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N''
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
							ELSE
								SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
					ELSE SET @MainContentFilter = @MainContentFilter + N'' 1 = 0 ''

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N''

					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 1 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					END
			
				IF @SimpleSearchFindCondition IS NOT NULL
				BEGIN
				SET @MainContentFilter = @MainContentFilter + N''
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
					INNER JOIN @SearchTable AS stt ON newt.Name Like stt.Words 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
					IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N''
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
							ELSE
								SET @MainContentFilter = @MainContentFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
					ELSE SET @MainContentFilter = @MainContentFilter + N'' 1 = 0 ''

					SET @MainContentFilter = @MainContentFilter + @TopTagInnerFilter + N''

					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 1 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					END
			
				
				END
					
			SET @MainContentFilter = @MainContentFilter + N''
			) AS ByRolePermissions ''
		END
	
	-- treba desti ako se koristi AND operator
	
	IF @UseAndOperator IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N''
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FiltredByCategories) '';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'' 
	) ''
	IF @SimpleSearchFindCondition IS NOT NULL
		SET @MainContentFilter = @MainContentFilter + N'' 
		) AS DupliContent ) AS OrderedContentRemovedDupli WHERE orderDup = 1''
	
	IF @OrderByColumnName = N''CommentedDate''
		SET @MainContentFilter = @MainContentFilter + N'') AS inner_all ON nc.ArticleID = inner_all.ArticleID AND nc.Approved = ''''True'''' AND nc.PortalID = @PortalID
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1''
	
SET @MainContentFilter = @MainContentFilter + N'' ) AS FinalAnyContent
) ''

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N''
SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
	,e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], ''
ELSE
SET @sqlcommand = @sqlcommand + N''
SELECT n.[ArticleID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], '';

IF @EditAll = 0
	SET @sqlcommand = @sqlcommand + N''0 AS CanEdit, ''
ELSE IF @EditAll = 1
	SET @sqlcommand = @sqlcommand + N''1 AS CanEdit, ''
ELSE IF @EditAll = 2
BEGIN
	IF @EditOnlyAsOwner = 0
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories))
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
	ELSE
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE n.UserID = @UserID AND c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
END
ELSE IF @EditAll = 3
BEGIN
	IF @EditOnlyAsOwner = 0
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
	ELSE
		SET @sqlcommand = @sqlcommand + N''
			CASE WHEN EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0 END AS CanEdit, ''
END
ELSE
	SET @sqlcommand = @sqlcommand + N''0 AS CanEdit, ''

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N''
	(SELECT c.CategoryID AS "@id", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserViewCategories) AND c.PortalID = @PortalID
	ORDER BY c.Position
	FOR XML PATH(''''category''''), ROOT(''''categories'''')) AS CatToShow, ''
ELSE
SET @sqlcommand = @sqlcommand + N''
	(SELECT c.CategoryID AS "@id", lc.Name AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.ID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''''category''''), ROOT(''''categories'''')) AS CatToShow, ''

SET @sqlcommand = @sqlcommand + N''
CASE n.Active
	WHEN 1 THEN 0
	WHEN 0 THEN 1
END AS Published, ''
IF @UserCanApprove = 0
	SET @sqlcommand = @sqlcommand + N''0 AS Approve, ''
ELSE
	SET @sqlcommand = @sqlcommand + N''
		CASE n.Approved
			WHEN 1 THEN 0
			WHEN 0 THEN n.Active
		END AS Approve, ''
SET @sqlcommand = @sqlcommand + N''e_fsd.ContentCount ''

IF @SimpleSearchFindCondition IS NOT NULL
	SET @MainContentFilter = @MainContentFilter + N'' ,e_fsd.SearchPhraseOrder '';

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT fsAll.[ArticleID],fsAll.StartDate,fsAll.RecurringID,fsAll.CommentedDate,fsAll.ContentCount,fsAll.SearchPhraseOrder FROM (	 
				SELECT inr_ac.[ArticleID],inr_ac.StartDate,inr_ac.RecurringID,inr_ac.CommentedDate,inr_ac.ContentCount,inr_ac.SearchPhraseOrder
				,ROW_NUMBER() OVER (ORDER BY ''
				IF @SimpleSearchFindCondition IS NOT NULL
					SET @sqlcommand = @sqlcommand + N''inr_ac.SearchPhraseOrder DESC, ''
				IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inr_n.Featured DESC, ''SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inr_n INNER JOIN AllContent AS inr_ac ON inr_n.ArticleID = inr_ac.ArticleID
			) AS fsAll
			WHERE fsAll.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'',e_fsd.'' + @OrderByColumnName + '',(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END)
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT fsAll.[ArticleID],fsAll.StartDate,fsAll.RecurringID,fsAll.'' + @OrderByColumnName + '',fsAll.ContentCount,fsAll.SearchPhraseOrder FROM (	 
				SELECT inr_ac.[ArticleID],inr_ac.StartDate,inr_ac.RecurringID,fv.'' + @OrderByColumnName + '',inr_ac.ContentCount,inr_ac.SearchPhraseOrder
				,ROW_NUMBER() OVER (ORDER BY ''
				IF @SimpleSearchFindCondition IS NOT NULL
					SET @sqlcommand = @sqlcommand + N''inr_ac.SearchPhraseOrder DESC, ''
				IF @FirstOrderBy = ''Featured DESC''
					SET @sqlcommand = @sqlcommand + N''inr_n.Featured DESC, ''	
				IF @OrderByDirection = ''ASC''
					SET @sqlcommand = @sqlcommand + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
				
				SET @sqlcommand = @sqlcommand + N''fv.''+ @CleanOrderColumnWithDirection + N'') AS Kulike	 	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inr_n
					INNER JOIN AllContent AS inr_ac ON inr_n.ArticleID = inr_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inr_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS fsAll
			WHERE fsAll.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT fsAll.[ArticleID],fsAll.StartDate,fsAll.RecurringID,fsAll.ContentCount,fsAll.SearchPhraseOrder FROM (	 
				SELECT inr_ac.[ArticleID],inr_ac.StartDate,inr_ac.RecurringID,inr_ac.ContentCount,inr_ac.SearchPhraseOrder
				,ROW_NUMBER() OVER (ORDER BY ''
				
				IF @SimpleSearchFindCondition IS NOT NULL
					SET @sqlcommand = @sqlcommand + N''inr_ac.SearchPhraseOrder DESC, '' 		
				IF @FirstOrderBy = ''Featured DESC''
					SET @sqlcommand = @sqlcommand + N''inr_n.Featured DESC, ''
					
				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inr_n
					INNER JOIN AllContent AS inr_ac ON inr_n.ArticleID = inr_ac.ArticleID
			) AS fsAll
			WHERE fsAll.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ''
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N''CommentedDate''
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT fsAll.[ArticleID],fsAll.StartDate,fsAll.RecurringID,fsAll.CommentedDate,fsAll.ContentCount,fsAll.SearchPhraseOrder FROM (	 
				SELECT inr_ac.[ArticleID],inr_ac.StartDate,inr_ac.RecurringID,inr_ac.CommentedDate,inr_ac.ContentCount,inr_ac.SearchPhraseOrder
				,ROW_NUMBER() OVER (ORDER BY ''
				IF @SimpleSearchFindCondition IS NOT NULL
					SET @sqlcommand = @sqlcommand + N''inr_ac.SearchPhraseOrder DESC, ''
				IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inr_n.Featured DESC, ''SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inr_n INNER JOIN AllContent AS inr_ac ON inr_n.ArticleID = inr_ac.ArticleID
			) AS fsAll
			WHERE fsAll.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '';
		END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT fsAll.[ArticleID],fsAll.StartDate,fsAll.RecurringID,fsAll.'' + @OrderByColumnName + '',fsAll.ContentCount,fsAll.SearchPhraseOrder FROM (	 
				SELECT inr_ac.[ArticleID],inr_ac.StartDate,inr_ac.RecurringID,fv.'' + @OrderByColumnName + '',inr_ac.ContentCount,inr_ac.SearchPhraseOrder
				,ROW_NUMBER() OVER (ORDER BY ''
				IF @SimpleSearchFindCondition IS NOT NULL
					SET @sqlcommand = @sqlcommand + N''inr_ac.SearchPhraseOrder DESC, ''
				IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inr_n.Featured DESC, ''	
				IF @OrderByDirection = ''ASC''
					SET @sqlcommand = @sqlcommand + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
				
				SET @sqlcommand = @sqlcommand + N''fv.''+ @CleanOrderColumnWithDirection + N'') AS Kulike	 	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inr_n
					INNER JOIN AllContent AS inr_ac ON inr_n.ArticleID = inr_ac.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inr_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS fsAll
			WHERE fsAll.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN 
		(
			SELECT fsAll.[ArticleID],fsAll.StartDate,fsAll.RecurringID,fsAll.ContentCount,fsAll.SearchPhraseOrder FROM (	 
				SELECT inr_ac.[ArticleID],inr_ac.StartDate,inr_ac.RecurringID,inr_ac.ContentCount,inr_ac.SearchPhraseOrder
				,ROW_NUMBER() OVER (ORDER BY ''
				IF @SimpleSearchFindCondition IS NOT NULL
					SET @sqlcommand = @sqlcommand + N''inr_ac.SearchPhraseOrder DESC, ''
				IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''inr_n.Featured DESC, ''SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N'') AS Kulike	 
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS inr_n 
					INNER JOIN AllContent AS inr_ac ON inr_n.ArticleID = inr_ac.ArticleID
			) AS fsAll
			WHERE fsAll.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '';
	END
END

SET @sqlcommand = @sqlcommand + N'' ORDER BY ''
	IF @SimpleSearchFindCondition IS NOT NULL
		SET @sqlcommand = @sqlcommand + N''e_fsd.SearchPhraseOrder DESC, '' 	
	IF @FirstOrderBy = ''Featured DESC'' SET @sqlcommand = @sqlcommand + N''n.Featured DESC, ''
	IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = ''ASC''
		SET @sqlcommand = @sqlcommand + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
	SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection

SET @sqlcommand = @sqlcommand + N''
IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
IF OBJECT_ID(''''tempdb..#UserEditCategories'''') IS NOT NULL
	DROP TABLE #UserEditCategories;
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;
IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;
IF OBJECT_ID(''''tempdb..#LocalizedCategories'''') IS NOT NULL
	DROP TABLE #LocalizedCategories; ''

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRange = @DateRange
	,@DateRangeType = @DateRangeType
	,@StartDate = @StartDate
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@FieldsTemplateID = @FieldsTemplateID
	,@SimpleSearchFindCondition = @SimpleSearchFindCondition' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsMenuGetCategories]
	@PortalID INT,
	@UserID INT,
	@MenuModuleID INT,
	@DefaultTabID INT,
    @DefaultModuleID INT,
	@AdminOrSuperUser BIT  = 0,
	@CountItems BIT = 0,
	@CountArticles BIT = NULL,
	@CountEvents BIT = NULL,
	@CountEventsLimitByDays INT = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDNNUserID INT = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID INT = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@LocaleCode NVARCHAR(20) = NULL,	
	@ShowAllAuthors BIT = 1, -- filter postavka menija
	@CategoryFilterType TINYINT = 0, --0 All categories, 1 - SELECTion, 2 - AutoAdd
	@HideUnlocalizedItems BIT = 0,
	@PermissionSettingsSource TINYINT = 0, -- None, 1 - portal, 2 - module
	@PermissionsModuleID INT = 0, -- NewsModuleID
	@UserCanApprove BIT = 0
AS
SET NOCOUNT ON;
DECLARE @sqlcommand NVARCHAR(MAX);

DECLARE @paramList NVARCHAR(2000);
SET @paramList = N''
	@PortalID INT,
	@UserID INT,
	@MenuModuleID INT,
	@DefaultTabID INT,
    @DefaultModuleID INT,
	@AdminOrSuperUser BIT,
	@CountItems BIT,
	@CountArticles BIT,
	@CountEvents BIT,
	@CountEventsLimitByDays INT,
	@IsSocialInstance BIT,
	@FilterByDNNUserID INT,
	@FilterByDNNGroupID INT,
	@LocaleCode NVARCHAR(20),	
	@ShowAllAuthors BIT,
	@CategoryFilterType TINYINT,
	@HideUnlocalizedItems BIT,
	@PermissionSettingsSource TINYINT,
	@PermissionsModuleID INT,
	@UserCanApprove BIT''
	
SET @sqlcommand = N''
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @StartDate DATETIME;
IF @CountEventsLimitByDays IS NOT NULL
BEGIN
	SET @StartDate = DATEADD(DD, -@CountEventsLimitByDays, @CurrentDate);
	SET @CountEventsLimitByDays = 1;
END

DECLARE @UserInRoles TABLE (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO @UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);
DECLARE @UserViewCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY);
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT NOT NULL PRIMARY KEY);

DECLARE @SettingsSource BIT; SET @SettingsSource = 1; ''

IF @AdminOrSuperUser = 1 OR @PermissionSettingsSource = 0
SET @sqlcommand = @sqlcommand + N'' INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlcommand = @sqlcommand + N'' 
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		ELSE
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL; ''
	END
	ELSE -- by module
	BEGIN
		SET @sqlcommand = @sqlcommand + N'' 
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE
		BEGIN
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL;
		END ''
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlcommand = @sqlcommand + N'' 
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL;
		END ''
	END
	ELSE -- by module
	BEGIN
		SET @sqlcommand = @sqlcommand + N'' 
		SELECT @SettingsSource = PermissionsPMSource FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID;
		IF @SettingsSource = 1
		BEGIN
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
			) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
			)
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL;
			END
		END
		ELSE
		BEGIN
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1 -- MAKNUTO PORTALID
			) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1  -- MAKNUTO PORTALID
			)
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
			BEGIN
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID 
				WHERE rps.ModuleID = @PermissionsModuleID  -- MAKNUTO PORTALID
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.ModuleID = @PermissionsModuleID;  -- MAKNUTO PORTALID
			END
		END''
	END
END

IF @CategoryFilterType = 0 -- 0 All categories
SET @sqlcommand = @sqlcommand + N'' INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories; '';
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
SET @sqlcommand = @sqlcommand + N'' 
	INSERT INTO @UserViewCategoriesWithFilter 
	SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @MenuModuleID ''
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
SET @sqlcommand = @sqlcommand + N'' 
	;WITH hierarchy AS(
		SELECT [CategoryID], [ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @MenuModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @MenuModuleID)) AND PortalID = @PortalID
		UNION ALL
		SELECT c.[CategoryID], c.[ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
		)
	INSERT INTO @UserViewCategoriesWithFilter SELECT DISTINCT uvc.CategoryID FROM hierarchy AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; ''

IF @IsSocialInstance = 0 AND @ShowAllAuthors = 0
SET @sqlcommand = @sqlcommand + N''
DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY);

INSERT INTO @TempAuthorsIDList
SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @MenuModuleID
UNION 
SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @MenuModuleID ''

ELSE IF @IsSocialInstance = 1 AND @FilterByDNNGroupID <> 0
SET @sqlcommand = @sqlcommand + N''
DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 1; '';

SET @sqlcommand = @sqlcommand + N'' 
DECLARE @tempMenuCats TABLE(
	[CategoryID] INT NOT NULL PRIMARY KEY,
	[PortalID] INT,
	[CategoryName] NVARCHAR(200),
	[Position] INT,
	[ParentCategory] INT,
	[Level] INT,
	[CategoryURL] NVARCHAR(1500),
	[CategoryImage] NVARCHAR(1500),
	[CategoryText] NVARCHAR(MAX),
	[Color] NVARCHAR(16),
	[Show] BIT) ''

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'' 
	INSERT @tempMenuCats
	SELECT c.[CategoryID],c.[PortalID],c.[CategoryName],c.[Position],c.[ParentCategory],c.[Level],c.[CategoryURL],c.[CategoryImage],c.[CategoryText],c.[Color],''''1'''' AS Show
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	WHERE c.CategoryID IN (SELECT CategoryID FROM @UserViewCategoriesWithFilter) AND c.PortalID = @PortalID; ''
ELSE
SET @sqlcommand = @sqlcommand + N'' 
	INSERT INTO @tempMenuCats
	SELECT c.[CategoryID],c.[PortalID],
	CASE WHEN cl.[Title] IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS CategoryName,c.[Position],c.[ParentCategory],c.[Level],c.[CategoryURL],c.[CategoryImage],
	CASE WHEN cl.[CategoryText] IS NULL THEN c.[CategoryText] ELSE cl.[CategoryText] END AS CategoryText,c.[Color],''''1'''' AS Show
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN @UserViewCategoriesWithFilter cwf ON c.CategoryID = cwf.CategoryID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.PortalID = @PortalID; ''

SET @sqlcommand = @sqlcommand + N''
INSERT @tempMenuCats
SELECT c.[CategoryID],c.[PortalID],c.[CategoryName],c.[Position],c.[ParentCategory],c.[Level],c.[CategoryURL],c.[CategoryImage],c.[CategoryText],c.[Color],''''0'''' AS Show
FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c WHERE c.PortalID = @PortalID AND c.CategoryID NOT IN (SELECT CategoryID FROM @UserViewCategoriesWithFilter);
  
SELECT TOP 1 @DefaultTabID = TabID FROM {databaseOwner}[{objectQualifier}TabModules] WHERE ModuleID = @DefaultModuleID; ''

IF @CountItems = 1 AND @CountArticles = 0 AND @CountEvents = 0
SET @CountItems = 0

IF @CountItems = 0
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	SELECT ncl.[CategoryID],ncl.[PortalID],ncl.[CategoryName],ncl.[Position],ncl.[ParentCategory],ncl.[Level],ncl.[CategoryURL],ncl.[CategoryImage],ncl.[CategoryText],ncl.Show,0 AS ''''Count'''',
		CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
		CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
	FROM @tempMenuCats AS ncl
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID
	ORDER BY Position;''
END
ELSE
BEGIN
	IF @CountArticles = 1 AND @CountEvents = 0 -- only articles
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		SELECT *,
		CASE Show
			WHEN 0 THEN 0
			WHEN 1 THEN	
				CASE @AdminOrSuperUser
				WHEN 1 THEN(
					SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID''
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
						
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N''
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N''
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					
					SET @sqlcommand = @sqlcommand + N'' 
					WHERE n.PortalID = @PortalID
						AND n.EventArticle = 0
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
						IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
				SET @sqlcommand = @sqlcommand + N''
				)
				WHEN 0 THEN(
					SELECT ((
						SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID''
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
						
							IF @FilterByDNNGroupID <> 0 
								SET @sqlcommand = @sqlcommand + N''
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
							ELSE IF @FilterByDNNUserID <> 0
								SET @sqlcommand = @sqlcommand + N''
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
						
						SET @sqlcommand = @sqlcommand + N'' 
						WHERE n.PortalID = @PortalID
							AND n.HasPermissions = 0
							AND n.EventArticle = 0
							AND (n.Active = 1 OR n.UserID = @UserID)
							AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
							IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
							IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
						SET @sqlcommand = @sqlcommand + N''
						)+(
						SELECT COUNT([ArticleID]) FROM (
							SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID''
								IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
								
								IF @FilterByDNNGroupID <> 0 
									SET @sqlcommand = @sqlcommand + N''
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
								ELSE IF @FilterByDNNUserID <> 0
									SET @sqlcommand = @sqlcommand + N''
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
							
							SET @sqlcommand = @sqlcommand + N'' 
							WHERE n.PortalID = @PortalID
								AND n.HasPermissions = 1
								AND n.EventArticle = 0
								AND (n.Active = 1 OR n.UserID = @UserID)
			 					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
								IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''							
								IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
								IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
								ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
								IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
								ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
							SET @sqlcommand = @sqlcommand + N''
							UNION
							SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID''
								IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
							
								IF @FilterByDNNGroupID <> 0 
									SET @sqlcommand = @sqlcommand + N''
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
								ELSE IF @FilterByDNNUserID <> 0
									SET @sqlcommand = @sqlcommand + N''
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
							
							SET @sqlcommand = @sqlcommand + N'' 
							WHERE n.PortalID = @PortalID
								AND arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
								AND n.HasPermissions = 1
								AND n.EventArticle = 0
								AND (n.Active = 1 OR n.UserID = @UserID)
								AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
								IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
								IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
								IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
								ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
							SET @sqlcommand = @sqlcommand + N''
						) AS UserAndRolePermissions
					))
				)
			END		
		END AS ''''Count''''
		FROM (
			SELECT ncl.[CategoryID],ncl.[PortalID],ncl.[CategoryName],ncl.[Position],ncl.[ParentCategory],ncl.[Level],ncl.[CategoryURL],ncl.[CategoryImage],ncl.[CategoryText],ncl.Show,
				CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
				CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
			FROM @tempMenuCats AS ncl
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID
		) AS Result
		ORDER BY Position ASC;''
	END
	ELSE IF @CountEvents = 1 AND @CountArticles = 0 -- only events
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		SELECT *,
		CASE Show
			WHEN 0 THEN 0
			WHEN 1 THEN	
				CASE @AdminOrSuperUser
				WHEN 1 THEN(
				SELECT ((
					SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID ''
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
						
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N''
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N''
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
						
						SET @sqlcommand = @sqlcommand + N'' 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 0
					WHERE n.PortalID = @PortalID
						AND n.EventArticle = 1
						AND ne.Recurring = 0
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
						IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N'' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
						IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
						SET @sqlcommand = @sqlcommand + N''
					)+(
					SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID ''
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
						
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N''
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N''
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
						
						SET @sqlcommand = @sqlcommand + N'' 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = ''
						IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
						SET @sqlcommand = @sqlcommand + N'' 
							CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
									THEN 1
									ELSE 0
								END ''
						ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
						SET @sqlcommand = @sqlcommand + N'' 
							CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
								THEN 1
								ELSE 0
							END ''
					SET @sqlcommand = @sqlcommand + N'' 
					WHERE n.PortalID = @PortalID
						AND n.EventArticle = 1
						AND ne.Recurring = 1
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
						IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
						SET @sqlcommand = @sqlcommand + N''
					))
				)
				WHEN 0 THEN(
					SELECT ((
						SELECT COUNT(n.[ArticleID]) AS cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID ''
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
							
							IF @FilterByDNNGroupID <> 0 
								SET @sqlcommand = @sqlcommand + N''
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
							ELSE IF @FilterByDNNUserID <> 0
								SET @sqlcommand = @sqlcommand + N''
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
							
							SET @sqlcommand = @sqlcommand + N'' 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 0
						WHERE n.PortalID = @PortalID
							AND n.HasPermissions = 0
							AND n.EventArticle = 1
							AND ne.Recurring = 0
							AND (n.Active = 1 OR n.UserID = @UserID)
							AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
							IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N'' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
							IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
							IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
							SET @sqlcommand = @sqlcommand + N''
						)+(
						SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID ''
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
							
							IF @FilterByDNNGroupID <> 0 
								SET @sqlcommand = @sqlcommand + N''
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
							ELSE IF @FilterByDNNUserID <> 0
								SET @sqlcommand = @sqlcommand + N''
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
							
							SET @sqlcommand = @sqlcommand + N'' 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = ''
							IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
							SET @sqlcommand = @sqlcommand + N'' 
							CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
									THEN 1
									ELSE 0
								END ''
							ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
								SET @sqlcommand = @sqlcommand + N'' 
								CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
									THEN 1
									ELSE 0
								END ''
						SET @sqlcommand = @sqlcommand + N'' 
						WHERE n.PortalID = @PortalID
							AND n.HasPermissions = 0
							AND n.EventArticle = 1
							AND ne.Recurring = 1
							AND (n.Active = 1 OR n.UserID = @UserID)
							AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
							IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
							IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
							SET @sqlcommand = @sqlcommand + N''
						)+(					
						SELECT COUNT(ArticleID) FROM (			
							SELECT ArticleID FROM (
								SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID ''
									IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
									
									IF @FilterByDNNGroupID <> 0 
										SET @sqlcommand = @sqlcommand + N''
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
									ELSE IF @FilterByDNNUserID <> 0
										SET @sqlcommand = @sqlcommand + N''
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
									
									SET @sqlcommand = @sqlcommand + N'' 
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 0
								WHERE n.PortalID = @PortalID
									AND n.HasPermissions = 1
									AND n.EventArticle = 1
									AND ne.Recurring = 0
									AND (n.Active = 1 OR n.UserID = @UserID)
			 						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
									IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
									IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N'' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
									IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
									IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
									ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
									IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
									ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
									SET @sqlcommand = @sqlcommand + N''
								UNION ALL
								SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID ''
									IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
									
									IF @FilterByDNNGroupID <> 0 
										SET @sqlcommand = @sqlcommand + N''
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
									ELSE IF @FilterByDNNUserID <> 0
										SET @sqlcommand = @sqlcommand + N''
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
									
									SET @sqlcommand = @sqlcommand + N'' 
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 1
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = ''
									IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
									SET @sqlcommand = @sqlcommand + N'' 
										CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
											 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
												THEN 1
												ELSE 0
										END ''
									ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
										SET @sqlcommand = @sqlcommand + N'' 
										CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
											THEN 1
											ELSE 0
										END ''
									SET @sqlcommand = @sqlcommand + N'' 
								WHERE n.PortalID = @PortalID
									AND n.HasPermissions = 1
									AND n.EventArticle = 1
									AND ne.Recurring = 1
									AND (n.Active = 1 OR n.UserID = @UserID)
			 						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
									IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
									IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
									IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
									ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
									IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
									ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
									SET @sqlcommand = @sqlcommand + N''		
							) AS PermissionsByUser
							UNION
							SELECT ArticleID FROM (
								SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID ''
									IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
									
									IF @FilterByDNNGroupID <> 0 
										SET @sqlcommand = @sqlcommand + N''
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
									ELSE IF @FilterByDNNUserID <> 0
										SET @sqlcommand = @sqlcommand + N''
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
									
									SET @sqlcommand = @sqlcommand + N'' 
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 0
								WHERE n.PortalID = @PortalID
									AND arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
									AND n.HasPermissions = 1
									AND n.EventArticle = 1
									AND ne.Recurring = 0
									AND (n.Active = 1 OR n.UserID = @UserID)
									AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
									IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
									IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N'' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
									IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
									IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
									ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
									SET @sqlcommand = @sqlcommand + N''
								UNION ALL
								SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID ''
									IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
									
									IF @FilterByDNNGroupID <> 0 
										SET @sqlcommand = @sqlcommand + N''
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
									ELSE IF @FilterByDNNUserID <> 0
										SET @sqlcommand = @sqlcommand + N''
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
									
									SET @sqlcommand = @sqlcommand + N'' 
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 1
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = ''
									IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
									SET @sqlcommand = @sqlcommand + N'' 
										CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
											 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
												THEN 1
												ELSE 0
											END ''
									ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
										SET @sqlcommand = @sqlcommand + N'' 
										CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
											THEN 1
											ELSE 0
										END ''
								SET @sqlcommand = @sqlcommand + N'' 
								WHERE n.PortalID = @PortalID
									AND arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
									AND n.HasPermissions = 1
									AND n.EventArticle = 1
									AND ne.Recurring = 1
									AND (n.Active = 1 OR n.UserID = @UserID)
									AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
									IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
									IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
									IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
									ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
									SET @sqlcommand = @sqlcommand + N''		
							) AS PermissionsByRoles
						) AS PermissionsByUserAndRole
						)
					)
				)
			END		
		END AS ''''Count''''
		FROM (
			SELECT	ncl.[CategoryID],ncl.[PortalID],ncl.[CategoryName],ncl.[Position],ncl.[ParentCategory],ncl.[Level],ncl.[CategoryURL],ncl.[CategoryImage],ncl.[CategoryText],ncl.Show,
				CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
				CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
			FROM @tempMenuCats AS ncl LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID
		) AS Result
		ORDER BY Position ASC;''
	END
	ELSE -- articles and events
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		SELECT *,
		CASE Show
			WHEN 0 THEN 0
			WHEN 1 THEN	
				CASE @AdminOrSuperUser
				WHEN 1 THEN(
				SELECT ((
					SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID ''
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
						
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N''
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N''
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
						
						SET @sqlcommand = @sqlcommand + N'' 
					WHERE n.PortalID = @PortalID
						AND n.EventArticle = 0
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
						IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
						SET @sqlcommand = @sqlcommand + N''	
					)+(
					SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID ''
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
						
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N''
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N''
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
						
						SET @sqlcommand = @sqlcommand + N'' 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 0
					WHERE n.PortalID = @PortalID
						AND n.EventArticle = 1
						AND ne.Recurring = 0
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
						IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N'' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
						IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
						SET @sqlcommand = @sqlcommand + N''	
					)+(
					SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID ''
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
						
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N''
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N''
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
						
						SET @sqlcommand = @sqlcommand + N'' 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = ''
						IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
						SET @sqlcommand = @sqlcommand + N'' 
							CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
									THEN 1
									ELSE 0
								END ''
						ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
							SET @sqlcommand = @sqlcommand + N'' 
							CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
								THEN 1
								ELSE 0
							END ''
					SET @sqlcommand = @sqlcommand + N'' 
					WHERE n.PortalID = @PortalID
						AND n.EventArticle = 1
						AND ne.Recurring = 1
						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
						IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
						SET @sqlcommand = @sqlcommand + N''	
					))
				)
				WHEN 0 THEN(
					SELECT ((
						SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID ''
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
							
							IF @FilterByDNNGroupID <> 0 
								SET @sqlcommand = @sqlcommand + N''
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
							ELSE IF @FilterByDNNUserID <> 0
								SET @sqlcommand = @sqlcommand + N''
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
							
							SET @sqlcommand = @sqlcommand + N'' 
						WHERE n.PortalID = @PortalID
							AND n.HasPermissions = 0
							AND n.EventArticle = 0 
							AND (n.Active = 1 OR n.UserID = @UserID)
							AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
							IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
							IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
							SET @sqlcommand = @sqlcommand + N''	
						)+(
						SELECT COUNT(n.[ArticleID]) AS cnt FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID ''
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
							
							IF @FilterByDNNGroupID <> 0 
								SET @sqlcommand = @sqlcommand + N''
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
							ELSE IF @FilterByDNNUserID <> 0
								SET @sqlcommand = @sqlcommand + N''
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
							
							SET @sqlcommand = @sqlcommand + N'' 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 0
						WHERE n.PortalID = @PortalID
							AND n.HasPermissions = 0
							AND n.EventArticle = 1
							AND ne.Recurring = 0
							AND (n.Active = 1 OR n.UserID = @UserID)
							AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
							IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N'' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
							IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
							IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
							SET @sqlcommand = @sqlcommand + N''	
						)+(
						SELECT COUNT(n.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID = Result.CategoryID ''
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
							
							IF @FilterByDNNGroupID <> 0 
								SET @sqlcommand = @sqlcommand + N''
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
							ELSE IF @FilterByDNNUserID <> 0
								SET @sqlcommand = @sqlcommand + N''
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
							
							SET @sqlcommand = @sqlcommand + N'' 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = n.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = ''
							IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
							SET @sqlcommand = @sqlcommand + N'' 
							CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
									THEN 1
									ELSE 0
								END ''
							ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
								SET @sqlcommand = @sqlcommand + N'' 
								CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
									THEN 1
									ELSE 0
								END ''
						SET @sqlcommand = @sqlcommand + N'' 
						WHERE n.PortalID = @PortalID
							AND n.HasPermissions = 0
							AND n.EventArticle = 1
							AND ne.Recurring = 1
							AND (n.Active = 1 OR n.UserID = @UserID)
							AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
							IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
							IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
							SET @sqlcommand = @sqlcommand + N''	
						)+(
						SELECT COUNT(aup.[ArticleID]) FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ON n.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID ''
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
							
							IF @FilterByDNNGroupID <> 0 
								SET @sqlcommand = @sqlcommand + N''
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
							ELSE IF @FilterByDNNUserID <> 0
								SET @sqlcommand = @sqlcommand + N''
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
							
							SET @sqlcommand = @sqlcommand + N'' 						
						WHERE n.PortalID = @PortalID
							AND n.HasPermissions = 1
							AND n.EventArticle = 0
							AND (n.Active = 1 OR n.UserID = @UserID)
			 				AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
							IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
							IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
							ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
							IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
							SET @sqlcommand = @sqlcommand + N''	
						)+(
						SELECT COUNT([ArticleID]) FROM (
							SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID ''
								IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
								
								IF @FilterByDNNGroupID <> 0 
									SET @sqlcommand = @sqlcommand + N''
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
								ELSE IF @FilterByDNNUserID <> 0
									SET @sqlcommand = @sqlcommand + N''
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
								
								SET @sqlcommand = @sqlcommand + N'' 
							WHERE n.PortalID = @PortalID
								AND n.HasPermissions = 1
								AND n.EventArticle = 0
								AND (n.Active = 1 OR n.UserID = @UserID)
			 					AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
								IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
								IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
								IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
								ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
								IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
								ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
								SET @sqlcommand = @sqlcommand + N''	
							UNION
							SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID ''
								IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
								
								IF @FilterByDNNGroupID <> 0 
									SET @sqlcommand = @sqlcommand + N''
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
								ELSE IF @FilterByDNNUserID <> 0
									SET @sqlcommand = @sqlcommand + N''
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
								
								SET @sqlcommand = @sqlcommand + N'' 
							WHERE n.PortalID = @PortalID
								AND arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
								AND n.HasPermissions = 1
								AND n.EventArticle = 0
								AND (n.Active = 1 OR n.UserID = @UserID)
								AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
								IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
								IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
								IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
								ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
								SET @sqlcommand = @sqlcommand + N''	
						) AS UserAndRolePermissions						
						)
						)+(
						SELECT COUNT(ArticleID) FROM (			
							SELECT ArticleID FROM (
								SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID ''
									IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
									
									IF @FilterByDNNGroupID <> 0 
										SET @sqlcommand = @sqlcommand + N''
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
									ELSE IF @FilterByDNNUserID <> 0
										SET @sqlcommand = @sqlcommand + N''
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
									
									SET @sqlcommand = @sqlcommand + N'' 
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 0
								WHERE n.PortalID = @PortalID
									AND n.HasPermissions = 1
									AND n.EventArticle = 1
									AND ne.Recurring = 0
									AND (n.Active = 1 OR n.UserID = @UserID)
			 						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
									IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
									IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N'' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
									IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
									IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
									ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
									IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
									ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
									SET @sqlcommand = @sqlcommand + N''	
								UNION ALL
								SELECT aup.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = aup.ArticleID AND c.CategoryID = Result.CategoryID ''
									IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
									
									IF @FilterByDNNGroupID <> 0 
										SET @sqlcommand = @sqlcommand + N''
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
									ELSE IF @FilterByDNNUserID <> 0
										SET @sqlcommand = @sqlcommand + N''
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
									
									SET @sqlcommand = @sqlcommand + N'' 
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = aup.ArticleID AND ne.Recurring = 1
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = ''
									IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
									SET @sqlcommand = @sqlcommand + N'' 
										CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
											 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
												THEN 1
												ELSE 0
											END ''
									ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
										SET @sqlcommand = @sqlcommand + N'' 
										CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
											THEN 1
											ELSE 0
										END ''
								SET @sqlcommand = @sqlcommand + N'' 
								WHERE n.PortalID = @PortalID
									AND n.HasPermissions = 1
									AND n.EventArticle = 1
									AND ne.Recurring = 1
									AND (n.Active = 1 OR n.UserID = @UserID)
			 						AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
									IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
									IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
									IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
									ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
									IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
									ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
									SET @sqlcommand = @sqlcommand + N''						
							) AS PermissionsByUser
							UNION
							SELECT ArticleID FROM (
								SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID ''
									IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
									
									IF @FilterByDNNGroupID <> 0 
										SET @sqlcommand = @sqlcommand + N''
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
									ELSE IF @FilterByDNNUserID <> 0
										SET @sqlcommand = @sqlcommand + N''
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
									
									SET @sqlcommand = @sqlcommand + N'' 
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 0
								WHERE n.PortalID = @PortalID
									AND arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
									AND n.HasPermissions = 1
									AND n.EventArticle = 1
									AND ne.Recurring = 0
									AND (n.Active = 1 OR n.UserID = @UserID)
									AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
									IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
									IF @CountEventsLimitByDays IS NOT NULL SET @sqlcommand = @sqlcommand + N'' AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
									IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
									IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
									ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
									SET @sqlcommand = @sqlcommand + N''	
								UNION ALL
								SELECT arp.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.ArticleID = arp.ArticleID AND c.CategoryID = Result.CategoryID ''
									IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = c.ArticleID AND ncl.LocaleCode = @LocaleCode ''
									
									IF @FilterByDNNGroupID <> 0 
										SET @sqlcommand = @sqlcommand + N''
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
									ELSE IF @FilterByDNNUserID <> 0
										SET @sqlcommand = @sqlcommand + N''
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID AND c.CategoryID = Result.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
									
									SET @sqlcommand = @sqlcommand + N'' 
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = arp.ArticleID AND ne.Recurring = 1
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = ''
									IF @CountEventsLimitByDays IS NOT NULL -- @StartDate min value
									SET @sqlcommand = @sqlcommand + N'' 
										CASE WHEN ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
											 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime)))
												THEN 1
												ELSE 0
											END ''
									ELSE -- Show all ali treba uzeti u obzir ogranicenje UpcomingOccurrences
										SET @sqlcommand = @sqlcommand + N'' 
										CASE WHEN nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)
											THEN 1
											ELSE 0
										END ''
								SET @sqlcommand = @sqlcommand + N'' 
								WHERE n.PortalID = @PortalID
									AND arp.RoleID IN (SELECT RoleID FROM @UserInRoles)
									AND n.HasPermissions = 1
									AND n.EventArticle = 1
									AND ne.Recurring = 1
									AND (n.Active = 1 OR n.UserID = @UserID)
									AND @CurrentDate BETWEEN n.PublishDate AND n.[ExpireDate] ''
									IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N'' AND n.HideDefaultLocale = 0 ''
									IF @UserCanApprove = 0 SET @sqlcommand = @sqlcommand + N'' AND n.Approved = 1 ''
									IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID = @FilterByDNNUserID ''
									ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N'' AND n.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
									SET @sqlcommand = @sqlcommand + N''			
							) AS PermissionsByRoles
						) AS PermissionsByUserAndRole
					)
				)
			END		
		END AS ''''Count''''
		FROM (
			SELECT	ncl.[CategoryID],ncl.[PortalID],ncl.[CategoryName],ncl.[Position],ncl.[ParentCategory],ncl.[Level],ncl.[CategoryURL],ncl.[CategoryImage],ncl.[CategoryText],ncl.Show,
				CASE WHEN cl.[NewsModuleID] IS NULL THEN @DefaultModuleID ELSE cl.[NewsModuleID] END AS NewsModuleID,
				CASE WHEN tm.[TabID] IS NULL THEN @DefaultTabID ELSE tm.[TabID] END AS TabID
			FROM @tempMenuCats AS ncl
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLink] AS cl ON ncl.CategoryID = cl.CategoryID AND cl.[SourceModuleID] = @MenuModuleID
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}TabModules] AS tm ON cl.NewsModuleID = tm.ModuleID
		) AS Result
		ORDER BY Position;''
	END
END

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@MenuModuleID = @MenuModuleID
	,@DefaultTabID = @DefaultTabID
    ,@DefaultModuleID = @DefaultModuleID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CountItems = @CountItems
	,@CountArticles = @CountArticles
	,@CountEvents = @CountEvents
	,@CountEventsLimitByDays = @CountEventsLimitByDays
	,@IsSocialInstance = @IsSocialInstance
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@LocaleCode = @LocaleCode
	,@ShowAllAuthors = @ShowAllAuthors
	,@CategoryFilterType = @CategoryFilterType
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@PermissionsModuleID = @PermissionsModuleID
	,@UserCanApprove = @UserCanApprove' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetArticles]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetArticles]
	@PortalID INT,
	@UserID INT,
	@CalendarModuleID INT,
	@AdminOrSuperUser BIT = 0,
	@FromDate DATETIME = NULL, -- articles
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL, -- events
	@eToDate DATETIME = NULL,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDNNUserID INT = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID INT = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@ShowAllAuthors BIT = 1, -- filter postavka menija
	@CategoryFilterType TINYINT = 0, --0 All categories, 1 - SELECTion, 2 - AutoAdd
	@HideUnlocalizedItems BIT = 0,
	@PermissionSettingsSource TINYINT = 0, -- None, 1 - portal, 2 - module
	@PermissionsModuleID INT = 0, -- NewsModuleID
	@FilterCategoryID INT = NULL
AS
SET NOCOUNT ON;

DECLARE @sqlcommand NVARCHAR(max);
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N''
	@PortalID INT
	,@UserID INT
	,@CalendarModuleID INT
	,@AdminOrSuperUser BIT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@ShowAllAuthors BIT
	,@CategoryFilterType TINYINT
	,@HideUnlocalizedItems BIT
	,@PermissionSettingsSource TINYINT
	,@PermissionsModuleID INT
	,@FilterCategoryID INT''

SET @sqlcommand = N''
SET NOCOUNT ON;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
	
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO #UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND ( ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate ) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
CREATE TABLE #UserViewCategories (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;	
CREATE TABLE #UserViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;	
CREATE TABLE #FiltredByCategories (CategoryID INT NOT NULL PRIMARY KEY); ''

IF @AdminOrSuperUser = 1 OR @PermissionSettingsSource = 0
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlcommand = @sqlcommand  + N''
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND [RoleID] IS NULL) ''
	END
	ELSE -- by module
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID AND PermissionsPMSource = 0)
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] = @PermissionsModuleID AND [RoleID] IS NULL) ''
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND [RoleID] IS NULL) ''
		END
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlcommand = @sqlcommand  + N''
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.RoleID IN (SELECT RoleID FROM #UserInRoles) AND rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
			INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND RoleID IN (SELECT RoleID FROM #UserInRoles))
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] IS NULL) ''
	END
	ELSE -- by module
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID AND PermissionsPMSource = 0)
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.RoleID IN (SELECT RoleID FROM #UserInRoles) AND rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1
			) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1
			)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
				INSERT INTO #UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] = @PermissionsModuleID AND RoleID IN (SELECT RoleID FROM #UserInRoles))
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] = @PermissionsModuleID) ''
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					WHERE rps.RoleID IN (SELECT RoleID FROM #UserInRoles) AND rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
			) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
			)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
				INSERT INTO #UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND RoleID IN (SELECT RoleID FROM #UserInRoles))
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] IS NULL) ''
		END
	END
END

IF @FilterCategoryID IS NOT NULL -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID = @FilterCategoryID;
	INSERT INTO #FiltredByCategories SELECT @FilterCategoryID; ''
END
ELSE IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
	INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	INSERT INTO #UserViewCategoriesWithFilter 
	SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @CalendarModuleID
	
	INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID; ''
END
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	;WITH hierarchy AS(
		SELECT [CategoryID], [ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID)) AND PortalID = @PortalID
		UNION ALL
		SELECT c.[CategoryID], c.[ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
		)
		INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO #UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM #FiltredByCategories AS nfc INNER JOIN #UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; ''
END

IF @ShowAllAuthors = 0
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @CalendarModuleID
	UNION 
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @CalendarModuleID ''
END

SET @sqlcommand = @sqlcommand  + N''
;WITH MainFilters AS(
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand  + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
		IF @FilterByDNNGroupID <> 0 
			SET @sqlcommand = @sqlcommand  + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
		ELSE IF @FilterByDNNUserID <> 0
			SET @sqlcommand = @sqlcommand  + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	SET @sqlcommand = @sqlcommand  + N''
	WHERE na.PortalID=@PortalID
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand  + N'' AND na.HideDefaultLocale = 0 ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand  + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
	SET @sqlcommand = @sqlcommand  + N''
)''
IF @LocaleCode IS NOT NULL
BEGIN
SET @sqlcommand = @sqlcommand  + N''
, OnlyArticleIDs (ArticleID) AS (
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
	WHERE na.HasPermissions = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
	SET @sqlcommand = @sqlcommand  + N''
	UNION ALL
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
	WHERE na.HasPermissions = 1
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID = @UserID ''
		END 
	SET @sqlcommand = @sqlcommand  + N''
	UNION
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
	WHERE na.HasPermissions = 1
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N'' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
		END

SET @sqlcommand = @sqlcommand  + N''
),
FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
	 SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM OnlyArticleIDs) AND LocaleCode = @LocaleCode
)
SELECT Result.*,PublishDate AS CombinedOrderBy,
(SELECT c.CategoryID AS "@id", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
INNER JOIN #UserViewCategories AS uvc ON c.CategoryID = uvc.CategoryID
INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cl ON uvc.CategoryID = cl.CategoryID
WHERE cl.ArticleID = Result.ArticleID
ORDER BY c.Position
FOR XML PATH(''''category''''), ROOT(''''categories'''')) AS CssCategoryClasses
FROM (
	SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[ArticleImage],n.[PublishDate],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[EventArticle],n.[DetailTarget]
		   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM OnlyArticleIDs WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
	UNION ALL
	SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],n.[ArticleImage],n.[PublishDate],fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[EventArticle],n.[DetailTarget]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID
) As Result ORDER BY Result.PublishDate;
''
END
ELSE
BEGIN
SET @sqlcommand = @sqlcommand  + N''
SELECT Result.*,PublishDate AS CombinedOrderBy,
	(SELECT c.CategoryID AS "@id", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color"
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #UserViewCategories AS uvc ON c.CategoryID = uvc.CategoryID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cl ON uvc.CategoryID = cl.CategoryID
	WHERE cl.ArticleID = Result.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''''category''''), ROOT(''''categories'''')) AS CssCategoryClasses
	FROM (SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[ArticleImage],n.[PublishDate],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[EventArticle],n.[DetailTarget]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		WHERE n.ArticleID IN(
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
			WHERE na.HasPermissions = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			SET @sqlcommand = @sqlcommand  + N''
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			WHERE na.HasPermissions = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
					IF @UserID = -1 SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID IS NULL ''
					ELSE SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID = @UserID ''
				END 
			SET @sqlcommand = @sqlcommand  + N''
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
			WHERE na.HasPermissions = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N'' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
				END
			SET @sqlcommand = @sqlcommand  + N''
			)
	 ) AS Result ORDER BY Result.PublishDate; ''

END
SET @sqlcommand = @sqlcommand  + N''

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;
IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories; ''

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@CalendarModuleID = @CalendarModuleID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@ShowAllAuthors = @ShowAllAuthors
	,@CategoryFilterType = @CategoryFilterType
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@PermissionsModuleID = @PermissionsModuleID
	,@FilterCategoryID = @FilterCategoryID' 
END
GO