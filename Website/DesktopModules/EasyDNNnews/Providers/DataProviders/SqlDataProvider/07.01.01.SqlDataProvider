SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems](
	[ArticleID] [int] NOT NULL,
	[RecurringID] [int] NOT NULL,
	[DocumentID] [int] NOT NULL,
	[Position] [int] NOT NULL,
 CONSTRAINT [PK_{objectQualifier}EasyDNNNewsDocumentRecurringEventItems] PRIMARY KEY CLUSTERED 
(
	[ArticleID] ASC,
	[RecurringID] ASC,
	[DocumentID] ASC
)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsDocumentRecurringEventItems_EasyDNNNewsDocuments]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsDocumentRecurringEventItems_EasyDNNNewsDocuments] FOREIGN KEY([DocumentID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] ([DocEntryID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsDocumentRecurringEventItems_EasyDNNNewsDocuments]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsDocumentRecurringEventItems_EasyDNNNewsDocuments]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsDocumentRecurringEventItems_EasyDNNNewsEventsRecurringData]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsDocumentRecurringEventItems_EasyDNNNewsEventsRecurringData] FOREIGN KEY([ArticleID], [RecurringID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] ([ArticleID], [RecurringID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsDocumentRecurringEventItems_EasyDNNNewsEventsRecurringData]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsDocumentRecurringEventItems_EasyDNNNewsEventsRecurringData]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EDS_EditPermissions]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION {databaseOwner}[{objectQualifier}EDS_EditPermissions]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EDS_ViewPermissions]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION {databaseOwner}[{objectQualifier}EDS_ViewPermissions]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarArchive]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarArchive]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarArchive]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarArchive]
	@PortalID INT,
	@UserID INT,
	@CalendarModuleID INT,
	@AdminOrSuperUser BIT  = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDNNUserID INT = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID INT = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@ShowAllAuthors BIT = 1, -- filter postavka menija
	@CategoryFilterType TINYINT = 0, --0 All categories, 1 - Selection, 2 - AutoAdd
	@PermissionSettingsSource TINYINT = 0, -- None, 1 - portal, 2 - module
	@PermissionsModuleID INT = 0, -- NewsModuleID
	@HideUnlocalizedItems BIT = 0,
	@DateTimeOffset INT,
	@OnlyArticles BIT = 0,
	@OnlyEvents BIT = 0,
	@FilterCategoryID INT = NULL
AS
SET NOCOUNT ON;
DECLARE @sqlcommand NVARCHAR(max);
DECLARE @paramList NVARCHAR(1000);
SET @paramList = N''
	@PortalID INT,
	@UserID INT,
	@CalendarModuleID INT,
	@LocaleCode NVARCHAR(20),
	@FilterByDNNUserID INT,
	@FilterByDNNGroupID INT,
	@PermissionsModuleID INT,
	@DateTimeOffset INT,
	@FilterCategoryID INT''

SET @sqlcommand = N''
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @UserInRoles TABLE (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO @UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND ( ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate ) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

DECLARE @UserViewCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY);
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT NOT NULL PRIMARY KEY);
DECLARE @FiltredByCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY); ''

IF @AdminOrSuperUser = 1 OR @PermissionSettingsSource = 0
BEGIN
	SET @sqlcommand = @sqlcommand + N''INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
		BEGIN
			SET @sqlcommand = @sqlcommand + N''INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL; ''
		END
	END
	ELSE -- by module
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID AND PermissionsPMSource = 0)
		BEGIN
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				SET @sqlcommand = @sqlcommand + N''INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
			END
			ELSE
			BEGIN
				SET @sqlcommand = @sqlcommand + N''
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL; ''
			END
		END
		ELSE
		BEGIN
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				SET @sqlcommand = @sqlcommand + N''INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
			END
			ELSE
			BEGIN
				SET @sqlcommand = @sqlcommand + N''
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL; ''
			END
		END
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		ELSE
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; ''
	END
	ELSE -- by module
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID AND PermissionsPMSource = 0)
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1
			) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1
			)
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID; ''
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
			) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
			)
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL ''
		END
	END
END

IF @FilterCategoryID IS NOT NULL -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @FilterCategoryID;
	INSERT INTO @FiltredByCategories SELECT @FilterCategoryID; ''
END
ELSE IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
	INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
END
ELSE IF @CategoryFilterType = 1 -- 1 - Selection
BEGIN
	SET @sqlcommand = @sqlcommand + N''	
	INSERT INTO @UserViewCategoriesWithFilter 
	SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @CalendarModuleID
	
	INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID; ''
END
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	WITH hierarchy AS(
		SELECT [CategoryID], [ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID)) AND PortalID = @PortalID
		UNION ALL
		SELECT c.[CategoryID], c.[ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
	)
	INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
	INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; ''
END

DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
		END
	END
ELSE
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		SET @sqlcommand = @sqlcommand + N''
		DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY);
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @CalendarModuleID
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @CalendarModuleID ''
	END
END


IF @OnlyArticles = 1 AND @OnlyEvents = 0 -- only articles
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	SELECT MONTH(final.PublishDate) AS [Month], YEAR(final.PublishDate) AS [Year], COUNT(*) AS [Count] FROM (
	SELECT DISTINCT na.[ArticleID],DATEADD(hh, @DateTimeOffset, na.[PublishDate]) AS [PublishDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 0
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''		
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) AS [PublishDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
		END
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
		
	SET @sqlcommand = @sqlcommand + N''
	UNION
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) AS [PublishDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID ''
	IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
SET @sqlcommand = @sqlcommand + N''
) AS final
GROUP BY MONTH(PublishDate), YEAR(PublishDate) ORDER BY [Year] DESC, [Month] DESC ''
END
ELSE IF @OnlyEvents = 1 AND @OnlyArticles = 0 -- only events
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	SELECT MONTH(final.StartDate) AS [Month], YEAR(final.StartDate) AS [Year], COUNT(*) AS [Count] FROM (
	SELECT DISTINCT na.[ArticleID],DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [StartDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''
	IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ne.EndDate < @CurrentDate ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID],DATEADD(hh, @DateTimeOffset, nerd.[StartDateTime]) AS [StartDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = CASE WHEN nerd.EndDateTime < @CurrentDate THEN 1 ELSE 0 END ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
		
	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [StartDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ne.EndDate < @CurrentDate ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
		END
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
			
	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [StartDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = CASE WHEN nerd.EndDateTime < @CurrentDate THEN 1 ELSE 0 END ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
		END
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
			
	SET @sqlcommand = @sqlcommand + N''
	UNION
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [StartDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ne.EndDate < @CurrentDate ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''

	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [StartDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = CASE WHEN nerd.EndDateTime < @CurrentDate THEN 1 ELSE 0 END ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''

	SET @sqlcommand = @sqlcommand + N''
) AS final
GROUP BY MONTH(StartDate), YEAR(StartDate) ORDER BY [Year] DESC, [Month] DESC ''
END
ELSE -- articles and events
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	SELECT MONTH(final.CombinedDate) AS [Month], YEAR(final.CombinedDate) AS [Year], COUNT(*) AS [Count] FROM (
	SELECT DISTINCT na.[ArticleID],DATEADD(hh, @DateTimeOffset, na.[PublishDate]) AS [CombinedDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 0
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
		
	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) AS [CombinedDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
		END
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
		
	SET @sqlcommand = @sqlcommand + N''
	UNION
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) AS [CombinedDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''

	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID],DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [CombinedDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ne.EndDate < @CurrentDate ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
		
	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID],DATEADD(hh, @DateTimeOffset, nerd.[StartDateTime]) AS [CombinedDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = CASE WHEN nerd.EndDateTime < @CurrentDate THEN 1 ELSE 0 END ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
		
	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [CombinedDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ne.EndDate < @CurrentDate ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
		END
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
		
	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [CombinedDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = CASE WHEN nerd.EndDateTime < @CurrentDate THEN 1 ELSE 0 END ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
		END
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
		
	SET @sqlcommand = @sqlcommand + N''
	UNION
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [CombinedDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ne.EndDate < @CurrentDate ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''

	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [CombinedDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = CASE WHEN nerd.EndDateTime < @CurrentDate THEN 1 ELSE 0 END ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''

	SET @sqlcommand = @sqlcommand + N''
) AS final
GROUP BY MONTH(CombinedDate), YEAR(CombinedDate) ORDER BY [Year] DESC, [Month] DESC ''
END

EXEC sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@CalendarModuleID = @CalendarModuleID
	,@LocaleCode = @LocaleCode
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@PermissionsModuleID = @PermissionsModuleID
	,@DateTimeOffset = @DateTimeOffset
	,@FilterCategoryID = @FilterCategoryID
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EDS_ViewPermissions]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE FUNCTION {databaseOwner}[{objectQualifier}EDS_ViewPermissions]
(	
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@AdminOrSuperUser BIT,
	@Perm_ViewAllCategores BIT,
	@PermissionSettingsSource BIT,
	@CurrentDate DATETIME
)
RETURNS @UserViewCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY)
AS
BEGIN
	IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
	BEGIN
		INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @UserID = -1
	BEGIN	
		IF @PermissionSettingsSource = 1
		BEGIN
			INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND [RoleID] IS NULL)
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] = @ModuleID AND [RoleID] IS NULL)
		END
	END
	ELSE
	BEGIN
		IF @PermissionSettingsSource = 1
		BEGIN
			INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND RoleID IN (SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)))
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] IS NULL)
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [ModuleID] = @ModuleID AND RoleID IN (SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)))
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [UserID] = @UserID AND [PortalID] = @PortalID AND [ModuleID] = @ModuleID)
		END
	END
RETURN
END' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EDS_EditPermissions]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE FUNCTION {databaseOwner}[{objectQualifier}EDS_EditPermissions]
(	
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@AdminOrSuperUser BIT,
	@Perm_EditAllCategores BIT,
	@PermissionSettingsSource BIT,
	@CurrentDate DATETIME
)
RETURNS @UserEditCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY)
AS
BEGIN
	IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
	BEGIN
		INSERT INTO @UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @UserID = -1
	BEGIN	
		IF @PermissionSettingsSource = 1
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			WHERE rpatc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND [RoleID] IS NULL)
		END
		ELSE
		BEGIN
		INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			WHERE rpatc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] = @ModuleID AND [RoleID] IS NULL)
		END
	END
	ELSE
	BEGIN
		IF @PermissionSettingsSource = 1
		BEGIN
			INSERT INTO @UserEditCategories
				SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
				WHERE rpatc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND RoleID IN (SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)))
				UNION
				SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
				WHERE upatc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] IS NULL)
		END
		ELSE
		BEGIN
			INSERT INTO @UserEditCategories
				SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
				WHERE rpatc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [ModuleID] = @ModuleID AND RoleID IN (SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)))
				UNION
				SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
				WHERE upatc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [UserID] = @UserID AND [PortalID] = @PortalID AND [ModuleID] = @ModuleID)
		END
	END
RETURN
END' 
END
GO