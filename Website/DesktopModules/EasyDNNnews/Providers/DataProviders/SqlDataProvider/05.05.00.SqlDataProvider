if not exists (select UpdateVersion from {databaseOwner}[{objectQualifier}EasyDNNNewsUpdate] WHERE UpdateVersion = '05.05.00')
BEGIN
	INSERT INTO {databaseOwner}[{objectQualifier}EasyDNNNewsUpdate]([UpdateVersion],[Finished]) VALUES(N'05.05.00',0)
END
GO

if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'ArticleListDisplayStyle')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD ArticleListDisplayStyle nvarchar(150) CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_ArticleListDisplayStyle DEFAULT('') NOT NULL
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'ArticleListDisplayStyle')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD ArticleListDisplayStyle nvarchar(150) CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_ArticleListDisplayStyle DEFAULT('') NOT NULL
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsMenuSettings' and column_name = 'Imported')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsMenuSettings] ADD Imported BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsMenuSettings_Imported DEFAULT (0) NOT NULL
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsCalendarSettings' and column_name = 'Imported')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsCalendarSettings] ADD Imported BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsCalendarSettings_Imported DEFAULT (0) NOT NULL
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsTagCloudSettings' and column_name = 'Imported')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsTagCloudSettings] ADD Imported BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsTagCloudSettings_Imported DEFAULT (0) NOT NULL
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsSearchSettings' and column_name = 'Imported')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsSearchSettings] ADD Imported BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsSearchSettings_Imported DEFAULT (0) NOT NULL
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsTreeView' and column_name = 'Imported')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsTreeView] ADD Imported BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsTreeView_Imported DEFAULT (0) NOT NULL
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsCalendarSettings' and column_name = 'ArchiveTypeOfView')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsCalendarSettings] ADD ArchiveTypeOfView TINYINT CONSTRAINT DF_{objectQualifier}EasyDNNNewsCalendarSettings_ArchiveTypeOfView DEFAULT (0) NOT NULL
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsCalendarSettings' and column_name = 'ArchiveTemplate')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsCalendarSettings] ADD ArchiveTemplate NVARCHAR(250) CONSTRAINT DF_{objectQualifier}EasyDNNNewsCalendarSettings_ArchiveTemplate DEFAULT ('') NOT NULL
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsCalendarSettings' and column_name = 'ArchiveExpandMode')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsCalendarSettings] ADD ArchiveExpandMode TINYINT CONSTRAINT DF_{objectQualifier}EasyDNNNewsCalendarSettings_ArchiveExpandMode DEFAULT (0) NOT NULL
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'CustomRoles')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD CustomRoles BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_CustomRoles DEFAULT (0) NOT NULL
END
GO

if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'ArticleListTemplateGroup')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD ArticleListTemplateGroup NVARCHAR(150) CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_ArticleListTemplateGroup DEFAULT ('') NOT NULL
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'ArticleDetailsTemplateGroup')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD ArticleDetailsTemplateGroup NVARCHAR(150) CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_ArticleDetailsTemplateGroup DEFAULT ('') NOT NULL
END
GO

if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'ArticleListTemplateGroup')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD ArticleListTemplateGroup NVARCHAR(150) CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_ArticleListTemplateGroup DEFAULT ('') NOT NULL
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'ArticleDetailsTemplateGroup')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD ArticleDetailsTemplateGroup NVARCHAR(150) CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_ArticleDetailsTemplateGroup DEFAULT ('') NOT NULL
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalRoleItems]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalRoleItems](
	[PortalID] [int] NOT NULL,
	[RoleID] [int] NOT NULL,
 CONSTRAINT [PK_{objectQualifier}EasyDNNNewsPortalRoleItems] PRIMARY KEY CLUSTERED ([RoleID] ASC,[PortalID] ASC)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsPortalRoleItems_Portals]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalRoleItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalRoleItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsPortalRoleItems_Portals] FOREIGN KEY([PortalID])
REFERENCES {databaseOwner}[{objectQualifier}Portals] ([PortalID])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsPortalRoleItems_Portals]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalRoleItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalRoleItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsPortalRoleItems_Portals]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsPortalRoleItems_Roles]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalRoleItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalRoleItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsPortalRoleItems_Roles] FOREIGN KEY([RoleID])
REFERENCES {databaseOwner}[{objectQualifier}Roles] ([RoleID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsPortalRoleItems_Roles]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalRoleItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalRoleItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsPortalRoleItems_Roles]
GO

/****** Object:  ForeignKey [FK_{objectQualifier}EasyDNNNewsWidgetsFiltering_Modules]    Script Date: 07/02/2013 16:52:46 ******/
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsWidgetsFiltering_Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsWidgetsFiltering]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsWidgetsFiltering] DROP CONSTRAINT [FK_{objectQualifier}EasyDNNNewsWidgetsFiltering_Modules]
GO
/****** Object:  ForeignKey [FK_{objectQualifier}EasyDNNNewsWidgetsFiltering_Tabs]    Script Date: 07/02/2013 16:52:46 ******/
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsWidgetsFiltering_Tabs]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsWidgetsFiltering]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsWidgetsFiltering] DROP CONSTRAINT [FK_{objectQualifier}EasyDNNNewsWidgetsFiltering_Tabs]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsWidgetsFiltering]') AND type in (N'U'))
DROP TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsWidgetsFiltering]
GO

/****** Object:  Table {databaseOwner}[{objectQualifier}EasyDNNNewsWidgetsFilterMenu]    Script Date: 07/02/2013 16:52:46 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsWidgetsFilterMenu]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsWidgetsFilterMenu](
	[ModuleID] [int] NOT NULL,
	[SharingPortalID] [int] NULL,
	[Theme] [nvarchar](250) NOT NULL,
	[ThemeStyle] [nvarchar](250) NOT NULL,
	[ShowAllCategories] [bit] NOT NULL,
	[AutoAddChildCategories] [bit] NOT NULL,
	[DisplayAllAuthors] [bit] NOT NULL,
	[Imported] [bit] NOT NULL,
	[OpenInTabID] [int] NULL,
	[OpenInModuleID] [int] NULL,
	[SelectionType] [tinyint] NOT NULL,
	[PostBackType] [tinyint] NOT NULL,
	[ShowOrderBy] [bit] NOT NULL,
	[OrderBySelection] [nvarchar](100) NOT NULL,
	[HTMLTemplate] [nvarchar](250) NOT NULL,
	[ShowCategoryFilter] [bit] NOT NULL,
	[ShowAuthorFilter] [bit] NOT NULL,
	[ExpandAllCategories] [bit] NOT NULL,
	[ExpandAllAuthors] [bit] NOT NULL,
	[ArticlesCountByCategory] [bit] NOT NULL,
	[ArticlesCountByAuthor] [bit] NOT NULL,
 CONSTRAINT [PK_{objectQualifier}EasyDNNNewsWidgetsFilterMenu] PRIMARY KEY CLUSTERED ( [ModuleID] ASC)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsWidgetsFilterMenu_Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsWidgetsFilterMenu]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsWidgetsFilterMenu]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsWidgetsFilterMenu_Modules] FOREIGN KEY([ModuleID])
REFERENCES {databaseOwner}[{objectQualifier}Modules] ([ModuleID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsWidgetsFilterMenu_Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsWidgetsFilterMenu]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsWidgetsFilterMenu] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsWidgetsFilterMenu_Modules]
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsWidgetsFilterMenu_Tabs]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsWidgetsFilterMenu]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsWidgetsFilterMenu]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsWidgetsFilterMenu_Tabs] FOREIGN KEY([OpenInTabID])
REFERENCES {databaseOwner}[{objectQualifier}Tabs] ([TabID]) ON DELETE SET NULL
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsWidgetsFilterMenu_Tabs]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsWidgetsFilterMenu]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsWidgetsFilterMenu] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsWidgetsFilterMenu_Tabs]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EDS_StringListToTable]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION {databaseOwner}[{objectQualifier}EDS_StringListToTable]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EDS_StringListToTable]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION {databaseOwner}[{objectQualifier}EDS_StringListToTable]
(  
    @List		nvarchar(max)
) 
RETURNS @TableOfValues TABLE 
(  
	KeyID	int	not null primary key
) 
AS 
BEGIN
	DECLARE @CategoryID varchar(10), @Pos int
	SET @List = LTRIM(RTRIM(@List))+ '',''
	SET @Pos = CHARINDEX('','', @List, 1)
	IF REPLACE(@List, '','', '''') <> ''''
		BEGIN
			WHILE @Pos > 0
			BEGIN
				SET @CategoryID = LTRIM(RTRIM(LEFT(@List, @Pos - 1)))
				IF @CategoryID <> ''''
					BEGIN
						INSERT INTO @TableOfValues (KeyID) VALUES (CAST(@CategoryID AS int))
					END
				SET @List = RIGHT(@List, LEN(@List) - @Pos)
				SET @Pos = CHARINDEX('','', @List, 1)
			END
		END	
RETURN
END
' 
END
GO

if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsMenuSettings' and column_name = 'TemplateGroup')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsMenuSettings] ADD TemplateGroup nvarchar(150) CONSTRAINT DF_{objectQualifier}EasyDNNNewsMenuSettings_TemplateGroup DEFAULT('') NOT NULL
END
GO

if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsCalendarSettings' and column_name = 'ArchiveTemplateGroup')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsCalendarSettings] ADD ArchiveTemplateGroup nvarchar(150) CONSTRAINT DF_{objectQualifier}EasyDNNNewsCalendarSettings_ArchiveTemplateGroup DEFAULT('') NOT NULL
END

if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsTagCloudSettings' and column_name = 'TemplateGroup')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsTagCloudSettings] ADD TemplateGroup nvarchar(150) CONSTRAINT DF_{objectQualifier}EasyDNNNewsTagCloudSettings_TemplateGroup DEFAULT('') NOT NULL
END
