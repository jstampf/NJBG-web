<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="liCommentedDate.Text" xml:space="preserve">
    <value>Last commented</value>
  </data>
	<data name="liDateAdded.Text" xml:space="preserve">
    <value>Date added</value>
  </data>
	<data name="liEventStartDate.Text" xml:space="preserve">
    <value>Event start date</value>
  </data>
	<data name="liExpireDate.Text" xml:space="preserve">
    <value>Expire date</value>
  </data>
	<data name="liLastModified.Text" xml:space="preserve">
    <value>Last modified</value>
  </data>
	<data name="liNumberOfComments.Text" xml:space="preserve">
    <value>Number of comments</value>
  </data>
	<data name="liNumberOfViews.Text" xml:space="preserve">
    <value>Number of views</value>
  </data>
	<data name="liPublishDate.Text" xml:space="preserve">
    <value>Publish date</value>
  </data>
	<data name="liRandom.Text" xml:space="preserve">
    <value>Random</value>
  </data>
	<data name="liRating.Text" xml:space="preserve">
    <value>Rating</value>
  </data>
	<data name="liTitle.Text" xml:space="preserve">
    <value>Title</value>
  </data>
	<data name="SettingsTitle.Text" xml:space="preserve">
    <value>Latest articles settings</value>
  </data>
	<data name="LimitDisplayingOfContent.Text" xml:space="preserve">
    <value>Limit displaying of content</value>
  </data>
	<data name="ListContentImageProperties.Text" xml:space="preserve">
    <value>Main article image</value>
  </data>
	<data name="PaginationSettings.Text" xml:space="preserve">
    <value>Pagination settings</value>
  </data>
	<data name="btnCancel.Text" xml:space="preserve">
    <value>Close</value>
  </data>
	<data name="btnSaveClose.Text" xml:space="preserve">
    <value>Save &amp; Close</value>
  </data>
	<data name="btnSaveSettings.Text" xml:space="preserve">
    <value>Save</value>
  </data>
	<data name="btnSharingPortal.Text" xml:space="preserve">
    <value>Set portals</value>
  </data>
	<data name="CascadeCategorySelection.Text" xml:space="preserve">
    <value>Auto select all child categories.</value>
  </data>
	<data name="DisplayAllCategories.Text" xml:space="preserve">
    <value>Display all categories and subcategories</value>
  </data>
	<data name="EnterValueBetween1-100.ErrorMessage" xml:space="preserve">
    <value>Enter value between 1 - 100.</value>
  </data>
	<data name="Filter.Text" xml:space="preserve">
    <value>Filter</value>
  </data>
	<data name="lblArticleListImageResizeMethod.Help" xml:space="preserve">
    <value>Select article list thumbnail resize method.</value>
  </data>
	<data name="lblArticleListImageResizeMethod.Text" xml:space="preserve">
    <value>Article list thumbnail resize method:</value>
  </data>
	<data name="lblAuthorFilter.Help" xml:space="preserve">
    <value>Filter by author.</value>
  </data>
	<data name="lblAuthorFilter.Text" xml:space="preserve">
    <value>All Authors:</value>
  </data>
	<data name="lblCropResizeMode.Help" xml:space="preserve">
    <value>Image cropping centering point.</value>
  </data>
	<data name="lblCropResizeMode.Text" xml:space="preserve">
    <value>Crop resize mode:</value>
  </data>
	<data name="lblFeaturedArticles.Help" xml:space="preserve">
    <value>The option 'Show only featured articles' allows only the articles marked as featured to be displayed. The option 'Keep featured articles on top' allows for all the featured articles to be displayed before all other articles, disregarding the publish date.</value>
  </data>
	<data name="lblFeaturedArticles.Text" xml:space="preserve">
    <value>Displaying of featured articles:</value>
  </data>
	<data name="lblFilterBy.Help" xml:space="preserve">
    <value>This option allows for displaying articles only, or events only, or both.</value>
  </data>
	<data name="lblFilterBy.Text" xml:space="preserve">
    <value>Display articles and events:</value>
  </data>
	<data name="lblFilterByEventsLimit.Help" xml:space="preserve">
    <value>Set the criteria to display events whose start date has ended. The option 'Show all' will display all events, disregarding the fact that they have already ended. We can enter the number of days to be set in the past for past events in the field 'Limit to number of days in the past'. If the set value is 0, the criterion for the event's listing will be the current date. In that case, neither of the past events will be displayed.</value>
  </data>
	<data name="lblFilterByEventsLimit.Text" xml:space="preserve">
    <value>Displaying of past events:</value>
  </data>
	<data name="lblHideUnlocalizedItems.Help" xml:space="preserve">
    <value>Articles and events without translation for a particular language will not be displayed when users browsing the site in this language.</value>
  </data>
	<data name="lblHideUnlocalizedItems.Text" xml:space="preserve">
    <value>Don't display not-translated articles:</value>
  </data>
	<data name="lblImageThumbHeight.Help" xml:space="preserve">
    <value>Image thumb height.</value>
  </data>
	<data name="lblImageThumbHeight.Text" xml:space="preserve">
    <value>Image thumb height:</value>
  </data>
	<data name="lblImageThumbWidth.Help" xml:space="preserve">
    <value>Image thumb width.</value>
  </data>
	<data name="lblImageThumbWidth.Text" xml:space="preserve">
    <value>Image thumb width:</value>
  </data>
	<data name="lblIsSocialInstance.Help" xml:space="preserve">
    <value>Displays user's and group's articles on the Activity feed. The articles are filtered by the UserID or GroupID querystring. If this option is enabled and the querystring UserID or GroupID is missing, then the articles won't show up.</value>
  </data>
	<data name="lblIsSocialInstance.Text" xml:space="preserve">
    <value>Community mode:</value>
  </data>
	<data name="lblItemsPerPage.Help" xml:space="preserve">
    <value>Number of articles per page.</value>
  </data>
	<data name="lblItemsPerPage.Text" xml:space="preserve">
    <value>Number of articles per page:</value>
  </data>
	<data name="lblJpegQuality.Help" xml:space="preserve">
    <value>Jpeg quality.</value>
  </data>
	<data name="lblJpegQuality.Text" xml:space="preserve">
    <value>Jpeg quality:</value>
  </data>
	<data name="lblLimitArticle.Help" xml:space="preserve">
    <value>Limit article to number of characters (0- No limit).</value>
  </data>
	<data name="lblLimitArticle.Text" xml:space="preserve">
    <value>Limit article body length:</value>
  </data>
	<data name="lblLimitSubtitle.Help" xml:space="preserve">
    <value>Limit subtitle to number of characters (0- No limit):</value>
  </data>
	<data name="lblLimitSubtitle.Text" xml:space="preserve">
    <value>Limit subtitle length:</value>
  </data>
	<data name="lblLimitSummary.Help" xml:space="preserve">
    <value>Limit summary to number of characters (0- No limit).</value>
  </data>
	<data name="lblLimitSummary.Text" xml:space="preserve">
    <value>Limit summary length:</value>
  </data>
	<data name="lblLimitTitle.Help" xml:space="preserve">
    <value>Limit title to number of characters (0- No limit).</value>
  </data>
	<data name="lblLimitTitle.Text" xml:space="preserve">
    <value>Limit title length:</value>
  </data>
	<data name="lblListTemplate.Help" xml:space="preserve">
    <value>List template.</value>
  </data>
	<data name="lblListTemplate.Text" xml:space="preserve">
    <value>Template:</value>
  </data>
	<data name="lblNumberOfPager.Help" xml:space="preserve">
    <value>Set how many links (1, 2, 3, 4...) will be displayed in pagination between previous and next.</value>
  </data>
	<data name="lblNumberOfPager.Text" xml:space="preserve">
    <value>Number of links in pagination:</value>
  </data>
	<data name="lblPaginationType.Help" xml:space="preserve">
    <value>Choose your pagination type. Classical pagination shares the list of articles into multiple pages for 'paged' navigation. Infinite scroll pagination with Load more button loads a set of articles, which requires each new set of articles to be clicked on via Load more button at the bottom of the page. Infinite scroll pagination with automatic article loading automatically loads a new set of articles when the user scrolls down to the bottom of the page.</value>
  </data>
	<data name="lblPaginationType.Text" xml:space="preserve">
    <value>Type:</value>
  </data>
	<data name="lblPortalSharing.Help" xml:space="preserve">
    <value>This option allows for displaying of articles from other portals. Here you can select one or more portals from where articles will be displayed. In order to be able to receive articles from other portals, sharing of articles must be enabled in the portal that shares articles with this portal. Configure sharing of articles in Dashboard &gt; Cross portal sharing</value>
  </data>
	<data name="lblPortalSharing.Text" xml:space="preserve">
    <value>Display articles from other portals:</value>
  </data>
	<data name="lblPostOrder.Help" xml:space="preserve">
    <value>This option allows for the choice of criteria to determine the order of articles, including Descending and Ascending.</value>
  </data>
	<data name="lblPostOrder.Text" xml:space="preserve">
    <value>Order articles by:</value>
  </data>
	<data name="lblRestrictionByDateRange.Help" xml:space="preserve">
    <value>Restriction by date range limits content by publish date. Publish date between x and current date.</value>
  </data>
	<data name="lblRestrictionByDateRange.Text" xml:space="preserve">
    <value>Restriction by date range:</value>
  </data>
	<data name="lblSelectCategories.Help" xml:space="preserve">
    <value>Show all categories or make category selection in the tree view selection list.</value>
  </data>
	<data name="lblSelectCategories.Text" xml:space="preserve">
    <value>Select categories to display:</value>
  </data>
	<data name="lblSelectModule.Help" xml:space="preserve">
    <value>Select news module instance to open articles.</value>
  </data>
	<data name="lblSelectModule.Text" xml:space="preserve">
    <value>Select module to display results:</value>
  </data>
	<data name="lblShowArticlePaging.Help" xml:space="preserve">
    <value>Check this option if you wish to enable using pagination.</value>
  </data>
	<data name="lblShowArticlePaging.Text" xml:space="preserve">
    <value>Enable pagination:</value>
  </data>
	<data name="lblTheme.Help" xml:space="preserve">
    <value>Select a theme for an article list.</value>
  </data>
	<data name="lblTheme.Text" xml:space="preserve">
    <value>Theme:</value>
  </data>
	<data name="lblThemeStyle.Help" xml:space="preserve">
    <value>Select a display style for the selected theme.</value>
  </data>
	<data name="lblThemeStyle.Text" xml:space="preserve">
    <value>Display style:</value>
  </data>
	<data name="liAll.Text" xml:space="preserve">
    <value>All</value>
  </data>
	<data name="liArticles.Text" xml:space="preserve">
    <value>Articles</value>
  </data>
	<data name="liASC.Text" xml:space="preserve">
    <value>Ascending</value>
  </data>
	<data name="liCenter.Text" xml:space="preserve">
    <value>Center</value>
  </data>
	<data name="liCrop.Text" xml:space="preserve">
    <value>Resize and crop</value>
  </data>
	<data name="liDefault.Text" xml:space="preserve">
    <value>Default</value>
  </data>
	<data name="liDESC.Text" xml:space="preserve">
    <value>Descending</value>
  </data>
	<data name="liEvents.Text" xml:space="preserve">
    <value>Events</value>
  </data>
	<data name="liKeepFeaturedArticlesOnTop.Text" xml:space="preserve">
    <value>Keep featured articles on top</value>
  </data>
	<data name="liLeft.Text" xml:space="preserve">
    <value>Left</value>
  </data>
	<data name="liLimitToNumberOfDays.Text" xml:space="preserve">
    <value>Limit to number of days:</value>
  </data>
	<data name="liNoRestriction.Text" xml:space="preserve">
    <value>No restriction</value>
  </data>
	<data name="liNumberOfDaysFromCurrentDate.Text" xml:space="preserve">
    <value>Number of days from current date</value>
  </data>
	<data name="liPropotional.Text" xml:space="preserve">
    <value>Proportional resize</value>
  </data>
	<data name="liShowAll.Text" xml:space="preserve">
    <value>Show all</value>
  </data>
	<data name="liShowOnlyFeaturedArticles.Text" xml:space="preserve">
    <value>Show only featured articles</value>
  </data>
	<data name="LocalizationText.Text" xml:space="preserve">
    <value>Translation</value>
  </data>
	<data name="MustBeGreaterThanZero.ErrorMessage" xml:space="preserve">
    <value>Must be greater than 0!</value>
  </data>
	<data name="OrderBy.Text" xml:space="preserve">
    <value>Order by</value>
  </data>
	<data name="Permissions.Text" xml:space="preserve">
    <value>Permissions:</value>
  </data>
	<data name="PleaseEnterNumberOnly.ErrorMessage" xml:space="preserve">
    <value>Please enter number only.</value>
  </data>
	<data name="PleaseSelectAtLeastOneAuthor.ErrorMessage" xml:space="preserve">
    <value>Please select at least one author.</value>
  </data>
	<data name="PortalSharing.Text" xml:space="preserve">
    <value>Cross portal sharing</value>
  </data>
	<data name="rblPaginationTypeButton.Text" xml:space="preserve">
    <value>Infinite scroll pagination with Load more button</value>
  </data>
	<data name="rblPaginationTypeButtonAndScroll.Text" xml:space="preserve">
    <value>Infinite scroll pagination with automatic article loading</value>
  </data>
	<data name="rblPaginationTypeNormal.Text" xml:space="preserve">
    <value>Classical pagination</value>
  </data>
	<data name="SelectAtLeastOneCategory.ErrorMessage" xml:space="preserve">
    <value>Please select at least one category.</value>
  </data>
	<data name="SelectPortals.Text" xml:space="preserve">
    <value>Select portals</value>
  </data>
	<data name="SelectTheme.ErrorMessage" xml:space="preserve">
    <value>Please select theme.</value>
  </data>
	<data name="Theme.Text" xml:space="preserve">
    <value>Theme</value>
  </data>
	<data name="ThisFiledIsRequired.ErrorMessage" xml:space="preserve">
    <value>This filed is required.</value>
  </data>
	<data name="ItemsPerPageMustBePositiveInteger.Text" xml:space="preserve">
    <value>Number of items per page is required.</value>
  </data>
	<data name="SettingsSaved.Text" xml:space="preserve">
    <value>Settings saved.</value>
  </data>
	<data name="WhereToOpenArticleDetailsNewsModuleIsRequired.Text" xml:space="preserve">
    <value>Where to open news module details must be selected.</value>
  </data>
	<data name="lblListCommentsTemplate.Help" xml:space="preserve">
    <value>List comments template.</value>
  </data>
	<data name="lblListCommentsTemplate.Text" xml:space="preserve">
    <value>Comments template:</value>
  </data>
	<data name="lblListDocumentsTemplate.Help" xml:space="preserve">
    <value>List documents template.</value>
  </data>
	<data name="lblListDocumentsTemplate.Text" xml:space="preserve">
    <value>Documents template:</value>
  </data>
	<data name="lblListLinksTemplate.Help" xml:space="preserve">
    <value>List links template.</value>
  </data>
	<data name="lblListLinksTemplate.Text" xml:space="preserve">
    <value>Links template:</value>
  </data>
	<data name="lblListRelatedArticlesTemplate.Help" xml:space="preserve">
    <value>List related articles template.</value>
  </data>
	<data name="lblListRelatedArticlesTemplate.Text" xml:space="preserve">
    <value>Related articles template:</value>
  </data>
	<data name="lblModuleVisibility.Help" xml:space="preserve">
    <value>Here you can set when you wish the module to be visible on the page. If 'Module always visible' option is selected, the module is visible all the time. If 'Show module only when the news module displays the list of articles' option is selected, the module will only be visible when the news module displays the list of articles, yet it won't be visible when article details are displayed. If 'Show module only when the news module displays article details' option is selected, the module will only be visible when article details are displayed, yet it won't be visible when the list of articles is displayed. Note: The module is always visible to admin and host users.</value>
  </data>
	<data name="lblModuleVisibility.Text" xml:space="preserve">
    <value>Module visibility:</value>
  </data>
	<data name="liDefaultAlwaysShowModule.Text" xml:space="preserve">
    <value>Default (always show module)</value>
  </data>
	<data name="liVisibleOnlyIfArticleDetailsMode.Text" xml:space="preserve">
    <value>Visible only if article details mode</value>
  </data>
	<data name="liVisibleOnlyIfArticleListMode.Text" xml:space="preserve">
    <value>Visible only if article list mode</value>
  </data>
	<data name="Visibility.Text" xml:space="preserve">
    <value>Visibility</value>
  </data>
	<data name="SocialSettings.Text" xml:space="preserve">
    <value>Social settings</value>
  </data>
	<data name="SettingsSavedSuccessfully.Text" xml:space="preserve">
    <value>Settings saved successfully</value>
  </data>
	<data name="SelectHtmlTemplate.ErrorMessage" xml:space="preserve">
    <value>Select html template.</value>
  </data>
</root>