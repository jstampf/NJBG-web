<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCancelResource1.Text" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="btnSaveCloseResource1.Text" xml:space="preserve">
    <value>Save &amp; Close</value>
  </data>
  <data name="btnSaveSettingsResource1.Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="cbAutoAddCatChildsResource1.Text" xml:space="preserve">
    <value>Auto select all child categories.</value>
  </data>
  <data name="cbdisplayallcatsResource1.Text" xml:space="preserve">
    <value>Display tags from all categories</value>
  </data>
  <data name="cbPageResource1.Text" xml:space="preserve">
    <value>Page</value>
  </data>
  <data name="ControlTitle_edit.Text" xml:space="preserve">
    <value>Edit EasyDNNNewsTagCloud</value>
  </data>
  <data name="cvNumberOfTagsResource1.ErrorMessage" xml:space="preserve">
    <value>Enter number only.</value>
  </data>
  <data name="cvThemeSelectResource1.ErrorMessage" xml:space="preserve">
    <value>Please select theme</value>
  </data>
  <data name="lblContent.Help" xml:space="preserve">
    <value>Enter the Content</value>
  </data>
  <data name="lblContent.Text" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="ListItemResource1.Text" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="ListItemResource2.Text" xml:space="preserve">
    <value>Portal</value>
  </data>
  <data name="ListItemResource3.Text" xml:space="preserve">
    <value>Module</value>
  </data>
  <data name="ListItemResource4.Text" xml:space="preserve">
    <value>Tag name</value>
  </data>
  <data name="ListItemResource5.Text" xml:space="preserve">
    <value>Number of posts</value>
  </data>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>&lt;P&gt;A EasyDNNNewsTagCloud module</value>
  </data>
  <data name="rfvNumberOfTagsResource1.ErrorMessage" xml:space="preserve">
    <value>This filed is required.</value>
  </data>
  <data name="SettingsTitle.Text" xml:space="preserve">
    <value>Tag cloud settings</value>
  </data>
  <data name="tbNumberOfTagsResource1.Text" xml:space="preserve">
    <value>10</value>
  </data>
  <data name="tvCatAndSubCatResource1.CollapseImageToolTip" xml:space="preserve">
    <value>Collapse {0}</value>
  </data>
  <data name="tvCatAndSubCatResource1.ExpandImageToolTip" xml:space="preserve">
    <value>Expand {0}</value>
  </data>
  <data name="tvCatAndSubCatResource1.SkipLinkText" xml:space="preserve">
    <value>Skip Navigation Links.</value>
  </data>
  <data name="valContent.ErrorMessage" xml:space="preserve">
    <value>&lt;br&gt;Content is required</value>
  </data>
  <data name="lblAuthorSelection.HelpText" xml:space="preserve">
    <value>Select authors to include in search:</value>
  </data>
  <data name="lblAuthorSelection.Text" xml:space="preserve">
    <value>Select authors to include in search:</value>
  </data>
  <data name="lblCelectCats.HelpText" xml:space="preserve">
    <value>Using this option you can select categories from whose articles and events tags will be displayed. Uncheck the option ‘Display all categories and subcategories’ to get the possibility of selecting categories.</value>
  </data>
  <data name="lblCelectCats.Text" xml:space="preserve">
    <value>Select categories to display tags from:</value>
  </data>
  <data name="lblDisplayHeader.HelpText" xml:space="preserve">
    <value>This option enables displaying of a header text from a resource file ().</value>
  </data>
  <data name="lblDisplayHeader.Text" xml:space="preserve">
    <value>Display module header:</value>
  </data>
  <data name="lblFilterAuthors.HelpText" xml:space="preserve">
    <value>Using this option you can select authors from whose articles and events tags will be displayed. Uncheck the option 'Display articles from all authors' to get the possibility of selecting categories.</value>
  </data>
  <data name="lblFilterAuthors.Text" xml:space="preserve">
    <value>Display articles from all authors:</value>
  </data>
  <data name="lblModuleToOpen.HelpText" xml:space="preserve">
    <value>Select an instance of the main news module in which tags links will be opened.</value>
  </data>
  <data name="lblModuleToOpen.Text" xml:space="preserve">
    <value>Open tag links in module instance:</value>
  </data>
  <data name="lblNumberOfTags.HelpText" xml:space="preserve">
    <value>Here you can set a number of tags which will be displayed in this instance of the EasyDNNnews Tag Cloud module.</value>
  </data>
  <data name="lblNumberOfTags.Text" xml:space="preserve">
    <value>Number of tags:</value>
  </data>
  <data name="lblPermissionSource.HelpText" xml:space="preserve">
    <value>Depending on the selection, a module can inherit permissions from the EasyDNNnews module which are valid on the whole portal, or you can choose a module instance from which it will inherit permissions. Users will see only permitted articles in the calendar. If you select None, a module will not use permissions for the calendar.</value>
  </data>
  <data name="lblPermissionSource.Text" xml:space="preserve">
    <value>Select permission source:</value>
  </data>
  <data name="lblSelectDisplayStyle.HelpText" xml:space="preserve">
    <value>Select a display style for the selected theme.</value>
  </data>
  <data name="lblSelectDisplayStyle.Text" xml:space="preserve">
    <value>Module display style:</value>
  </data>
  <data name="lblSorting.HelpText" xml:space="preserve">
    <value>Select a criteria for putting tags in an order in the tag cloud.</value>
  </data>
  <data name="lblSorting.Text" xml:space="preserve">
    <value>Order tags by:</value>
  </data>
  <data name="lblTagsTheme.HelpText" xml:space="preserve">
    <value>Select a theme (design) for this module.</value>
  </data>
  <data name="lblTagsTheme.Text" xml:space="preserve">
    <value>Module theme:</value>
  </data>
  <data name="lblPortalSharing.HelpText" xml:space="preserve">
    <value>This option allows for displaying of articles from other portals. Here you can select one or more portals from where articles will be displayed. In order to be able to receive articles from other portals, sharing of articles must be enabled in the portal that shares articles with this portal. Configure sharing of articles in Dashboard > Cross portal sharing</value>
  </data>
  <data name="lblPortalSharing.Text" xml:space="preserve">
    <value>Display articles from other portals:</value>
  </data>
  <data name="Tagcloudsettings.Text" xml:space="preserve">
    <value>Tag cloud Settings</value>
  </data>
  <data name="cvAuthorsTreeview.ErrorMessage" xml:space="preserve">
    <value>Please select at least one author.</value>
  </data>
  <data name="cvCategoriesTreeview.ErrorMessage" xml:space="preserve">
    <value>Please select at least one category.</value>
  </data>
  <data name="lblTagsByCategory.HelpText" xml:space="preserve">
    <value>While navigating through multiple categories, only the currently selected category's tags are displayed.</value>
  </data>
  <data name="lblTagsByCategory.Text" xml:space="preserve">
    <value>Dynamically display tags from selected category:</value>
  </data>
  <data name="Filter.Text" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="lblHideUnlocalizedItems.HelpText" xml:space="preserve">
    <value>Tags from articles without translation for a selected language won't be displayed.
For example on a site with three different languages: English (default), German and Italian, an article is translated to Italian language. When selecting German language article won’t be visible because there is no translation. Hint: You can also turn off displaying articles on the default language. For articles that you do not want to show on the default language you need to go to Edit article &gt; Content localization and Turn on option “Do not show articles on the default language”.</value>
  </data>
  <data name="lblHideUnlocalizedItems.Text" xml:space="preserve">
    <value>Do not show tags from articles without translation for selected language:</value>
  </data>
  <data name="lblHtmTemplate.HelpText" xml:space="preserve">
    <value>Select a HTML template for this module instance.</value>
  </data>
  <data name="lblHtmTemplate.Text" xml:space="preserve">
    <value>Module html template:</value>
  </data>
  <data name="lblShowTagCount.HelpText" xml:space="preserve">
    <value>If this option is enabled, for each tag there is the total number of tags displayed in articles.</value>
  </data>
  <data name="lblShowTagCount.Text" xml:space="preserve">
    <value>Display tag count:</value>
  </data>
  <data name="LocalizationText.Text" xml:space="preserve">
    <value>Translation</value>
  </data>
  <data name="Permissions.Text" xml:space="preserve">
    <value>Permissions</value>
  </data>
  <data name="Portalsharing.Text" xml:space="preserve">
    <value>Cross portal sharing</value>
  </data>
  <data name="TagCouldOptions.Text" xml:space="preserve">
    <value>Tag cloud specific options</value>
  </data>
  <data name="Themeandtemplate.Text" xml:space="preserve">
    <value>Theme and template</value>
  </data>
  <data name="NoNewsInstance.Text" xml:space="preserve">
    <value>No News Instance, please add news module instance. &lt;br /&gt;</value>
  </data>
  <data name="NoNewsInstancePortal.Text" xml:space="preserve">
    <value>No news instance with selected portal sharing. Please edit news module instance settings and set portal sharing. &lt;br /&gt;</value>
  </data>
  <data name="NoSharingPortalInstance.Text" xml:space="preserve">
    <value>No news instance with selected portal sharing. Please edit news module instance settings and set portal sharing. &lt;br /&gt;</value>
  </data>
  <data name="NoSharingPortalInstance2.Text" xml:space="preserve">
    <value>No News Instance, please add news module instance. &lt;br /&gt;</value>
  </data>
  <data name="lblShowOnlyEventsLimit.HelpText" xml:space="preserve">
    <value>Set the criteria to display tags of events whose start date has ended. The option 'Show all' will display all events, disregarding the fact that they have already ended. We can enter the number of days to be set in the past for past events in the field 'Limit to number of days in the past'. If the set value is 0, the criterion for the event's listing will be the current date. In that case, neither of the past events will be displayed.</value>
  </data>
  <data name="lblShowOnlyEventsLimit.Text" xml:space="preserve">
    <value>Displaying of past events:</value>
  </data>
  <data name="lblTagsFilterBy.HelpText" xml:space="preserve">
    <value>Using this option you can set whether this instance of the tagcloud module will display only article tags, only event tags or both.</value>
  </data>
  <data name="lblTagsFilterBy.Text" xml:space="preserve">
    <value>Display articles and events:</value>
  </data>
  <data name="Visibility.Text" xml:space="preserve">
    <value>Visibility</value>
  </data>
  <data name="lblModuleVisibility.HelpText" xml:space="preserve">
    <value>Here you can set when you want the module to be visible on the page. If “Module always visible” option is selected, the module is visible all the time. If “Show module only when the news module displays the list of articles” option is selected, the module will only be visible when the news module displays the list of articles, yet it won't be visible when article details are displayed. If “Show module only when the news module displays article details” option is selected, the module will only be visible when article details are displayed, yet it won't be visible when the list of articles is displayed. Note: The module is always visible to admin and host users.</value>
  </data>
  <data name="lblModuleVisibility.Text" xml:space="preserve">
    <value>Module visibility:</value>
  </data>
  <data name="liAll.Text" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="SelectPortals.Text" xml:space="preserve">
    <value>Select portals</value>
  </data>
  <data name="lblIsSocialInstance.Text" xml:space="preserve">
    <value>Community mode:</value>
  </data>
  <data name="lblIsSocialInstance.HelpText" xml:space="preserve">
    <value>Displays user's and group's articles on the Activity feed. The articles are filtered by the UserID or GroupID querystring. If this option is enabled and the querystring UserID or GroupID is missing, then the articles won't show up.</value>
  </data>
  <data name="SettingsSavedSuccessfully.Text" xml:space="preserve">
    <value>Settings saved successfully</value>
  </data>
</root>