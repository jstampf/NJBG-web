/**** obj qualif checks ****/
if '{objectQualifier}' <> ''
BEGIN

/**** 010000 ****/
BEGIN TRY
 IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryCategory]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGalleryCategory]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGalleryCategory]', N'{objectQualifier}EasyGalleryCategory', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGalleryCategory', N'PK_{objectQualifier}EasyGalleryCategory', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGallery_EasyGalleryCategory', N'FK_{objectQualifier}EasyGallery_{objectQualifier}EasyGalleryCategory', 'OBJECT'
  END
 END
END TRY
BEGIN CATCH
END CATCH

BEGIN TRY
  IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGallery]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGallery]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGallery]', N'{objectQualifier}EasyGallery', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGallery', N'PK_{objectQualifier}EasyGallery', 'OBJECT'
  END
 END
 END TRY
BEGIN CATCH
END CATCH

BEGIN TRY
   IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNThumbs]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyDNNThumbs]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyDNNThumbs]', N'{objectQualifier}EasyDNNThumbs', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyDNNThumbs', N'PK_{objectQualifier}EasyDNNThumbs', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyDNNThumbs_EasyGallery', N'FK_{objectQualifier}EasyDNNThumbs_{objectQualifier}EasyGallery', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyDNNThumbs_{objectQualifier}Modules', N'FK_{objectQualifier}EasyDNNThumbs_{objectQualifier}Modules', 'OBJECT'
  END
 END
 END TRY
BEGIN CATCH
END CATCH
 
BEGIN TRY
   IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryPictures]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGalleryPictures]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGalleryPictures]', N'{objectQualifier}EasyGalleryPictures', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGalleryPictures', N'PK_{objectQualifier}EasyGalleryPictures', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGalleryPictures_EasyGallery', N'FK_{objectQualifier}EasyGalleryPictures_{objectQualifier}EasyGallery', 'OBJECT'
  END
 END
 END TRY
BEGIN CATCH
END CATCH

BEGIN TRY
   IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryIntegration]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGalleryIntegration]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGalleryIntegration]', N'{objectQualifier}EasyGalleryIntegration', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGalleryIntegration', N'PK_{objectQualifier}EasyGalleryIntegration', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGalleryIntegration_EasyGallery', N'FK_{objectQualifier}EasyGalleryIntegration_{objectQualifier}EasyGallery', 'OBJECT'
  END
 END
 END TRY
BEGIN CATCH
END CATCH
/**** 010000 ****/

/**** 010600 ****/
BEGIN TRY
 IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGallerySettings]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGallerySettings]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGallerySettings]', N'{objectQualifier}EasyGallerySettings', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGallerySettings', N'PK_{objectQualifier}EasyGallerySettings', 'OBJECT'
  END
 END
END TRY
BEGIN CATCH
END CATCH
/**** 010600 ****/


/**** 020200 ****/
BEGIN TRY
 IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNMediaLocalization]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyDNNMediaLocalization]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyDNNMediaLocalization]', N'{objectQualifier}EasyDNNMediaLocalization', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyDNNMediaLocalization', N'PK_{objectQualifier}EasyDNNMediaLocalization', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyDNNMediaLocalization_EasyGalleryPictures', N'FK_{objectQualifier}EasyDNNMediaLocalization_{objectQualifier}EasyGalleryPictures', 'OBJECT'
  END
 END
 END TRY
BEGIN CATCH
END CATCH

BEGIN TRY
  IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNGalleryLocalization]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyDNNGalleryLocalization]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyDNNGalleryLocalization]', N'{objectQualifier}EasyDNNGalleryLocalization', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyDNNGalleryLocalization', N'PK_{objectQualifier}EasyDNNGalleryLocalization', 'OBJECT'
    EXECUTE sp_rename N'FK_EasyDNNGalleryLocalization_EasyGallery', N'FK_{objectQualifier}EasyDNNGalleryLocalization_{objectQualifier}EasyGallery', 'OBJECT'
  END
 END
 END TRY
BEGIN CATCH
END CATCH

BEGIN TRY
   IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNCategoryLocalization]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyDNNCategoryLocalization]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyDNNCategoryLocalization]', N'{objectQualifier}EasyDNNCategoryLocalization', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyDNNCategoryLocalization', N'PK_{objectQualifier}EasyDNNCategoryLocalization', 'OBJECT'
    EXECUTE sp_rename N'FK_EasyDNNCategoryLocalization_EasyGalleryCategory', N'FK_{objectQualifier}EasyDNNCategoryLocalization_{objectQualifier}EasyGalleryCategory', 'OBJECT'
  END
 END
 END TRY
BEGIN CATCH
END CATCH
 
/**** 020200 ****/

/**** 020400 ****/

BEGIN TRY
IF EXISTS (SELECT * FROM sys.key_constraints WHERE type = 'PK' AND parent_object_id = OBJECT_ID('{databaseOwner}[{objectQualifier}EasyDNNMediaLocalization]') AND Name = 'PK_EasyDNNMediaLocalization')
BEGIN
 EXECUTE sp_rename N'PK_EasyDNNMediaLocalization', N'PK_{objectQualifier}EasyDNNMediaLocalization', 'OBJECT'
END

IF EXISTS (SELECT * FROM sys.key_constraints WHERE type = 'PK' AND parent_object_id = OBJECT_ID('{databaseOwner}[{objectQualifier}EasyDNNGalleryLocalization]') AND Name = 'PK_EasyDNNGalleryLocalization')
BEGIN
 EXECUTE sp_rename N'PK_EasyDNNGalleryLocalization', N'PK_{objectQualifier}EasyDNNGalleryLocalization', 'OBJECT'
END

IF EXISTS (SELECT * FROM sys.key_constraints WHERE type = 'PK' AND parent_object_id = OBJECT_ID('{databaseOwner}[{objectQualifier}EasyDNNCategoryLocalization]') AND Name = 'PK_EasyDNNCategoryLocalization')
BEGIN
 EXECUTE sp_rename N'PK_EasyDNNCategoryLocalization', N'PK_{objectQualifier}EasyDNNCategoryLocalization', 'OBJECT'
END
 END TRY
BEGIN CATCH
END CATCH
/**** 020400 ****/


/**** 030000 ****/
BEGIN TRY
 IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryUpload]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGalleryUpload]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGalleryUpload]', N'{objectQualifier}EasyGalleryUpload', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGalleryUpload', N'PK_{objectQualifier}EasyGalleryUpload', 'OBJECT'
  END
 END
  END TRY
BEGIN CATCH
END CATCH
/**** 030000 ****/

/**** 040100 ****/
BEGIN TRY
 IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNRotatorGalleryBridge]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.key_constraints WHERE type = 'FK' AND parent_object_id = OBJECT_ID('{databaseOwner}[{objectQualifier}EasyDNNRotatorGalleryBridge]') AND Name = 'FK_EasyDNNRotatorGallerySettings_EasyGallery')
  BEGIN
   EXECUTE sp_rename N'FK_EasyDNNRotatorGallerySettings_EasyGallery', N'FK_{objectQualifier}EasyDNNRotatorGallerySettings_{objectQualifier}EasyGallery', 'OBJECT'
  END
 END
  END TRY
BEGIN CATCH
END CATCH
/**** 040100 ****/

/**** 040600 ****/
BEGIN TRY
 IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryInfo]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGalleryInfo]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGalleryInfo]', N'{objectQualifier}EasyGalleryInfo', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGalleryInfoPrimary', N'PK_{objectQualifier}EasyGalleryInfoPrimary', 'OBJECT'
  END
 END
   END TRY
BEGIN CATCH
END CATCH
/**** 040600 ****/

/**** 040700 ****/
BEGIN TRY
 IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryPortalSharing]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGalleryPortalSharing]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGalleryPortalSharing]', N'{objectQualifier}EasyGalleryPortalSharing', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGalleryPortalSharing', N'PK_{objectQualifier}EasyGalleryPortalSharing', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGalleryPortalSharing_Portals1', N'FK_{objectQualifier}EasyGalleryPortalSharing_{objectQualifier}Portals1', 'OBJECT'
  END
 END
    END TRY
BEGIN CATCH
END CATCH
/**** 040700 ****/

END
GO
/**** obj qualif checks ****/


/****** Object:  Table {databaseOwner}[{objectQualifier}EasyGalleryModuleCategory]    Script Date: 09/05/2012 16:59:27 ******/

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryModuleCategory]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyGalleryModuleCategory](
	[ModuleID] [int] NOT NULL,
	[CategoryID] [int] NOT NULL,
 CONSTRAINT [PK_{objectQualifier}EasyGalleryModuleCategory] PRIMARY KEY CLUSTERED ([ModuleID] ASC, [CategoryID] ASC)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
/****** Object:  Table {databaseOwner}[{objectQualifier}EasyGalleryCreatedThumbs]    Script Date: 09/05/2012 16:59:27 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryCreatedThumbs]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyGalleryCreatedThumbs](
	[ModuleID] [int] NOT NULL,
	[PictureID] [int] NOT NULL,
	[ThumbCreated] [bit] NOT NULL,
 CONSTRAINT [PK_{objectQualifier}EasyGalleryCreatedThumbs] PRIMARY KEY CLUSTERED([ModuleID] ASC,	[PictureID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
/****** Object:  ForeignKey [FK_EasyGalleryCreatedThumbs_EasyGalleryPictures]    Script Date: 09/05/2012 16:59:27 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_{objectQualifier}EasyGalleryCreatedThumbs_{objectQualifier}EasyGalleryPictures]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryCreatedThumbs]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryCreatedThumbs]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGalleryCreatedThumbs_{objectQualifier}EasyGalleryPictures] FOREIGN KEY([PictureID])
REFERENCES {databaseOwner}[{objectQualifier}EasyGalleryPictures] ([PictureID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryCreatedThumbs_{objectQualifier}EasyGalleryPictures]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryCreatedThumbs]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryCreatedThumbs] CHECK CONSTRAINT [FK_{objectQualifier}EasyGalleryCreatedThumbs_{objectQualifier}EasyGalleryPictures]
GO
/****** Object:  ForeignKey [FK_EasyGalleryCreatedThumbs_Modules]    Script Date: 09/05/2012 16:59:27 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryCreatedThumbs_{objectQualifier}Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryCreatedThumbs]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryCreatedThumbs]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGalleryCreatedThumbs_{objectQualifier}Modules] FOREIGN KEY([ModuleID])
REFERENCES {databaseOwner}{objectQualifier}Modules ([ModuleID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryCreatedThumbs_{objectQualifier}Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryCreatedThumbs]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryCreatedThumbs] CHECK CONSTRAINT [FK_{objectQualifier}EasyGalleryCreatedThumbs_{objectQualifier}Modules]
GO
/****** Object:  ForeignKey [FK_EasyGalleryModuleCategory_EasyGalleryCategory]    Script Date: 09/05/2012 16:59:27 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryModuleCategory_{objectQualifier}EasyGalleryCategory]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryModuleCategory]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryModuleCategory]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGalleryModuleCategory_{objectQualifier}EasyGalleryCategory] FOREIGN KEY([CategoryID])
REFERENCES {databaseOwner}[{objectQualifier}EasyGalleryCategory] ([CategoryID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryModuleCategory_{objectQualifier}EasyGalleryCategory]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryModuleCategory]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryModuleCategory] CHECK CONSTRAINT [FK_{objectQualifier}EasyGalleryModuleCategory_{objectQualifier}EasyGalleryCategory]
GO
/****** Object:  ForeignKey [FK_EasyGalleryModuleCategory_Modules]    Script Date: 09/05/2012 16:59:27 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryModuleCategory_{objectQualifier}Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryModuleCategory]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryModuleCategory]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGalleryModuleCategory_{objectQualifier}Modules] FOREIGN KEY([ModuleID])
REFERENCES {databaseOwner}{objectQualifier}Modules ([ModuleID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryModuleCategory_{objectQualifier}Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryModuleCategory]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryModuleCategory] CHECK CONSTRAINT [FK_{objectQualifier}EasyGalleryModuleCategory_{objectQualifier}Modules]
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryModuleSettings]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyGalleryModuleSettings](
	[ModuleID] [int] NOT NULL,
	[PortalID] [int] NOT NULL,
	[EnableCommunityMode] [bit] NOT NULL,
	[EnableAutoResize] [bit] NOT NULL,
	[ResizeWidth] [int] NOT NULL,
	[ResizeHeight] [int] NOT NULL,
	[EnablePostingToJournal] [bit] NOT NULL,
	[AutoJournalPost] [bit] NOT NULL,
	[ModuleToOpenDetails] [int] NOT NULL,
	[TabToOpenDetails] [int] NOT NULL,
 CONSTRAINT [PK_{objectQualifier}EasyGalleryModuleSettings] PRIMARY KEY CLUSTERED ([ModuleID] ASC,[PortalID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF))
END
GO
/****** Object:  ForeignKey [FK_EasyGalleryModuleSettings_Modules]    Script Date: 09/11/2012 16:57:15 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_{objectQualifier}EasyGalleryModuleSettings_{objectQualifier}Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryModuleSettings]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryModuleSettings]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGalleryModuleSettings_{objectQualifier}Modules] FOREIGN KEY([ModuleID])
REFERENCES {databaseOwner}{objectQualifier}Modules ([ModuleID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_{objectQualifier}EasyGalleryModuleSettings_{objectQualifier}Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryModuleSettings]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryModuleSettings] CHECK CONSTRAINT [FK_{objectQualifier}EasyGalleryModuleSettings_{objectQualifier}Modules]
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGallerySecurity]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyGallerySecurity](
	[GalleryID] [int] NOT NULL,
	[SecurityKey] [nvarchar](50) NOT NULL,
 CONSTRAINT [PK_{objectQualifier}EasyGallerySecurity] PRIMARY KEY CLUSTERED 
(
	[GalleryID] ASC,
	[SecurityKey] ASC
)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
/****** Object:  Default [DF_EasyGallerySecurity_SecurityKey]    Script Date: 09/19/2012 13:57:01 ******/
IF Not EXISTS (SELECT * FROM sys.default_constraints WHERE object_id = OBJECT_ID(N'[DF_{objectQualifier}EasyGallerySecurity_SecurityKey]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGallerySecurity]'))
Begin
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[DF_{objectQualifier}EasyGallerySecurity_SecurityKey]') AND type = 'D')
BEGIN
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGallerySecurity] ADD  CONSTRAINT [DF_{objectQualifier}EasyGallerySecurity_SecurityKey]  DEFAULT (N'E') FOR [SecurityKey]
END


End
GO
/****** Object:  ForeignKey [FK_EasyGallerySecurity_EasyGallery]    Script Date: 09/19/2012 13:57:01 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGallerySecurity_{objectQualifier}EasyGallery]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGallerySecurity]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGallerySecurity]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGallerySecurity_{objectQualifier}EasyGallery] FOREIGN KEY([GalleryID])
REFERENCES {databaseOwner}[{objectQualifier}EasyGallery] ([GalleryID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGallerySecurity_{objectQualifier}EasyGallery]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGallerySecurity]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGallerySecurity] CHECK CONSTRAINT [FK_{objectQualifier}EasyGallerySecurity_{objectQualifier}EasyGallery]

if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyGalleryPictures' and column_name = 'JournalId')
BEGIN
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryPictures] ADD JournalId int NULL
END
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Journal') AND type in (N'U'))
BEGIN
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryPictures_{objectQualifier}Journal]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryPictures]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryPictures]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGalleryPictures_{objectQualifier}Journal] FOREIGN KEY([JournalId])
REFERENCES {databaseOwner}{objectQualifier}Journal ([JournalId]) ON DELETE SET NULL
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryPictures_{objectQualifier}Journal]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryPictures]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryPictures] CHECK CONSTRAINT [FK_{objectQualifier}EasyGalleryPictures_{objectQualifier}Journal]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNGalleryJournalBridge]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNGalleryJournalBridge](
	[PortalID] [int] NOT NULL,
	[JournalCategoryID] [int] NOT NULL,
	[Enabled] [bit] NOT NULL,
	[LastCheck] [datetime] NULL,
	[UserGalleriesCategoryID] [int] NOT NULL,
	CONSTRAINT [PK_{objectQualifier}EasyDNNGalleryJournalBridge] PRIMARY KEY CLUSTERED ([PortalID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
/****** Object:  ForeignKey [FK_EasyDNNGalleryJournalBridge_{objectQualifier}Portals]    Script Date: 09/07/2012 14:10:16 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNGalleryJournalBridge_{objectQualifier}Portals]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNGalleryJournalBridge]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNGalleryJournalBridge]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNGalleryJournalBridge_{objectQualifier}Portals] FOREIGN KEY([PortalID])
REFERENCES {databaseOwner}{objectQualifier}Portals ([PortalID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNGalleryJournalBridge_{objectQualifier}Portals]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNGalleryJournalBridge]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNGalleryJournalBridge] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNGalleryJournalBridge_{objectQualifier}Portals]
GO
/****** Object:  ForeignKey [FK_EasyDNNGalleryJournalBridge_EasyGalleryCategory]    Script Date: 09/07/2012 14:10:16 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNGalleryJournalBridge_{objectQualifier}EasyGalleryCategory]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNGalleryJournalBridge]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNGalleryJournalBridge]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNGalleryJournalBridge_{objectQualifier}EasyGalleryCategory] FOREIGN KEY([JournalCategoryID])
REFERENCES {databaseOwner}[{objectQualifier}EasyGalleryCategory] ([CategoryID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNGalleryJournalBridge_{objectQualifier}EasyGalleryCategory]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNGalleryJournalBridge]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNGalleryJournalBridge] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNGalleryJournalBridge_{objectQualifier}EasyGalleryCategory]
 
