SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[EasyDNNNews]') AND type in (N'U'))
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNews]') AND type in (N'U'))
BEGIN
BEGIN
	CREATE TABLE {databaseOwner}[{objectQualifier}EasyGalleryCategory](
		[CategoryID] [int] IDENTITY(1,1) NOT NULL,
		[PortalID] [int] NOT NULL,
		[CategoryName] [varchar](50) NULL,
		[CategoryDescription] [varchar](250) NULL,
		[Position] [int] NULL,
		CONSTRAINT [PK_{objectQualifier}EasyGalleryCategory] PRIMARY KEY CLUSTERED ([CategoryID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
	)

	CREATE TABLE {databaseOwner}[{objectQualifier}EasyGallery](
		[GalleryID] [int] IDENTITY(1,1) NOT NULL,
		[CategoryID] [int] NOT NULL,
		[PortalID] [int] NOT NULL,
		[GalleryName] [varchar](50) NULL,
		[GalleryDescription] [varchar](500) NULL,
		[Position] [int] NULL,
		[DateCreated] [datetime] NULL,
		[DateLastModified] [datetime] NULL,
		CONSTRAINT [PK_{objectQualifier}EasyGallery] PRIMARY KEY CLUSTERED ([GalleryID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
	)

	ALTER TABLE {databaseOwner}[{objectQualifier}EasyGallery]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGallery_{objectQualifier}EasyGalleryCategory] FOREIGN KEY([CategoryID])
	REFERENCES {databaseOwner}[{objectQualifier}EasyGalleryCategory] ([CategoryID]) ON DELETE CASCADE
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyGallery] CHECK CONSTRAINT [FK_{objectQualifier}EasyGallery_{objectQualifier}EasyGalleryCategory]

	CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNThumbs](
		[ModuleID] [int] NOT NULL,
		[GalleryID] [int] NOT NULL,
		[ViewType] [varchar](50) NULL,
		[Width] [int] NOT NULL,
		[Height] [int] NOT NULL,
		[PictureW] [int] NULL,
		[PictureH] [int] NULL,
		[ViewerMode] [varchar](50) NULL,
		[CropVertical] [bit] NULL,
		[SmartCrop] [bit] NULL,
		CONSTRAINT [PK_{objectQualifier}EasyDNNThumbs] PRIMARY KEY CLUSTERED ([ModuleID] ASC,[GalleryID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
	)
	
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNThumbs]  WITH CHECK ADD CONSTRAINT [FK_{objectQualifier}EasyDNNThumbs_{objectQualifier}EasyGallery] FOREIGN KEY([GalleryID])
	REFERENCES {databaseOwner}[{objectQualifier}EasyGallery] ([GalleryID]) ON DELETE CASCADE	
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNThumbs] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNThumbs_{objectQualifier}EasyGallery]
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNThumbs]  WITH CHECK ADD CONSTRAINT [FK_{objectQualifier}EasyDNNThumbs_{objectQualifier}Modules] FOREIGN KEY([ModuleID])
	REFERENCES {databaseOwner}{objectQualifier}Modules ([ModuleID]) ON DELETE CASCADE
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNThumbs] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNThumbs_{objectQualifier}Modules]

	CREATE TABLE {databaseOwner}[{objectQualifier}EasyGalleryPictures](
		[PictureID] [int] IDENTITY(1,1) NOT NULL,
		[PortalID] [int] NULL,
		[ModuleID] [int] NOT NULL,
		[UserID] [int] NULL,
		[GalleryID] [int] NULL,
		[CategoryID] [int] NULL,
		[Title] [varchar](250) NULL,
		[Description] [varchar](4000) NULL,
		[FileName] [varchar](2500) NULL,
		[ThumbUrl] [varchar](250) NULL,
		[Position] [int] NULL,
		[MediaType] [varchar](30) NULL,
		[ShortEmbedUrl] [varchar](250) NULL,
		[ViewerThumb] [varchar](250) NULL,
		[Info] [varchar](250) NULL,
		[FileExtension] [varchar](5) NULL,
		CONSTRAINT [PK_{objectQualifier}EasyGalleryPictures] PRIMARY KEY CLUSTERED ([PictureID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
	)

	ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryPictures] WITH CHECK ADD CONSTRAINT [FK_{objectQualifier}EasyGalleryPictures_{objectQualifier}EasyGallery] FOREIGN KEY([GalleryID])
	REFERENCES {databaseOwner}[{objectQualifier}EasyGallery] ([GalleryID]) ON DELETE CASCADE
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryPictures] CHECK CONSTRAINT [FK_{objectQualifier}EasyGalleryPictures_{objectQualifier}EasyGallery]
END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[EasyDNNNews]') AND type in (N'U'))
Begin
/**** 010000 ****/
 IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryCategory]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGalleryCategory]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGalleryCategory]', N'{objectQualifier}EasyGalleryCategory', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGalleryCategory', N'PK_{objectQualifier}EasyGalleryCategory', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGallery_EasyGalleryCategory', N'FK_{objectQualifier}EasyGallery_{objectQualifier}EasyGalleryCategory', 'OBJECT'
  END
 END
 
 
  IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGallery]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGallery]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGallery]', N'{objectQualifier}EasyGallery', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGallery', N'PK_{objectQualifier}EasyGallery', 'OBJECT'
  END
 END
 
   IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNThumbs]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyDNNThumbs]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyDNNThumbs]', N'{objectQualifier}EasyDNNThumbs', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyDNNThumbs', N'PK_{objectQualifier}EasyDNNThumbs', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyDNNThumbs_EasyGallery', N'FK_{objectQualifier}EasyDNNThumbs_{objectQualifier}EasyGallery', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyDNNThumbs_{objectQualifier}Modules', N'FK_{objectQualifier}EasyDNNThumbs_{objectQualifier}Modules', 'OBJECT'
  END
 END
 
 
   IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryPictures]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGalleryPictures]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGalleryPictures]', N'{objectQualifier}EasyGalleryPictures', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGalleryPictures', N'PK_{objectQualifier}EasyGalleryPictures', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGalleryPictures_EasyGallery', N'FK_{objectQualifier}EasyGalleryPictures_{objectQualifier}EasyGallery', 'OBJECT'
  END
 END
 
   IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryIntegration]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGalleryIntegration]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGalleryIntegration]', N'{objectQualifier}EasyGalleryIntegration', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGalleryIntegration', N'PK_{objectQualifier}EasyGalleryIntegration', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGalleryIntegration_EasyGallery', N'FK_{objectQualifier}EasyGalleryIntegration_{objectQualifier}EasyGallery', 'OBJECT'
  END
 END
/**** 010000 ****/
End

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryIntegration]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyGalleryIntegration](
	[EntryID] [int] IDENTITY(1,1) NOT NULL,
	[PortalID] [int] NULL,
	[ModuleID] [int] NULL,
	[ArticleID] [int] NULL,
	[GalleryID] [int] NULL,
	[GalleryName] [nvarchar](500) NULL,
 CONSTRAINT [PK_{objectQualifier}EasyGalleryIntegration] PRIMARY KEY CLUSTERED 
(
	[EntryID] ASC
)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
/****** Object:  ForeignKey [FK_{objectQualifier}EasyGalleryIntegration_{objectQualifier}EasyGallery]    Script Date: 05/07/2014 14:59:23 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyGalleryIntegration_{objectQualifier}EasyGallery]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryIntegration]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryIntegration]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGalleryIntegration_{objectQualifier}EasyGallery] FOREIGN KEY([GalleryID])
REFERENCES {databaseOwner}[{objectQualifier}EasyGallery] ([GalleryID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyGalleryIntegration_{objectQualifier}EasyGallery]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryIntegration]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryIntegration] CHECK CONSTRAINT [FK_{objectQualifier}EasyGalleryIntegration_{objectQualifier}EasyGallery]
