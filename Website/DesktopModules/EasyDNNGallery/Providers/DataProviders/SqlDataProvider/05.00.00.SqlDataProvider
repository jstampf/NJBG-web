/**** obj qualif checks ****/
if '{objectQualifier}' <> ''
BEGIN

/**** 010000 ****/
BEGIN TRY
 IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryCategory]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGalleryCategory]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGalleryCategory]', N'{objectQualifier}EasyGalleryCategory', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGalleryCategory', N'PK_{objectQualifier}EasyGalleryCategory', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGallery_EasyGalleryCategory', N'FK_{objectQualifier}EasyGallery_{objectQualifier}EasyGalleryCategory', 'OBJECT'
  END
 END
END TRY
BEGIN CATCH
END CATCH

BEGIN TRY
  IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGallery]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGallery]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGallery]', N'{objectQualifier}EasyGallery', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGallery', N'PK_{objectQualifier}EasyGallery', 'OBJECT'
  END
 END
 END TRY
BEGIN CATCH
END CATCH

BEGIN TRY
   IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNThumbs]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyDNNThumbs]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyDNNThumbs]', N'{objectQualifier}EasyDNNThumbs', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyDNNThumbs', N'PK_{objectQualifier}EasyDNNThumbs', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyDNNThumbs_EasyGallery', N'FK_{objectQualifier}EasyDNNThumbs_{objectQualifier}EasyGallery', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyDNNThumbs_{objectQualifier}Modules', N'FK_{objectQualifier}EasyDNNThumbs_{objectQualifier}Modules', 'OBJECT'
  END
 END
 END TRY
BEGIN CATCH
END CATCH
 
BEGIN TRY
   IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryPictures]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGalleryPictures]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGalleryPictures]', N'{objectQualifier}EasyGalleryPictures', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGalleryPictures', N'PK_{objectQualifier}EasyGalleryPictures', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGalleryPictures_EasyGallery', N'FK_{objectQualifier}EasyGalleryPictures_{objectQualifier}EasyGallery', 'OBJECT'
  END
 END
 END TRY
BEGIN CATCH
END CATCH

BEGIN TRY
   IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryIntegration]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGalleryIntegration]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGalleryIntegration]', N'{objectQualifier}EasyGalleryIntegration', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGalleryIntegration', N'PK_{objectQualifier}EasyGalleryIntegration', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGalleryIntegration_EasyGallery', N'FK_{objectQualifier}EasyGalleryIntegration_{objectQualifier}EasyGallery', 'OBJECT'
  END
 END
 END TRY
BEGIN CATCH
END CATCH
/**** 010000 ****/

/**** 010600 ****/
BEGIN TRY
 IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGallerySettings]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGallerySettings]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGallerySettings]', N'{objectQualifier}EasyGallerySettings', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGallerySettings', N'PK_{objectQualifier}EasyGallerySettings', 'OBJECT'
  END
 END
END TRY
BEGIN CATCH
END CATCH
/**** 010600 ****/


/**** 020200 ****/
BEGIN TRY
 IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNMediaLocalization]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyDNNMediaLocalization]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyDNNMediaLocalization]', N'{objectQualifier}EasyDNNMediaLocalization', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyDNNMediaLocalization', N'PK_{objectQualifier}EasyDNNMediaLocalization', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyDNNMediaLocalization_EasyGalleryPictures', N'FK_{objectQualifier}EasyDNNMediaLocalization_{objectQualifier}EasyGalleryPictures', 'OBJECT'
  END
 END
 END TRY
BEGIN CATCH
END CATCH

BEGIN TRY
  IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNGalleryLocalization]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyDNNGalleryLocalization]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyDNNGalleryLocalization]', N'{objectQualifier}EasyDNNGalleryLocalization', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyDNNGalleryLocalization', N'PK_{objectQualifier}EasyDNNGalleryLocalization', 'OBJECT'
    EXECUTE sp_rename N'FK_EasyDNNGalleryLocalization_EasyGallery', N'FK_{objectQualifier}EasyDNNGalleryLocalization_{objectQualifier}EasyGallery', 'OBJECT'
  END
 END
 END TRY
BEGIN CATCH
END CATCH

BEGIN TRY
   IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNCategoryLocalization]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyDNNCategoryLocalization]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyDNNCategoryLocalization]', N'{objectQualifier}EasyDNNCategoryLocalization', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyDNNCategoryLocalization', N'PK_{objectQualifier}EasyDNNCategoryLocalization', 'OBJECT'
    EXECUTE sp_rename N'FK_EasyDNNCategoryLocalization_EasyGalleryCategory', N'FK_{objectQualifier}EasyDNNCategoryLocalization_{objectQualifier}EasyGalleryCategory', 'OBJECT'
  END
 END
 END TRY
BEGIN CATCH
END CATCH
 
/**** 020200 ****/

/**** 020400 ****/

BEGIN TRY
IF EXISTS (SELECT * FROM sys.key_constraints WHERE type = 'PK' AND parent_object_id = OBJECT_ID('{databaseOwner}[{objectQualifier}EasyDNNMediaLocalization]') AND Name = 'PK_EasyDNNMediaLocalization')
BEGIN
 EXECUTE sp_rename N'PK_EasyDNNMediaLocalization', N'PK_{objectQualifier}EasyDNNMediaLocalization', 'OBJECT'
END

IF EXISTS (SELECT * FROM sys.key_constraints WHERE type = 'PK' AND parent_object_id = OBJECT_ID('{databaseOwner}[{objectQualifier}EasyDNNGalleryLocalization]') AND Name = 'PK_EasyDNNGalleryLocalization')
BEGIN
 EXECUTE sp_rename N'PK_EasyDNNGalleryLocalization', N'PK_{objectQualifier}EasyDNNGalleryLocalization', 'OBJECT'
END

IF EXISTS (SELECT * FROM sys.key_constraints WHERE type = 'PK' AND parent_object_id = OBJECT_ID('{databaseOwner}[{objectQualifier}EasyDNNCategoryLocalization]') AND Name = 'PK_EasyDNNCategoryLocalization')
BEGIN
 EXECUTE sp_rename N'PK_EasyDNNCategoryLocalization', N'PK_{objectQualifier}EasyDNNCategoryLocalization', 'OBJECT'
END
 END TRY
BEGIN CATCH
END CATCH
/**** 020400 ****/


/**** 030000 ****/
BEGIN TRY
 IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryUpload]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGalleryUpload]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGalleryUpload]', N'{objectQualifier}EasyGalleryUpload', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGalleryUpload', N'PK_{objectQualifier}EasyGalleryUpload', 'OBJECT'
  END
 END
  END TRY
BEGIN CATCH
END CATCH
/**** 030000 ****/

/**** 040100 ****/
BEGIN TRY
 IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNRotatorGalleryBridge]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.key_constraints WHERE type = 'FK' AND parent_object_id = OBJECT_ID('{databaseOwner}[{objectQualifier}EasyDNNRotatorGalleryBridge]') AND Name = 'FK_EasyDNNRotatorGallerySettings_EasyGallery')
  BEGIN
   EXECUTE sp_rename N'FK_EasyDNNRotatorGallerySettings_EasyGallery', N'FK_{objectQualifier}EasyDNNRotatorGallerySettings_{objectQualifier}EasyGallery', 'OBJECT'
  END
 END
  END TRY
BEGIN CATCH
END CATCH
/**** 040100 ****/

/**** 040600 ****/
BEGIN TRY
 IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryInfo]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGalleryInfo]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGalleryInfo]', N'{objectQualifier}EasyGalleryInfo', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGalleryInfoPrimary', N'PK_{objectQualifier}EasyGalleryInfoPrimary', 'OBJECT'
  END
 END
   END TRY
BEGIN CATCH
END CATCH
/**** 040600 ****/

/**** 040700 ****/
BEGIN TRY
 IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryPortalSharing]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGalleryPortalSharing]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGalleryPortalSharing]', N'{objectQualifier}EasyGalleryPortalSharing', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGalleryPortalSharing', N'PK_{objectQualifier}EasyGalleryPortalSharing', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGalleryPortalSharing_Portals1', N'FK_{objectQualifier}EasyGalleryPortalSharing_{objectQualifier}Portals1', 'OBJECT'
  END
 END
    END TRY
BEGIN CATCH
END CATCH
/**** 040700 ****/

/**** 040805 ****/
BEGIN TRY
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryModuleCategory]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGalleryModuleCategory]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGalleryModuleCategory]', N'{objectQualifier}EasyGalleryModuleCategory', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGalleryModuleCategory', N'PK_{objectQualifier}EasyGalleryModuleCategory', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGalleryModuleCategory_EasyGalleryCategory', N'FK_{objectQualifier}EasyGalleryModuleCategory_{objectQualifier}EasyGalleryCategory', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGalleryModuleCategory_Modules', N'FK_{objectQualifier}EasyGalleryModuleCategory_{objectQualifier}Modules', 'OBJECT'
  END
 END 
    END TRY
BEGIN CATCH
END CATCH

BEGIN TRY
  IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryCreatedThumbs]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGalleryCreatedThumbs]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGalleryCreatedThumbs]', N'{objectQualifier}EasyGalleryCreatedThumbs', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGalleryCreatedThumbs', N'PK_{objectQualifier}EasyGalleryCreatedThumbs', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGalleryCreatedThumbs_EasyGalleryPictures', N'FK_{objectQualifier}EasyGalleryCreatedThumbs_{objectQualifier}EasyGalleryPictures', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGalleryCreatedThumbs_Modules', N'FK_{objectQualifier}EasyGalleryCreatedThumbs_{objectQualifier}Modules', 'OBJECT'
  END
 END 
    END TRY
BEGIN CATCH
END CATCH

BEGIN TRY
   IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryModuleSettings]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGalleryModuleSettings]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGalleryModuleSettings]', N'{objectQualifier}EasyGalleryModuleSettings', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGalleryModuleSettings', N'PK_{objectQualifier}EasyGalleryModuleSettings', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGalleryModuleSettings_Modules', N'FK_{objectQualifier}EasyGalleryModuleSettings_{objectQualifier}Modules', 'OBJECT'
  END
 END 
    END TRY
BEGIN CATCH
END CATCH

BEGIN TRY
    IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGallerySecurity]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGallerySecurity]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGallerySecurity]', N'{objectQualifier}EasyGallerySecurity', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGallerySecurity', N'PK_{objectQualifier}EasyGallerySecurity', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGallerySecurity_EasyGallery', N'FK_{objectQualifier}EasyGallerySecurity_{objectQualifier}EasyGallery', 'OBJECT'
  END
 END
    END TRY
BEGIN CATCH
END CATCH

BEGIN TRY
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[DF_EasyGallerySecurity_SecurityKey]') AND type = 'D')
	BEGIN
		EXECUTE sp_rename N'DF_EasyGallerySecurity_SecurityKey', N'DF_{objectQualifier}EasyGallerySecurity_{objectQualifier}SecurityKey', 'OBJECT'
	END

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_EasyGalleryPictures_{objectQualifier}Journal]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryPictures]'))
	BEGIN
		EXECUTE sp_rename N'[FK_EasyGalleryPictures_{objectQualifier}Journal]', N'FK_{objectQualifier}EasyGalleryPictures_{objectQualifier}Journal', 'OBJECT'
	END
    END TRY
BEGIN CATCH
END CATCH


BEGIN TRY
    IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNGalleryJournalBridge]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyDNNGalleryJournalBridge]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyDNNGalleryJournalBridge]', N'{objectQualifier}EasyDNNGalleryJournalBridge', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyDNNGalleryJournalBridge', N'PK_{objectQualifier}EasyDNNGalleryJournalBridge', 'OBJECT'
   EXECUTE sp_rename N'[FK_EasyDNNGalleryJournalBridge_{objectQualifier}Portals]', N'FK_{objectQualifier}EasyDNNGalleryJournalBridge_{objectQualifier}Portals', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyDNNGalleryJournalBridge_EasyGalleryCategory', N'FK_{objectQualifier}EasyDNNGalleryJournalBridge_{objectQualifier}EasyGalleryCategory', 'OBJECT'
  END
 END 
     END TRY
BEGIN CATCH
END CATCH

/**** 040805 ****/

/**** 040806 ****/

BEGIN TRY
 IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGallerySocialGroups]') AND type in (N'U'))
 BEGIN
  IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[EasyGallerySocialGroups]') AND type in (N'U'))
  BEGIN
   EXECUTE sp_rename N'{databaseOwner}[EasyGallerySocialGroups]', N'{objectQualifier}EasyGallerySocialGroups', 'OBJECT'
   EXECUTE sp_rename N'PK_EasyGallerySocialGroups', N'PK_{objectQualifier}EasyGallerySocialGroups', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGallerySocialGroups_EasyGallery', N'FK_{objectQualifier}EasyGallerySocialGroups_{objectQualifier}EasyGallery', 'OBJECT'
   EXECUTE sp_rename N'FK_EasyGallerySocialGroups_Roles', N'FK_{objectQualifier}EasyGallerySocialGroups_{objectQualifier}Roles', 'OBJECT'
  END
 END
      END TRY
BEGIN CATCH
END CATCH
/**** 040806 ****/

END
GO
/**** obj qualif checks ****/

/****** Object:  Table {databaseOwner}[{objectQualifier}EasyGalleryComments]    Script Date: 12/07/2012 12:27:18 ******/
/****** Object:  ForeignKey [FK_EasyGalleryComments_EasyGalleryPictures]    Script Date: 12/07/2012 12:27:18 ******/
/****** Object:  ForeignKey [FK_EasyGalleryComments_Portals]    Script Date: 12/07/2012 12:27:18 ******/
/****** Object:  ForeignKey [FK_EasyGalleryComments_Users]    Script Date: 01/11/2013 12:59:39 ******/
/****** Object:  Table {databaseOwner}[{objectQualifier}EasyGalleryUserPermissions]    Script Date: 12/10/2012 13:31:47 ******/
/****** Object:  Table {databaseOwner}[{objectQualifier}EasyGalleryRolePermissions]    Script Date: 12/10/2012 13:31:47 ******/
/****** Object:  ForeignKey [FK_EasyGalleryRolePermissions_Modules]    Script Date: 12/10/2012 13:31:47 ******/
/****** Object:  ForeignKey [FK_EasyGalleryRolePermissions_Roles]    Script Date: 12/10/2012 13:31:47 ******/
/****** Object:  ForeignKey [FK_EasyGalleryUserPermissions_Modules]    Script Date: 12/10/2012 13:31:47 ******/
/****** Object:  ForeignKey [FK_EasyGalleryUserPermissions_Users]    Script Date: 12/10/2012 13:31:47 ******/
/****** Object:  Table [dbo].[EasyDNNGalleryUserRateing]    Script Date: 12/10/2012 14:04:31 ******/
/****** Object:  ForeignKey [FK_EasyDNNGalleryUserRateing_EasyGalleryPictures]    Script Date: 12/10/2012 14:04:31 ******/
/****** Object:  ForeignKey [FK_EasyDNNGalleryUserRateing_Users]    Script Date: 12/10/2012 14:04:31 ******/
/****** Object:  Table {databaseOwner}[{objectQualifier}EasyGallerySmbSettings]    Script Date: 12/11/2012 15:46:02 ******/
/****** Object:  ForeignKey [FK_EasyGallerySmbSettings_Modules]    Script Date: 12/11/2012 15:46:02 ******/

/****** Object:  UserDefinedFunction [dbo].[EDSGallery_StringListToTable]    Script Date: 12/21/2012 11:31:45 ******/
/****** Object:  StoredProcedure [dbo].[EasyDNNGalleryPermissions]    Script Date: 12/21/2012 11:04:19 ******/
/****** Object:  StoredProcedure [dbo].[EasyDNNGalleryListByGroupID]    Script Date: 12/27/2012 08:58:47 ******/
/****** Object:  StoredProcedure [dbo].[EasyDNNGalleryListByCurrentUser]    Script Date: 12/27/2012 08:58:47 ******/
/****** Object:  StoredProcedure [dbo].[EasyDNNGalleryCountListByGroupID]    Script Date: 12/27/2012 08:58:47 ******/
/****** Object:  StoredProcedure [dbo].[EasyDNNGalleryCountListByCurrentUser]    Script Date: 12/27/2012 08:58:47 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryComments]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyGalleryComments](
	[CommentID] [int] IDENTITY(1,1) NOT NULL,
	[PortalID] [int] NOT NULL,
	[PictureID] [int] NOT NULL,
	[UserID] [int] NULL,
	[IsAuthorRegistrated] [bit] NOT NULL,
	[AuthorIP] [nvarchar](50) NOT NULL,
	[AuthorName] [nvarchar](100) NOT NULL,
	[AuthorEmail] [nvarchar](250) NOT NULL,
	[RawComment] [nvarchar](2000) NOT NULL,
	[FormatedComment] [nvarchar](2000) NOT NULL,
	[DateAdded] [datetime] NOT NULL,
	[GoodVotes] [int] NOT NULL,
	[BadVotes] [int] NOT NULL,
	[Approved] [bit] NOT NULL,
	CONSTRAINT [PK_{objectQualifier}EasyGalleryComments] PRIMARY KEY CLUSTERED ([CommentID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryComments_{objectQualifier}EasyGalleryPictures]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryComments]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryComments]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGalleryComments_{objectQualifier}EasyGalleryPictures] FOREIGN KEY([PictureID])
REFERENCES {databaseOwner}[{objectQualifier}EasyGalleryPictures] ([PictureID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryComments_{objectQualifier}EasyGalleryPictures]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryComments]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryComments] CHECK CONSTRAINT [FK_{objectQualifier}EasyGalleryComments_{objectQualifier}EasyGalleryPictures]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryComments_{objectQualifier}Portals]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryComments]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryComments]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGalleryComments_{objectQualifier}Portals] FOREIGN KEY([PortalID])
REFERENCES {databaseOwner}{objectQualifier}Portals ([PortalID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryComments_{objectQualifier}Portals]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryComments]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryComments] CHECK CONSTRAINT [FK_{objectQualifier}EasyGalleryComments_{objectQualifier}Portals]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryComments_{objectQualifier}Users]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryComments]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryComments]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGalleryComments_{objectQualifier}Users] FOREIGN KEY([UserID])
REFERENCES {databaseOwner}{objectQualifier}Users ([UserID]) ON DELETE SET NULL
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryComments_{objectQualifier}Users]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryComments]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryComments] CHECK CONSTRAINT [FK_{objectQualifier}EasyGalleryComments_{objectQualifier}Users]
GO

if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyGalleryPictures' and column_name = 'RatingCount')
BEGIN
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryPictures] ADD RatingCount int NOT NULL DEFAULT(0)
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyGalleryPictures' and column_name = 'RatingValue')
BEGIN
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryPictures] ADD RatingValue decimal(18,4) NOT NULL DEFAULT(0)
END

/*** Za dozbvole ***/
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryUserPermissions]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyGalleryUserPermissions](
	[UserID] [int] NOT NULL,
	[ModuleID] [int] NOT NULL,
	[ShowComments] [bit] NOT NULL,
	[AllowToComment] [bit] NOT NULL,
	[CommentEditing] [bit] NOT NULL,
	[CommentDeleting] [bit] NOT NULL,
	[ShowRating] [bit] NOT NULL,
	[AllowToRate] [bit] NOT NULL,
	[AllowToDownload] [bit] NOT NULL,
	CONSTRAINT [PK_{objectQualifier}EasyGalleryUserPermissions] PRIMARY KEY CLUSTERED ([UserID] ASC, [ModuleID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryRolePermissions]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyGalleryRolePermissions](
	[RolePermissionID] [int] IDENTITY(1,1) NOT NULL,
	[RoleID] [int] NULL,
	[ModuleID] [int] NOT NULL,
	[ShowComments] [bit] NOT NULL,
	[AllowToComment] [bit] NOT NULL,
	[CommentEditing] [bit] NOT NULL,
	[CommentDeleting] [bit] NOT NULL,
	[ShowRating] [bit] NOT NULL,
	[AllowToRate] [bit] NOT NULL,
	[AllowToDownload] [bit] NOT NULL,
	CONSTRAINT [PK_{objectQualifier}EasyGalleryRolePermissions] PRIMARY KEY CLUSTERED ([RolePermissionID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF))
END
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryRolePermissions_{objectQualifier}Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryRolePermissions]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryRolePermissions]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGalleryRolePermissions_{objectQualifier}Modules] FOREIGN KEY([ModuleID])
REFERENCES {databaseOwner}{objectQualifier}Modules ([ModuleID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryRolePermissions_{objectQualifier}Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryRolePermissions]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryRolePermissions] CHECK CONSTRAINT [FK_{objectQualifier}EasyGalleryRolePermissions_{objectQualifier}Modules]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryRolePermissions_{objectQualifier}Roles]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryRolePermissions]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryRolePermissions]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGalleryRolePermissions_{objectQualifier}Roles] FOREIGN KEY([RoleID])
REFERENCES {databaseOwner}{objectQualifier}Roles ([RoleID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryRolePermissions_{objectQualifier}Roles]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryRolePermissions]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryRolePermissions] CHECK CONSTRAINT [FK_{objectQualifier}EasyGalleryRolePermissions_{objectQualifier}Roles]
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryUserPermissions_{objectQualifier}Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryUserPermissions]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryUserPermissions]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGalleryUserPermissions_{objectQualifier}Modules] FOREIGN KEY([ModuleID])
REFERENCES {databaseOwner}{objectQualifier}Modules ([ModuleID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_EasyGalleryUserPermissions_Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryUserPermissions]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryUserPermissions] CHECK CONSTRAINT [FK_EasyGalleryUserPermissions_Modules]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryUserPermissions_{objectQualifier}Users]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryUserPermissions]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryUserPermissions]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGalleryUserPermissions_{objectQualifier}Users] FOREIGN KEY([UserID])
REFERENCES {databaseOwner}{objectQualifier}Users ([UserID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryUserPermissions_{objectQualifier}Users]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryUserPermissions]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryUserPermissions] CHECK CONSTRAINT [FK_{objectQualifier}EasyGalleryUserPermissions_{objectQualifier}Users]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryUserRating]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyGalleryUserRating](
	[PictureID] [int] NOT NULL,
	[UserID] [int] NOT NULL,
	[Value] [decimal](18, 4) NOT NULL,
	[RateDate] [datetime] NOT NULL,
	CONSTRAINT [PK_{objectQualifier}EasyGalleryUserRating] PRIMARY KEY CLUSTERED ([PictureID] ASC,[UserID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryUserRating_{objectQualifier}EasyGalleryPictures]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryUserRating]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryUserRating]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGalleryUserRating_{objectQualifier}EasyGalleryPictures] FOREIGN KEY([PictureID])
REFERENCES {databaseOwner}[{objectQualifier}EasyGalleryPictures] ([PictureID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_EasyGalleryUserRating_EasyGalleryPictures]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryUserRating]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryUserRating] CHECK CONSTRAINT [FK_EasyGalleryUserRating_EasyGalleryPictures]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyGalleryUserRating_{objectQualifier}Users]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryUserRating]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryUserRating]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGalleryUserRating_{objectQualifier}Users] FOREIGN KEY([UserID])
REFERENCES {databaseOwner}{objectQualifier}Users ([UserID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_EasyGalleryUserRating_Users]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryUserRating]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryUserRating] CHECK CONSTRAINT [FK_{objectQualifier}EasyGalleryUserRating_{objectQualifier}Users]
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGallerySmbSettings]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyGallerySmbSettings](
	[ModuleID] [int] NOT NULL,
	[ShowDetailsPanel] [bit] NOT NULL,
	[ShowSocialSharing] [bit] NOT NULL,
	[ShowFacbook] [bit] NOT NULL,
	[ShowTwitter] [bit] NOT NULL,
	[ShowGooglePlus] [bit] NOT NULL,
	[ShowPinterst] [bit] NOT NULL,
	[ShowLinkedin] [bit] NOT NULL,
	[AvatarProvider] [int] NOT NULL,
	[ShowTitle] [bit] NOT NULL,
	[ShowDescription] [bit] NOT NULL,
	[ShowThumbnails] [bit] NOT NULL,
	[ShowUploaderInfo] [bit] NOT NULL,
	[ShowEmailLink] [bit] NOT NULL,
	[PostCommentToJournal] [bit] NOT NULL,
	CONSTRAINT [PK_{objectQualifier}EasyGallerySmbSettings] PRIMARY KEY CLUSTERED ( [ModuleID] ASC )WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF))
END
GO

IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_{objectQualifier}EasyGallerySmbSettings_{objectQualifier}Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGallerySmbSettings]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGallerySmbSettings]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGallerySmbSettings_{objectQualifier}Modules] FOREIGN KEY([ModuleID])
REFERENCES {databaseOwner}{objectQualifier}Modules ([ModuleID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_{objectQualifier}EasyGallerySmbSettings_{objectQualifier}Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGallerySmbSettings]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGallerySmbSettings] CHECK CONSTRAINT [FK_{objectQualifier}EasyGallerySmbSettings_{objectQualifier}Modules]

