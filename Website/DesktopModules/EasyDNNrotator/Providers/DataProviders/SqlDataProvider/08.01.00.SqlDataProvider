IF NOT EXISTS (SELECT UpdateVersion FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorUpdate] WHERE UpdateVersion = '08.00.01')
BEGIN
	INSERT INTO {databaseOwner}[{objectQualifier}EasyDNNRotatorUpdate]([UpdateVersion],[Finished],[InstallType]) VALUES(N'08.00.01',0,'DNN')
END
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNrotatorNewsPartitionGetEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNrotatorNewsPartitionGetEvents]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNrotatorNewsPartitionGetArticles]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNrotatorNewsPartitionGetArticles]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNrotatorNewsPartitionGetAllContent]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNrotatorNewsPartitionGetAllContent]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNRotatorNewsPartitionComparerEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsPartitionComparerEvents]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNRotatorNewsPartitionComparerArticles]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsPartitionComparerArticles]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNRotatorNewsPartitionComparerAllContent]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsPartitionComparerAllContent]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNrotatorNewsGetEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNrotatorNewsGetEvents]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNrotatorNewsGetArticles]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNrotatorNewsGetArticles]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNrotatorNewsGetAllContent]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNrotatorNewsGetAllContent]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNRotatorNewsComparerEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsComparerEvents]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNRotatorNewsComparerArticles]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsComparerArticles]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNRotatorNewsComparerAllContent]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsComparerAllContent]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNRotatorNewsComparerAllContent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsComparerAllContent] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsComparerAllContent]
	@PortalID INT,
	@UserID INT,
	@RotatorModuleID INT,
	@RowCount INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@OrderBySecondColumnName NVARCHAR(30) = NULL,
	@OrderBySecondDirection NVARCHAR(4) = NULL,
	@OrderBySecondCustomFieldID INT = NULL,
	@OrderByThirdColumnName NVARCHAR(30) = NULL,
	@OrderByThirdDirection NVARCHAR(4) = NULL,
	@OrderByThirdCustomFieldID INT = NULL,
	@Featured BIT = 0,
	@OnlyWithImage BIT = 1,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@ShowAllAuthors BIT = 1,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 0,
	@PermissionSettingsSource TINYINT = 0,
	@PermissionsModuleID INT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@HideUnlocalizedItems BIT = 0,
	@OnlyOneCategory INT = 0,
	@StartDate DATETIME = NULL,
	@DateRangeType TINYINT = 0,
	@FilterByTagsArticleID INT = 0,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(500);
SET @paramList = N'
	 @PortalID INT
	,@UserID INT
	,@RotatorModuleID INT
	,@LocaleCode NVARCHAR(20)
	,@RowCount INT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@PermissionsModuleID INT
	,@OnlyOneCategory INT
	,@StartDate DATETIME
	,@FilterByTagsArticleID INT
	,@OrderByCustomFieldID INT
	,@OrderBySecondCustomFieldID INT
	,@OrderByThirdCustomFieldID INT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource TINYINT
	,@IsPortalSharing BIT'

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @UserViewCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT PRIMARY KEY);
DECLARE @FiltredByCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @UserInRoles TABLE (RoleID INT PRIMARY KEY);

INSERT INTO @UserInRoles SELECT [RoleID] FROM {databaseOwner}[{objectQualifier}EDS_UserInRoles](@UserID,@PortalID,@CurrentDate); '

DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @RotatorModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_NewsViewCategoriesMultiPortal](@RotatorModuleID,@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate) '
ELSE
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_RotatorNewsViewCategories](@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate); '

IF @OnlyOneCategory <> 0 -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @OnlyOneCategory;
	INSERT INTO @FiltredByCategories SELECT @OnlyOneCategory; '
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + N'; '
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral ON ral.CategoryID = cl.CategoryID AND ral.ModuleID = @RotatorModuleID
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID)) AND ' + @sqlSharingPortalAll + N'
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.' + @sqlSharingPortalAll + N'
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; '
	END
END

IF @ShowAllAuthors = 0
SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @RotatorModuleID
	UNION 
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @RotatorModuleID; '

IF @FilterByTagsArticleID <> 0
SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempTagIDList TABLE (TagID INT PRIMARY KEY);
	INSERT INTO @TempTagIDList
	SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @FilterByTagsArticleID; '

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByCustomFieldID));

	IF @OrderByColumnName IS NULL
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
		SET @OrderBySecondColumnName = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

IF @OrderBySecondCustomFieldID IS NOT NULL
BEGIN
	SET @OrderBySecondColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderBySecondCustomFieldID));

	IF @OrderBySecondColumnName IS NULL
	BEGIN
		SET @OrderBySecondCustomFieldID = NULL;
		SET @OrderBySecondColumnName = NULL;
	END
END

IF @OrderByThirdCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByThirdColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByThirdCustomFieldID));

	IF @OrderByThirdColumnName IS NULL
	BEGIN
		SET @OrderByThirdCustomFieldID = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID], n.[PortalID], n.[ArticleImage], rnb.[ArticleImage] AS RotatorImage, CAST(CASE WHEN (rnb.ArticleID IS NULL OR (rnb.Flag <> 3 AND rnb.Flag <> 5)) THEN 1 ELSE 0 END AS BIT) AS CreateImage
FROM (
	SELECT n.[ArticleID],n.[PortalID],n.[ArticleImage],ROW_NUMBER() OVER (ORDER BY '
				
		IF @OrderByCustomFieldID IS NULL
			IF @OrderByColumnName <> N'StartDate'
				SET @sqlcommand = @sqlcommand + N'n.'+ @OrderByColumnName + N' ' + @OrderByDirection
			ELSE
				SET @sqlcommand = @sqlcommand + N'(CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END) ' + @OrderByDirection
		ELSE
		BEGIN
			IF @OrderByDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'	
			SET @sqlcommand = @sqlcommand + N'fv.'+ @OrderByColumnName + N' ' + @OrderByDirection;
		END
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondCustomFieldID IS NULL
				IF @OrderBySecondColumnName <> N'StartDate'
					SET @sqlcommand = @sqlcommand + N',n.'+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
				ELSE
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END) ' + @OrderBySecondDirection
			ELSE
			BEGIN
				IF @OrderBySecondDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'	
				SET @sqlcommand = @sqlcommand + N',fv.'+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection;
			END
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN		
			IF @OrderByThirdCustomFieldID IS NULL
				IF @OrderByThirdColumnName <> N'StartDate'
					SET @sqlcommand = @sqlcommand + N',n.'+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
				ELSE
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END) ' + @OrderByThirdDirection
			ELSE
			BEGIN
				IF @OrderByThirdDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
				SET @sqlcommand = @sqlcommand + N',fv.'+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection;
			END
		END
			
		SET @sqlcommand = @sqlcommand + N') AS Kulike '
		
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n '
				
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			DECLARE @CheckOrStatement BIT;
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON n.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
		
		SET @sqlcommand = @sqlcommand + N'
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
		IF @DateRangeType = 2
			SET @sqlcommand = @sqlcommand + N'
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			OR (nerd.RecurringID IN (SELECT TOP(ned.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
		ELSE IF @DateRangeType = 0
			SET @sqlcommand = @sqlcommand + N'
			(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
		ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
		SET @sqlcommand = @sqlcommand + N'
			WHERE n.ArticleID IN (
				SELECT ArticleID FROM (
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON na.ArticleID = nc.ArticleID AND nc.CategoryID IN (SELECT CategoryID FROM @UserViewCategoriesWithFilter) '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	 '
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					SET @sqlcommand = @sqlcommand + N'
					WHERE ' + @sqlSharingPortal + N'
						AND na.Approved = 1
						AND na.Active = 1
						AND na.EventArticle = 0
						AND na.HasPermissions = 0
						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
						IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
						IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
						IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDNNUserID '
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
					SET @sqlcommand = @sqlcommand + N'
					UNION ALL
					SELECT ArticleID FROM (
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @FiltredByCategories) '
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
							IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	 '
							IF @FilterByDNNGroupID <> 0 
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							ELSE IF @FilterByDNNUserID <> 0
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						SET @sqlcommand = @sqlcommand + N'
						WHERE ' + @sqlSharingPortal + N'
							AND na.Approved = 1
							AND na.Active = 1
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
							IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
							IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
							IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
							IF @AdminOrSuperUser = 0
								BEGIN
									SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
									IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
									ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
								END
							IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDNNUserID '
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
						SET @sqlcommand = @sqlcommand + N'
						UNION
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @FiltredByCategories) '
							IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
							IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	 '
							IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
							ELSE IF @FilterByDNNUserID <> 0
								SET @sqlcommand = @sqlcommand + N'
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						SET @sqlcommand = @sqlcommand + N'
						WHERE ' + @sqlSharingPortal + N'
							AND na.Approved = 1
							AND na.Active = 1
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
							IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
							IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
							IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
							IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles) '
							IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDNNUserID '
							ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
					SET @sqlcommand = @sqlcommand + N'
					) AS HasPermissions
				) AS Articles
				UNION ALL
				SELECT [ArticleID] FROM (
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @UserViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	 '
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					SET @sqlcommand = @sqlcommand + N'
					WHERE na.HasPermissions = 0
						AND ' + @sqlSharingPortal + N'
						AND na.Approved = 1
						AND na.Active = 1
						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
						IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
						IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
						IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
						IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @sqlcommand = @sqlcommand + N'
					UNION ALL
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @UserViewCategoriesWithFilter) '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	 '
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						SET @sqlcommand = @sqlcommand + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @sqlcommand = @sqlcommand + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 0
							SET @sqlcommand = @sqlcommand + N'	
							(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
			
						SET @sqlcommand = @sqlcommand + N'
					WHERE na.HasPermissions = 0
						AND ' + @sqlSharingPortal + N'
						AND na.Approved = 1
						AND na.Active = 1
						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
						IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
						IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
						IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
					SET @sqlcommand = @sqlcommand + N'
				) AS HasPermissionsFalse
				UNION ALL
				SELECT [ArticleID] FROM (
					SELECT [ArticleID] FROM (
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 0
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	 '
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						SET @sqlcommand = @sqlcommand + N'
						WHERE na.HasPermissions = 1
							AND ' + @sqlSharingPortal + N'
							AND na.Approved = 1
							AND na.Active = 1
							AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
							IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
							IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
							IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
							IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
							IF @AdminOrSuperUser = 0
							BEGIN
								SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
								IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
								ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
							END
							IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
						SET @sqlcommand = @sqlcommand + N'
						UNION
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	 '
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						SET @sqlcommand = @sqlcommand + N'
						WHERE na.HasPermissions = 1
							AND ' + @sqlSharingPortal + N'
							AND na.Approved = 1
							AND na.Active = 1
							AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
							IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
							IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
							IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
							IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
							IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles) '
							IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @sqlcommand = @sqlcommand + N'
					) AS NotRecurring
					UNION ALL
					SELECT [ArticleID] FROM (
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	 '
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
							IF @DateRangeType = 2
								SET @sqlcommand = @sqlcommand + N'
								((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
							ELSE IF @DateRangeType = 0
								SET @sqlcommand = @sqlcommand + N'	
								(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
							ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
			
						SET @sqlcommand = @sqlcommand + N'
						WHERE na.HasPermissions = 1
							AND ' + @sqlSharingPortal + N'
							AND na.Approved = 1
							AND na.Active = 1
							AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
							IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
							IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
							IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
							IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '

							IF @AdminOrSuperUser = 0
							BEGIN
								SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
								IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
								ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
							END
							SET @sqlcommand = @sqlcommand + N'
						UNION
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	 '
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
							IF @DateRangeType = 2
								SET @sqlcommand = @sqlcommand + N'
								((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
							ELSE IF @DateRangeType = 0
							SET @sqlcommand = @sqlcommand + N'
								(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
							ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
			
							SET @sqlcommand = @sqlcommand + N'
						WHERE na.HasPermissions = 1
							AND ' + @sqlSharingPortal + N'
							AND na.Approved = 1
							AND na.Active = 1
							AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
							IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
							IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
							IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
							IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
							IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles) '
					SET @sqlcommand = @sqlcommand + N'
					) AS Recurring
				) AS HasPermissionsTrue
			)
	) AS n
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] rnb ON n.ArticleID = rnb.ArticleID AND RotatorID=@RotatorModuleID AND (rnb.Flag = 3 OR rnb.Flag = 5)
	WHERE n.Kulike BETWEEN 1 AND @RowCount '

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@RotatorModuleID = @RotatorModuleID
    ,@LocaleCode = @LocaleCode
	,@RowCount = @RowCount
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@PermissionsModuleID = @PermissionsModuleID
	,@OnlyOneCategory = @OnlyOneCategory
	,@StartDate = @StartDate
	,@FilterByTagsArticleID = @FilterByTagsArticleID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@OrderBySecondCustomFieldID = @OrderBySecondCustomFieldID
	,@OrderByThirdCustomFieldID = @OrderByThirdCustomFieldID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNRotatorNewsComparerArticles]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsComparerArticles] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsComparerArticles]
	@PortalID INT,
	@UserID INT,
	@RotatorModuleID INT,
	@RowCount INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@OrderBySecondColumnName NVARCHAR(30) = NULL,
	@OrderBySecondDirection NVARCHAR(4) = NULL,
	@OrderBySecondCustomFieldID INT = NULL,
	@OrderByThirdColumnName NVARCHAR(30) = NULL,
	@OrderByThirdDirection NVARCHAR(4) = NULL,
	@OrderByThirdCustomFieldID INT = NULL,
	@Featured BIT = 0,
	@OnlyWithImage BIT = 1,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@ShowAllAuthors BIT = 1,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 0,
	@PermissionSettingsSource TINYINT = 0,
	@PermissionsModuleID INT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@HideUnlocalizedItems BIT = 0,
	@OnlyOneCategory INT = 0,
	@FilterByTagsArticleID INT = 0,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(500);
SET @paramList = N'
	 @PortalID INT
	,@UserID INT
	,@RotatorModuleID INT
	,@LocaleCode NVARCHAR(20)
	,@RowCount INT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@PermissionsModuleID INT
	,@OnlyOneCategory INT
	,@FilterByTagsArticleID INT
	,@OrderByCustomFieldID INT
	,@OrderBySecondCustomFieldID INT
	,@OrderByThirdCustomFieldID INT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource TINYINT
	,@IsPortalSharing BIT'

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @UserViewCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT PRIMARY KEY);
DECLARE @FiltredByCategories TABLE (CategoryID INT PRIMARY KEY); '

DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @RotatorModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_NewsViewCategoriesMultiPortal](@RotatorModuleID,@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate) '
ELSE
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_RotatorNewsViewCategories](@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate); '

IF @OnlyOneCategory <> 0 -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @OnlyOneCategory;
	INSERT INTO @FiltredByCategories SELECT @OnlyOneCategory; '
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '; '
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral ON ral.CategoryID = cl.CategoryID AND ral.ModuleID = @RotatorModuleID
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID)) AND ' + @sqlSharingPortalAll + '
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.' + @sqlSharingPortalAll + '
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; '
	END
END

IF @ShowAllAuthors = 0
SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @RotatorModuleID
	UNION
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @RotatorModuleID; '

IF @FilterByTagsArticleID <> 0
SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempTagIDList TABLE (TagID INT PRIMARY KEY);
	INSERT INTO @TempTagIDList
	SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @FilterByTagsArticleID; '

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByCustomFieldID));

	IF @OrderByColumnName IS NULL
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
		SET @OrderBySecondColumnName = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

IF @OrderBySecondCustomFieldID IS NOT NULL
BEGIN
	SET @OrderBySecondColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderBySecondCustomFieldID));

	IF @OrderBySecondColumnName IS NULL
	BEGIN
		SET @OrderBySecondCustomFieldID = NULL;
		SET @OrderBySecondColumnName = NULL;
	END
END

IF @OrderByThirdCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByThirdColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByThirdCustomFieldID));

	IF @OrderByThirdColumnName IS NULL
	BEGIN
		SET @OrderByThirdCustomFieldID = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID], n.[PortalID], n.[ArticleImage], rnb.[ArticleImage] AS RotatorImage, CAST(CASE WHEN (rnb.ArticleID IS NULL OR (rnb.Flag <> 3 AND rnb.Flag <> 5)) THEN 1 ELSE 0 END AS BIT) AS CreateImage
FROM (
	SELECT n.[ArticleID],n.[PortalID],n.[ArticleImage]';
		
		IF @OrderByCustomFieldID IS NULL
			SET @sqlcommand = @sqlcommand + N',n.' + @OrderByColumnName;
		ELSE
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondCustomFieldID IS NULL	
				SET @sqlcommand = @sqlcommand + N',n.' + @OrderBySecondColumnName;
			ELSE
				SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdCustomFieldID IS NULL
				SET @sqlcommand = @sqlcommand + N',n.' + @OrderByThirdColumnName;
			ELSE 
				SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
		END

		SET @sqlcommand = @sqlcommand + N',ROW_NUMBER() OVER (ORDER BY '
				
		IF @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
		IF @OrderByCustomFieldID IS NULL
			SET @sqlcommand = @sqlcommand + N'n.'+ @OrderByColumnName + N' ' + @OrderByDirection
		ELSE
			SET @sqlcommand = @sqlcommand + N'fv.'+ @OrderByColumnName + N' ' + @OrderByDirection;
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			IF @OrderBySecondCustomFieldID IS NULL
				SET @sqlcommand = @sqlcommand + N',n.'+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
			ELSE
				SET @sqlcommand = @sqlcommand + N',fv.'+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection;
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			IF @OrderByThirdCustomFieldID IS NULL
				SET @sqlcommand = @sqlcommand + N',n.'+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
			ELSE
				SET @sqlcommand = @sqlcommand + N',fv.'+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection;
		END
			
		SET @sqlcommand = @sqlcommand + N') AS Kulike '
		
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n '
				
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			DECLARE @CheckOrStatement BIT;
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON n.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
		
		SET @sqlcommand = @sqlcommand + N'
			WHERE n.ArticleID IN (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON na.ArticleID = nc.ArticleID AND nc.CategoryID IN (SELECT CategoryID FROM @UserViewCategoriesWithFilter) '
					IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
					IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	 '
					IF @FilterByDNNGroupID <> 0 
						SET @sqlcommand = @sqlcommand + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					ELSE IF @FilterByDNNUserID <> 0
						SET @sqlcommand = @sqlcommand + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
				SET @sqlcommand = @sqlcommand + N'
				WHERE ' + @sqlSharingPortal + '
					AND na.Approved = 1
					AND na.Active = 1
					AND na.EventArticle = 0
					AND na.HasPermissions = 0
					AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
					IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
					IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
					IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
					IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
					IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDNNUserID '
					ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
				SET @sqlcommand = @sqlcommand + N'
				UNION ALL
				SELECT ArticleID FROM (
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @FiltredByCategories) '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	 '
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					SET @sqlcommand = @sqlcommand + N'
					WHERE ' + @sqlSharingPortal + '
						AND na.Approved = 1
						AND na.Active = 1
						AND na.EventArticle = 0
						AND na.HasPermissions = 1
						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
						IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
						IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
						IF @AdminOrSuperUser = 0
							BEGIN
								SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
								IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
								ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
							END
						IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDNNUserID '
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
					SET @sqlcommand = @sqlcommand + N'
					UNION
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @FiltredByCategories) '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	 '
						IF @FilterByDNNGroupID <> 0 
						SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					SET @sqlcommand = @sqlcommand + N'
					WHERE ' + @sqlSharingPortal + '
						AND na.Approved = 1
						AND na.Active = 1
						AND na.EventArticle = 0
						AND na.HasPermissions = 1
						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
						IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
						IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
						IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM {databaseOwner}[{objectQualifier}EDS_UserInRoles](@UserID,@PortalID,@CurrentDate)) '
						IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDNNUserID '
						ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
				SET @sqlcommand = @sqlcommand + N'
				) AS HasPermissions
			) '	
	SET @sqlcommand = @sqlcommand + N'
	) AS n
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] rnb ON n.ArticleID = rnb.ArticleID AND rnb.RotatorID=@RotatorModuleID AND (rnb.Flag = 3 OR rnb.Flag = 5)
	WHERE n.Kulike BETWEEN 1 AND @RowCount '

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@RotatorModuleID = @RotatorModuleID
    ,@LocaleCode = @LocaleCode
	,@RowCount = @RowCount
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@PermissionsModuleID = @PermissionsModuleID
	,@OnlyOneCategory = @OnlyOneCategory
	,@FilterByTagsArticleID = @FilterByTagsArticleID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@OrderBySecondCustomFieldID = @OrderBySecondCustomFieldID
	,@OrderByThirdCustomFieldID = @OrderByThirdCustomFieldID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNRotatorNewsComparerEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsComparerEvents] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsComparerEvents]
	@PortalID INT,
	@UserID INT,
	@RotatorModuleID INT,
	@RowCount INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@OrderBySecondColumnName NVARCHAR(30) = NULL,
	@OrderBySecondDirection NVARCHAR(4) = NULL,
	@OrderBySecondCustomFieldID INT = NULL,	
	@OrderByThirdColumnName NVARCHAR(30) = NULL,
	@OrderByThirdDirection NVARCHAR(4) = NULL,
	@OrderByThirdCustomFieldID INT = NULL,
	@Featured BIT = 0,
	@OnlyWithImage BIT = 1,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@ShowAllAuthors BIT = 1,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 0,
	@PermissionSettingsSource TINYINT = 0,
	@PermissionsModuleID INT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@HideUnlocalizedItems BIT = 0,
	@OnlyOneCategory INT = 0,
	@StartDate DATETIME = NULL,
	@DateRangeType TINYINT = 0,
	@FilterByTagsArticleID INT = 0,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(500);
SET @paramList = N'
	 @PortalID INT
	,@UserID INT
	,@RotatorModuleID INT
	,@LocaleCode NVARCHAR(20)
	,@RowCount INT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@PermissionsModuleID INT
	,@OnlyOneCategory INT
	,@StartDate DATETIME
	,@FilterByTagsArticleID INT
	,@OrderByCustomFieldID INT
	,@OrderBySecondCustomFieldID INT
	,@OrderByThirdCustomFieldID INT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource TINYINT
	,@IsPortalSharing BIT'

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @UserViewCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT PRIMARY KEY);
DECLARE @FiltredByCategories TABLE (CategoryID INT PRIMARY KEY); '

DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @RotatorModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_NewsViewCategoriesMultiPortal](@RotatorModuleID,@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate) '
ELSE
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_RotatorNewsViewCategories](@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate); '

IF @OnlyOneCategory <> 0 -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @OnlyOneCategory;
	INSERT INTO @FiltredByCategories SELECT @OnlyOneCategory; '
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '; '
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral ON ral.CategoryID = cl.CategoryID AND ral.ModuleID = @RotatorModuleID
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID)) AND ' + @sqlSharingPortalAll + '
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.' + @sqlSharingPortalAll + '
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; '
	END
END

IF @ShowAllAuthors = 0
SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @RotatorModuleID
	UNION 
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @RotatorModuleID; '

IF @FilterByTagsArticleID <> 0
SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempTagIDList TABLE (TagID INT PRIMARY KEY);
	INSERT INTO @TempTagIDList
	SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @FilterByTagsArticleID; '

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByCustomFieldID));

	IF @OrderByColumnName IS NULL
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
		SET @OrderBySecondColumnName = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

IF @OrderBySecondCustomFieldID IS NOT NULL
BEGIN
	SET @OrderBySecondColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderBySecondCustomFieldID));

	IF @OrderBySecondColumnName IS NULL
	BEGIN
		SET @OrderBySecondCustomFieldID = NULL;
		SET @OrderBySecondColumnName = NULL;
	END
END

IF @OrderByThirdCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByThirdColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByThirdCustomFieldID));

	IF @OrderByThirdColumnName IS NULL
	BEGIN
		SET @OrderByThirdCustomFieldID = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID], n.[PortalID], n.[ArticleImage], rnb.[ArticleImage] AS RotatorImage, CAST(CASE WHEN (rnb.ArticleID IS NULL OR (rnb.Flag <> 3 AND rnb.Flag <> 5)) THEN 1 ELSE 0 END AS BIT) AS CreateImage
FROM (
	SELECT n.[ArticleID],n.[PortalID],n.[ArticleImage],ROW_NUMBER() OVER (ORDER BY '
		
		IF @OrderByCustomFieldID IS NULL
			IF @OrderByColumnName <> N'StartDate'
				SET @sqlcommand = @sqlcommand + N'n.'+ @OrderByColumnName + N' ' + @OrderByDirection
			ELSE
				SET @sqlcommand = @sqlcommand + N'(CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END) ' + @OrderByDirection
		ELSE
		BEGIN
			IF @OrderByDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'	
			SET @sqlcommand = @sqlcommand + N'fv.'+ @OrderByColumnName + N' ' + @OrderByDirection;
		END
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondCustomFieldID IS NULL
				IF @OrderBySecondColumnName <> N'StartDate'
					SET @sqlcommand = @sqlcommand + N',n.'+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
				ELSE
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END) ' + @OrderBySecondDirection
			ELSE
			BEGIN
				IF @OrderBySecondDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'	
				SET @sqlcommand = @sqlcommand + N',fv.'+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection;
			END
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN		
			IF @OrderByThirdCustomFieldID IS NULL
				IF @OrderByThirdColumnName <> N'StartDate'
					SET @sqlcommand = @sqlcommand + N',n.'+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
				ELSE
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END) ' + @OrderByThirdDirection
			ELSE
			BEGIN
				IF @OrderByThirdDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
				SET @sqlcommand = @sqlcommand + N',fv.'+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection;
			END
		END
			
		SET @sqlcommand = @sqlcommand + N') AS Kulike '
		
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n '
				
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			DECLARE @CheckOrStatement BIT;
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON n.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
		
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
		IF @DateRangeType = 2
			SET @sqlcommand = @sqlcommand + N'
			 ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(ned.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
		ELSE IF @DateRangeType = 0
			SET @sqlcommand = @sqlcommand + N'
			(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
		ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
		SET @sqlcommand = @sqlcommand + N'	
			WHERE n.ArticleID IN (
				SELECT [ArticleID] FROM (
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @UserViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	 '
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					SET @sqlcommand = @sqlcommand + N'
					WHERE na.HasPermissions = 0
						AND ' + @sqlSharingPortal + '
						AND na.Approved = 1
						AND na.Active = 1
						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
						IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
						IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
						IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
						IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @sqlcommand = @sqlcommand + N'
					UNION ALL
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @UserViewCategoriesWithFilter) '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	 '
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						SET @sqlcommand = @sqlcommand + N'
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @sqlcommand = @sqlcommand + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.RecurringID))) '
						ELSE IF @DateRangeType = 0 SET @sqlcommand = @sqlcommand + N'
							(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
			
						SET @sqlcommand = @sqlcommand + N'
					WHERE na.HasPermissions = 0
						AND ' + @sqlSharingPortal + '
						AND na.Approved = 1
						AND na.Active = 1
						AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
						IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
						IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
						IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
						IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
					SET @sqlcommand = @sqlcommand + N'
				) AS HasPermissionsFalse
				UNION ALL
				SELECT [ArticleID] FROM (
					SELECT [ArticleID] FROM (
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 0
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	 '
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					SET @sqlcommand = @sqlcommand + N'
						WHERE na.HasPermissions = 1
							AND ' + @sqlSharingPortal + '
							AND na.Approved = 1
							AND na.Active = 1
							AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
							IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
							IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
							IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
							IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
							IF @AdminOrSuperUser = 0
							BEGIN
								SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
								IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
								ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
							END
							IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
						SET @sqlcommand = @sqlcommand + N'
						UNION
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	 '
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					SET @sqlcommand = @sqlcommand + N'
						WHERE na.HasPermissions = 1
							AND ' + @sqlSharingPortal + '
							AND na.Approved = 1
							AND na.Active = 1
							AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
							IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
							IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
							IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
							IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
							IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM {databaseOwner}[{objectQualifier}EDS_UserInRoles](@UserID,@PortalID,@CurrentDate)) '
							IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @sqlcommand = @sqlcommand + N'
					) AS NotRecurring
					UNION ALL
					SELECT [ArticleID] FROM (
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	 '
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
							IF @DateRangeType = 2
								SET @sqlcommand = @sqlcommand + N'
								((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
							ELSE IF @DateRangeType = 0
								SET @sqlcommand = @sqlcommand + N'
								(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
							ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
			
						SET @sqlcommand = @sqlcommand + N'
						WHERE na.HasPermissions = 1
							AND ' + @sqlSharingPortal + '
							AND na.Approved = 1
							AND na.Active = 1
							AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
							IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
							IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
							IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
							IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '

							IF @AdminOrSuperUser = 0
							BEGIN
								SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
								IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
								ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
							END
							SET @sqlcommand = @sqlcommand + N'
						UNION
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID '
						IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
						IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	 '
						IF @FilterByDNNGroupID <> 0 
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
						ELSE IF @FilterByDNNUserID <> 0
							SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
					SET @sqlcommand = @sqlcommand + N'
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
							IF @DateRangeType = 2
								SET @sqlcommand = @sqlcommand + N'
								((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
							ELSE IF @DateRangeType = 0
								SET @sqlcommand = @sqlcommand + N'	
								(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
							ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
			
							SET @sqlcommand = @sqlcommand + N'
						WHERE na.HasPermissions = 1
							AND ' + @sqlSharingPortal + '
							AND na.Approved = 1
							AND na.Active = 1
							AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
							IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
							IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
							IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
							IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
							IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
							IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM {databaseOwner}[{objectQualifier}EDS_UserInRoles](@UserID,@PortalID,@CurrentDate)) '
					SET @sqlcommand = @sqlcommand + N'
					) AS Recurring
				) AS HasPermissionsTrue			
			)
	) AS n
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] rnb ON n.ArticleID = rnb.ArticleID AND RotatorID=@RotatorModuleID AND (rnb.Flag = 3 OR rnb.Flag = 5)
	WHERE n.Kulike BETWEEN 1 AND @RowCount '

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@RotatorModuleID = @RotatorModuleID
    ,@LocaleCode = @LocaleCode
	,@RowCount = @RowCount
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@PermissionsModuleID = @PermissionsModuleID
	,@OnlyOneCategory = @OnlyOneCategory
	,@StartDate = @StartDate
	,@FilterByTagsArticleID = @FilterByTagsArticleID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@OrderBySecondCustomFieldID = @OrderBySecondCustomFieldID
	,@OrderByThirdCustomFieldID = @OrderByThirdCustomFieldID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNrotatorNewsGetAllContent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNrotatorNewsGetAllContent] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNrotatorNewsGetAllContent]
	@PortalID INT,
	@UserID INT,
	@RotatorModuleID INT,
	@OpenInTab INT,
	@OpenInModule INT,
	@RowCount INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@OrderBySecondColumnName NVARCHAR(30) = NULL,
	@OrderBySecondDirection NVARCHAR(4) = NULL,
	@OrderBySecondCustomFieldID INT = NULL,
	@OrderByThirdColumnName NVARCHAR(30) = NULL,
	@OrderByThirdDirection NVARCHAR(4) = NULL,
	@OrderByThirdCustomFieldID INT = NULL,
	@Featured BIT = 0,
	@OnlyWithImage BIT = 1,
	@Randomize BIT = 0,
	@DescriptionSource TINYINT = 1,
	@LocaleCode NVARCHAR(20) = NULL,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@ShowAllAuthors BIT = 1,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 0,
	@PermissionSettingsSource TINYINT = 0,
	@PermissionsModuleID INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@OnlyOneCategory INT = 0,
	@StartDate DATETIME = NULL,
	@DateRangeType TINYINT = 0,
	@FilterByTagsArticleID INT = 0,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(500);
SET @paramList = N'
	 @PortalID INT
	,@UserID INT
	,@RotatorModuleID INT
	,@OpenInTab INT
	,@OpenInModule INT
	,@LocaleCode NVARCHAR(20)
	,@RowCount INT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@PermissionsModuleID INT
	,@OnlyOneCategory INT
	,@StartDate DATETIME
	,@FilterByTagsArticleID INT
	,@OrderByCustomFieldID INT
	,@OrderBySecondCustomFieldID INT
	,@OrderByThirdCustomFieldID INT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource TINYINT
	,@IsPortalSharing BIT'

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @UserViewCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT PRIMARY KEY);
DECLARE @FiltredByCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @LocalizedCategories TABLE (ID INT PRIMARY KEY, Name NVARCHAR(200), Position INT, CategoryURL NVARCHAR(1500));
DECLARE @UserInRoles TABLE (RoleID INT PRIMARY KEY);

INSERT INTO @UserInRoles SELECT [RoleID] FROM {databaseOwner}[{objectQualifier}EDS_UserInRoles](@UserID,@PortalID,@CurrentDate); '

DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @RotatorModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_NewsViewCategoriesMultiPortal](@RotatorModuleID,@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate) '
ELSE
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_RotatorNewsViewCategories](@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate); '

IF @OnlyOneCategory <> 0 -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand + N' 
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @OnlyOneCategory;
	INSERT INTO @FiltredByCategories SELECT @OnlyOneCategory; '
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
		SET @sqlcommand = @sqlcommand + N' 
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '; '
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlcommand = @sqlcommand + N' 
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral ON ral.CategoryID = cl.CategoryID AND ral.ModuleID = @RotatorModuleID
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		SET @sqlcommand = @sqlcommand + N' 
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID)) AND ' + @sqlSharingPortalAll + '
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.' + @sqlSharingPortalAll + '
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; '
END

IF @ShowAllAuthors = 0
	SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @RotatorModuleID
	UNION 
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @RotatorModuleID; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @LocalizedCategories
	SELECT c.CategoryID AS ID, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name, c.Position, c.CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID
	WHERE c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories) AND c.' + @sqlSharingPortalAll + ' AND cl.LocaleCode = @LocaleCode; '
ELSE
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @LocalizedCategories
	SELECT c.CategoryID AS ID, c.CategoryName AS Name, c.Position, c.CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	WHERE c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories) AND c.' + @sqlSharingPortalAll + '; '

IF @FilterByTagsArticleID <> 0
SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempTagIDList TABLE (TagID INT PRIMARY KEY);
	INSERT INTO @TempTagIDList
	SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @FilterByTagsArticleID; '

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByCustomFieldID));

	IF @OrderByColumnName IS NULL
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
		SET @OrderBySecondColumnName = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

IF @OrderBySecondCustomFieldID IS NOT NULL
BEGIN
	SET @OrderBySecondColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderBySecondCustomFieldID));

	IF @OrderBySecondColumnName IS NULL
	BEGIN
		SET @OrderBySecondCustomFieldID = NULL;
		SET @OrderBySecondColumnName = NULL;
	END
END

IF @OrderByThirdCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByThirdColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByThirdCustomFieldID));

	IF @OrderByThirdColumnName IS NULL
	BEGIN
		SET @OrderByThirdCustomFieldID = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

DECLARE @CheckOrStatement BIT;

SET @sqlcommand = @sqlcommand + N'
;WITH MainFilters AS(
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] AS rnb ON na.ArticleID = rnb.ArticleID AND rnb.RotatorID=@RotatorModuleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @FiltredByCategories) '
	    IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	    IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	'
		IF @FilterByDNNGroupID <> 0 
			SET @sqlcommand = @sqlcommand + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
		ELSE IF @FilterByDNNUserID <> 0
			SET @sqlcommand = @sqlcommand + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
	SET @sqlcommand = @sqlcommand + N'
	WHERE ' + @sqlSharingPortal + '
		AND na.Approved = 1
		AND na.Active = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
		IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDNNUserID '
		ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
SET @sqlcommand = @sqlcommand + N'
),
AllContent AS (
	SELECT TOP(@RowCount) ArticleID, StartDate, RecurringID FROM (
	
		SELECT *, ROW_NUMBER() OVER (PARTITION BY ArticleID, RecurringID ORDER BY ArticleID DESC) AS RemoveDuplicates
		FROM (
	
		SELECT n.ArticleID,
		CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
		CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
		
		n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified,n.NumberOfComments,n.Title '
		
		IF @OrderByCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		
		IF @OrderBySecondCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
		
		IF @OrderByThirdCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
		
		SET @sqlcommand = @sqlcommand + N'	
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n '
		
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON n.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
		
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN MainFilters AS mf ON mf.ArticleID = n.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND '
		IF @DateRangeType = 2
			SET @sqlcommand = @sqlcommand + N'
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			OR (nerd.RecurringID IN (SELECT TOP(ned.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
		ELSE IF @DateRangeType = 0
			SET @sqlcommand = @sqlcommand + N'
			(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
		ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
		SET @sqlcommand = @sqlcommand + N'
		WHERE n.ArticleID IN(
		SELECT ArticleID FROM (
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON na.ArticleID = nc.ArticleID AND nc.CategoryID IN (SELECT CategoryID FROM @UserViewCategoriesWithFilter)
			WHERE na.HasPermissions = 0
			UNION ALL
			SELECT ArticleID FROM (
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				WHERE na.HasPermissions = 1 '
					IF @AdminOrSuperUser = 0
					BEGIN
						SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
						ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
					END
				SET @sqlcommand = @sqlcommand + N'
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				WHERE na.HasPermissions = 1 '
					IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles) '
				SET @sqlcommand = @sqlcommand + N'
			) AS WithPermissions
		) AS ArticlesContent
		UNION
		SELECT ArticleID FROM (
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0
					INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @UserViewCategoriesWithFilter)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
				WHERE na.HasPermissions = 0 '
					IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
				SET @sqlcommand = @sqlcommand + N'
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 1
					INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @UserViewCategoriesWithFilter)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
					SET @sqlcommand = @sqlcommand + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 0
					SET @sqlcommand = @sqlcommand + N'
						(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
					SET @sqlcommand = @sqlcommand + N'
				WHERE na.HasPermissions = 0
			) AS HasPermissionsFalse
			UNION ALL
			SELECT [ArticleID] FROM (
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 0
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
					WHERE na.HasPermissions = 1 '
						IF @AdminOrSuperUser = 0
						BEGIN
							SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
							IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
							ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
						END
						IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @sqlcommand = @sqlcommand + N'
					UNION
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0	
					WHERE na.HasPermissions = 1 '
						IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles) '
						IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
				SET @sqlcommand = @sqlcommand + N'
				) AS NotRecurring
				UNION ALL
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 1
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @sqlcommand = @sqlcommand + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 0
							SET @sqlcommand = @sqlcommand + N'	
							(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
					SET @sqlcommand = @sqlcommand + N'
					WHERE na.HasPermissions = 1 '
						IF @AdminOrSuperUser = 0
						BEGIN
							SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
							IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
							ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
						END
						SET @sqlcommand = @sqlcommand + N'
					UNION
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
						SET @sqlcommand = @sqlcommand + N'
							 ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 0
							SET @sqlcommand = @sqlcommand + N'	
							(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
						SET @sqlcommand = @sqlcommand + N'
					WHERE na.HasPermissions = 1 '
						IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles) '
				SET @sqlcommand = @sqlcommand + N'
				) AS Recurring
			) AS HasPermissionsTrue
		) AS EventsContent
		)
	) AS inResult
	) AS n WHERE RemoveDuplicates < 2 ORDER BY '
	
	IF @Randomize = 1 SET @sqlcommand = @sqlcommand + N'NEWID() '
	ELSE 
	BEGIN
				
		IF @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

		SET @sqlcommand = @sqlcommand + N'n.'+ @OrderByColumnName + N' ' + @OrderByDirection
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N',n.'+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N',n.'+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
		END
	END
	
SET @sqlcommand = @sqlcommand + N'
) '
IF @LocaleCode IS NULL
BEGIN
SET @sqlcommand = @sqlcommand + N'
SELECT ArticleID,UserID,AuthorAliasName,ArticleImage,Title,SubTitle,Description,HTMLContent,FileSystemName, TitleLink,DetailType AS ContentType,
	DetailTypeData, PublishDate,NumberOfViews,RatingValue,DateAdded,ExpireDate,LastModified,NumberOfComments,Position,CategoryID,CFGroupeID, StartDate, RecurringID, '
	IF @CategoryFilterType = 0 SET @sqlcommand = @sqlcommand + CAST(@OpenInTab AS NVARCHAR(20)) + N' AS TabID, ' + CAST(@OpenInModule AS NVARCHAR(20)) +' AS NewsModuleID, '
	ELSE SET @sqlcommand = @sqlcommand + N' CASE WHEN inResult.TabID IS NULL THEN @OpenInTab ELSE inResult.TabID END AS TabID, CASE WHEN inResult.NewsModuleID IS NULL THEN @OpenInModule ELSE inResult.NewsModuleID END AS NewsModuleID, '
	SET @sqlcommand = @sqlcommand + N'
	EventArticle,
	(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = inResult.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root''))
	 AS CatToShow,ImageSizes
FROM (	
	
	SELECT  n.ArticleID,n.UserID,n.AuthorAliasName,n.ArticleImage,n.Title, n.SubTitle, '
		IF @DescriptionSource = 1 SET @sqlcommand = @sqlcommand + N' n.Summary AS Description, n.Summary AS HTMLContent, '
		ELSE IF @DescriptionSource = 2 SET @sqlcommand = @sqlcommand + N' n.Article AS Description, n.Article AS HTMLContent, '
	
		SET @sqlcommand = @sqlcommand + N'
		rnb.ArticleImage AS FileSystemName, n.TitleLink,n.DetailType, n.DetailTypeData, n.PublishDate,n.NumberOfViews,
		n.RatingValue, n.DateAdded, n.[ExpireDate], n.LastModified,n.NumberOfComments, ncl.Position, ncl.CategoryID, ral.TabID, ral.NewsModuleID, n.EventArticle
		,CFGroupeID, ac.StartDate,ac.RecurringID,rnb.ImageSizes
		,ROW_NUMBER() OVER (PARTITION BY n.ArticleID,ac.RecurringID ORDER BY n.ArticleID DESC) AS RN '
	
		IF @OrderByCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		
		IF @OrderBySecondCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
		
		IF @OrderByThirdCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
	
	SET @sqlcommand = @sqlcommand + N'
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN AllContent AS ac ON ac.ArticleID = n.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] AS rnb ON n.ArticleID = rnb.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON rnb.ArticleID = nc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS ncl ON ncl.CategoryID = nc.CategoryID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral on ral.CategoryID = ncl.CategoryID and ral.ModuleID = @RotatorModuleID '
	
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON n.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
	
	SET @sqlcommand = @sqlcommand + N'
	WHERE rnb.RotatorID=@RotatorModuleID
	
) AS inResult
WHERE RN < 2 ORDER BY '

	IF @Randomize = 1 SET @sqlcommand = @sqlcommand + N'NEWID() '
	ELSE 
	BEGIN
				
		IF @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

		SET @sqlcommand = @sqlcommand + @OrderByColumnName + N' ' + @OrderByDirection
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
		END
	END
	
END
ELSE
BEGIN
SET @sqlcommand = @sqlcommand + N'
SELECT ArticleID,UserID,AuthorAliasName,ArticleImage,Title,SubTitle,CFGroupeID, '
	IF @DescriptionSource = 1 SET @sqlcommand = @sqlcommand + N' Summary AS Description, Summary AS HTMLContent, '
	ELSE IF @DescriptionSource = 2 SET @sqlcommand = @sqlcommand + N' Article AS Description, Article AS HTMLContent, '
	
	SET @sqlcommand = @sqlcommand + N'
	FileSystemName, TitleLink,DetailType AS ContentType, DetailTypeData, PublishDate,NumberOfViews,RatingValue,DateAdded,ExpireDate,LastModified,NumberOfComments,Position,CategoryID, StartDate, RecurringID, '
	IF @CategoryFilterType = 0 SET @sqlcommand = @sqlcommand + CAST(@OpenInTab AS NVARCHAR(20)) + N' AS TabID, ' + CAST(@OpenInModule AS NVARCHAR(20)) +' AS NewsModuleID, '
	ELSE SET @sqlcommand = @sqlcommand + N' CASE WHEN inResult.TabID IS NULL THEN @OpenInTab ELSE inResult.TabID END AS TabID, CASE WHEN inResult.NewsModuleID IS NULL THEN @OpenInModule ELSE inResult.NewsModuleID END AS NewsModuleID, '
	
	SET @sqlcommand = @sqlcommand + N'
	EventArticle,
	(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = inResult.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root''))
	 AS CatToShow,ImageSizes
	FROM
	(
		SELECT na.ArticleID,na.UserID,na.AuthorAliasName, na.ArticleImage,
			CASE WHEN ncloc.Title IS NULL THEN na.Title ELSE ncloc.Title END AS Title,
			CASE WHEN ncloc.SubTitle IS NULL THEN na.SubTitle ELSE ncloc.SubTitle END AS SubTitle,
			CASE WHEN ncloc.Summary IS NULL THEN na.Summary ELSE ncloc.Summary END AS Summary,
			CASE WHEN ncloc.Article IS NULL THEN na.Article ELSE ncloc.Article END AS Article,
			rnb.ArticleImage AS FileSystemName,
			CASE WHEN ncloc.clTitleLink IS NULL THEN na.TitleLink ELSE ncloc.clTitleLink END AS TitleLink,
			na.DetailType, na.DetailTypeData, na.PublishDate, na.NumberOfViews, na.RatingValue, na.DateAdded,
			na.[ExpireDate], na.LastModified, na.NumberOfComments, ncl.Position, ncl.CategoryID,
			ral.TabID, ral.NewsModuleID, na.EventArticle,na.CFGroupeID,ac.StartDate,ac.RecurringID,rnb.ImageSizes
			,ROW_NUMBER() OVER (PARTITION BY na.ArticleID,ac.RecurringID ORDER BY na.ArticleID DESC) AS RN '
	
		IF @OrderByCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		
		IF @OrderBySecondCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
		
		IF @OrderByThirdCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
	
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN AllContent AS ac ON na.ArticleID = ac.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] AS rnb ON rnb.ArticleID = ac.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON nc.ArticleID = rnb.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS ncl ON ncl.CategoryID = nc.CategoryID
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral on ral.CategoryID = ncl.CategoryID and ral.ModuleID = @RotatorModuleID
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncloc ON ncloc.ArticleID = ac.ArticleID AND ncloc.LocaleCode=@LocaleCode '
	
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON na.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
		
		SET @sqlcommand = @sqlcommand + N'
		WHERE rnb.RotatorID=@RotatorModuleID
	) AS inResult WHERE RN < 2
	ORDER BY '
	
	IF @Randomize = 1 SET @sqlcommand = @sqlcommand + N'NEWID() '
	ELSE 
	BEGIN
				
		IF @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

		SET @sqlcommand = @sqlcommand + @OrderByColumnName + N' ' + @OrderByDirection
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
		END
	END
END

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@RotatorModuleID = @RotatorModuleID
	,@OpenInTab = @OpenInTab
	,@OpenInModule = @OpenInModule
	,@LocaleCode = @LocaleCode
	,@RowCount = @RowCount
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@PermissionsModuleID = @PermissionsModuleID
	,@OnlyOneCategory = @OnlyOneCategory
	,@StartDate = @StartDate
	,@FilterByTagsArticleID = @FilterByTagsArticleID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@OrderBySecondCustomFieldID = @OrderBySecondCustomFieldID
	,@OrderByThirdCustomFieldID = @OrderByThirdCustomFieldID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNrotatorNewsGetArticles]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNrotatorNewsGetArticles] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNrotatorNewsGetArticles]
	@PortalID INT,
	@UserID INT,
	@RotatorModuleID INT,
	@OpenInTab INT,
	@OpenInModule INT,
	@RowCount INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@OrderBySecondColumnName NVARCHAR(30) = NULL,
	@OrderBySecondDirection NVARCHAR(4) = NULL,
	@OrderBySecondCustomFieldID INT = NULL,
	@OrderByThirdColumnName NVARCHAR(30) = NULL,
	@OrderByThirdDirection NVARCHAR(4) = NULL,
	@OrderByThirdCustomFieldID INT = NULL,
	@Featured BIT = 0,
	@OnlyWithImage BIT = 1,
	@Randomize BIT = 0,
	@DescriptionSource TINYINT = 1,
	@LocaleCode NVARCHAR(20) = NULL,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@ShowAllAuthors BIT = 1,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 0,
	@PermissionSettingsSource TINYINT = 0,
	@PermissionsModuleID INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@OnlyOneCategory INT = 0,
	@FilterByTagsArticleID INT = 0,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(500);
SET @paramList = N'
	 @PortalID INT
	,@UserID INT
	,@RotatorModuleID INT
	,@OpenInTab INT
	,@OpenInModule INT
	,@LocaleCode NVARCHAR(20)
	,@RowCount INT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@PermissionsModuleID INT
	,@OnlyOneCategory INT
	,@FilterByTagsArticleID INT
	,@OrderByCustomFieldID INT
	,@OrderBySecondCustomFieldID INT
	,@OrderByThirdCustomFieldID INT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource TINYINT
	,@IsPortalSharing BIT'

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @UserViewCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT PRIMARY KEY);
DECLARE @FiltredByCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @LocalizedCategories TABLE (ID INT PRIMARY KEY, Name NVARCHAR(200), Position INT, CategoryURL NVARCHAR(1500)); '

DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @RotatorModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_NewsViewCategoriesMultiPortal](@RotatorModuleID,@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate) '
ELSE
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_RotatorNewsViewCategories](@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate); '

IF @OnlyOneCategory <> 0 -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand + N' 
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @OnlyOneCategory;
	INSERT INTO @FiltredByCategories SELECT @OnlyOneCategory; '
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
		SET @sqlcommand = @sqlcommand + N' 
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '; '
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlcommand = @sqlcommand + N' 
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral ON ral.CategoryID = cl.CategoryID AND ral.ModuleID = @RotatorModuleID	
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		SET @sqlcommand = @sqlcommand + N' 
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID)) AND ' + @sqlSharingPortalAll + '
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.' + @sqlSharingPortalAll + '
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; '
END

IF @ShowAllAuthors = 0
	SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @RotatorModuleID
	UNION 
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @RotatorModuleID; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @LocalizedCategories
	SELECT c.CategoryID AS ID, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name, c.Position, c.CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID
	WHERE c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories) AND c.' + @sqlSharingPortalAll + ' AND cl.LocaleCode = @LocaleCode; '
ELSE
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @LocalizedCategories
	SELECT c.CategoryID AS ID, c.CategoryName AS Name, c.Position, c.CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	WHERE c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories) AND c.' + @sqlSharingPortalAll + '; '

IF @FilterByTagsArticleID <> 0
SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempTagIDList TABLE (TagID INT PRIMARY KEY);
	INSERT INTO @TempTagIDList
	SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @FilterByTagsArticleID; '

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByCustomFieldID));

	IF @OrderByColumnName IS NULL
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
		SET @OrderBySecondColumnName = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

IF @OrderBySecondCustomFieldID IS NOT NULL
BEGIN
	SET @OrderBySecondColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderBySecondCustomFieldID));

	IF @OrderBySecondColumnName IS NULL
	BEGIN
		SET @OrderBySecondCustomFieldID = NULL;
		SET @OrderBySecondColumnName = NULL;
	END
END

IF @OrderByThirdCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByThirdColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByThirdCustomFieldID));

	IF @OrderByThirdColumnName IS NULL
	BEGIN
		SET @OrderByThirdCustomFieldID = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

DECLARE @CheckOrStatement BIT;

SET @sqlcommand = @sqlcommand + N'
;WITH MainFilters AS(
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] AS rnb ON na.ArticleID = rnb.ArticleID AND rnb.RotatorID=@RotatorModuleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @FiltredByCategories) '
	    IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	    IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	'
		IF @FilterByDNNGroupID <> 0 
			SET @sqlcommand = @sqlcommand + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
		ELSE IF @FilterByDNNUserID <> 0
			SET @sqlcommand = @sqlcommand + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
	SET @sqlcommand = @sqlcommand + N'
	WHERE ' + @sqlSharingPortal + '
		AND na.Approved = 1
		AND na.Active = 1
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
		IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDNNUserID '
		ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
SET @sqlcommand = @sqlcommand + N'
),
AllContent AS (
	SELECT TOP(@RowCount) ArticleID FROM(
		
		SELECT n.ArticleID,n.PublishDate,n.Title,n.NumberOfViews,n.RatingValue,n.DateAdded,n.[ExpireDate],n.LastModified,n.NumberOfComments,
			ROW_NUMBER() OVER (PARTITION BY n.ArticleID ORDER BY n.ArticleID DESC) AS RN '
		
		IF @OrderByCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		
		IF @OrderBySecondCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
		
		IF @OrderByThirdCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
		
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n '
		
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON n.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
		
		SET @sqlcommand = @sqlcommand + N'
		WHERE n.ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON na.ArticleID = nc.ArticleID AND nc.CategoryID IN (SELECT CategoryID FROM @UserViewCategoriesWithFilter)
			WHERE na.HasPermissions = 0
			UNION ALL
			SELECT ArticleID FROM (
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				WHERE na.HasPermissions = 1 '
					IF @AdminOrSuperUser = 0
					BEGIN
						SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
						ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
					END
				SET @sqlcommand = @sqlcommand + N'
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				WHERE na.HasPermissions = 1 '
					IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM {databaseOwner}[{objectQualifier}EDS_UserInRoles](@UserID,@PortalID,@CurrentDate)) '
				SET @sqlcommand = @sqlcommand + N'
			) AS WithPermissions
		)
		
	) AS n
	
	WHERE RN < 2 ORDER BY '
	
	IF @Randomize = 1 SET @sqlcommand = @sqlcommand + N'NEWID() '
	ELSE 
	BEGIN
				
		IF @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

		SET @sqlcommand = @sqlcommand + N'n.'+ @OrderByColumnName + N' ' + @OrderByDirection
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N',n.'+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N',n.'+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
		END
	END

SET @sqlcommand = @sqlcommand + N'
) '
IF @LocaleCode IS NULL
BEGIN
SET @sqlcommand = @sqlcommand + N'
SELECT ArticleID,UserID,AuthorAliasName,ArticleImage,Title,SubTitle,Description,HTMLContent,FileSystemName, TitleLink,DetailType AS ContentType,
	DetailTypeData,PublishDate,NumberOfViews,RatingValue,DateAdded,ExpireDate,LastModified,NumberOfComments,Position,CategoryID,CFGroupeID, '
	IF @CategoryFilterType = 0 SET @sqlcommand = @sqlcommand + CAST(@OpenInTab AS NVARCHAR(20)) + N' AS TabID, ' + CAST(@OpenInModule AS NVARCHAR(20)) + ' AS NewsModuleID, '
	ELSE SET @sqlcommand = @sqlcommand + N' CASE WHEN inResult.TabID IS NULL THEN @OpenInTab ELSE inResult.TabID END AS TabID, CASE WHEN inResult.NewsModuleID IS NULL THEN @OpenInModule ELSE inResult.NewsModuleID END AS NewsModuleID, '	
	SET @sqlcommand = @sqlcommand + N'
	EventArticle,
	(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = inResult.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root''))
	 AS CatToShow,ImageSizes
FROM (	
	SELECT n.ArticleID,n.UserID,n.AuthorAliasName,n.ArticleImage,n.Title,n.SubTitle, '
		IF @DescriptionSource = 1 SET @sqlcommand = @sqlcommand + N' n.Summary AS Description, n.Summary AS HTMLContent, '
		ELSE IF @DescriptionSource = 2 SET @sqlcommand = @sqlcommand + N' n.Article AS Description, n.Article AS HTMLContent, '
	
		SET @sqlcommand = @sqlcommand + N'
		rnb.ArticleImage AS FileSystemName,n.TitleLink,n.DetailType,n.DetailTypeData,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.[ExpireDate],
		n.LastModified,n.NumberOfComments,ncl.Position,ncl.CategoryID,ral.TabID,ral.NewsModuleID,n.EventArticle,n.CFGroupeID,rnb.ImageSizes
		,ROW_NUMBER() OVER (PARTITION BY n.ArticleID ORDER BY n.ArticleID DESC) AS RN '
	
		IF @OrderByCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		
		IF @OrderBySecondCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
		
		IF @OrderByThirdCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
	
	SET @sqlcommand = @sqlcommand + N'
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN AllContent AS ac ON ac.ArticleID = n.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] AS rnb ON ac.ArticleID = rnb.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON rnb.ArticleID = nc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS ncl ON ncl.CategoryID = nc.CategoryID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral on ral.CategoryID = ncl.CategoryID AND ral.ModuleID = @RotatorModuleID '
	
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON n.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
	
	SET @sqlcommand = @sqlcommand + N'
	WHERE rnb.RotatorID=@RotatorModuleID
) AS inResult
WHERE RN < 2 ORDER BY '

	IF @Randomize = 1 SET @sqlcommand = @sqlcommand + N'NEWID() '
	ELSE 
	BEGIN
				
		IF @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

		SET @sqlcommand = @sqlcommand + @OrderByColumnName + N' ' + @OrderByDirection
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
		END
	END
	
END
ELSE
BEGIN
SET @sqlcommand = @sqlcommand + N'
SELECT ArticleID,UserID,AuthorAliasName,ArticleImage,Title,SubTitle,CFGroupeID, '
	IF @DescriptionSource = 1 SET @sqlcommand = @sqlcommand + N' Summary AS Description, Summary AS HTMLContent, '
	ELSE IF @DescriptionSource = 2 SET @sqlcommand = @sqlcommand + N' Article AS Description, Article AS HTMLContent, '
	
	SET @sqlcommand = @sqlcommand + N'
	FileSystemName,TitleLink,DetailType AS ContentType, DetailTypeData,PublishDate,NumberOfViews,RatingValue,DateAdded,ExpireDate,LastModified,NumberOfComments,Position,CategoryID, '
	IF @CategoryFilterType = 0 SET @sqlcommand = @sqlcommand + CAST(@OpenInTab AS NVARCHAR(20)) + N' AS TabID, ' + CAST(@OpenInModule AS NVARCHAR(20)) +' AS NewsModuleID, '
	ELSE SET @sqlcommand = @sqlcommand + N' CASE WHEN inResult.TabID IS NULL THEN @OpenInTab ELSE inResult.TabID END AS TabID, CASE WHEN inResult.NewsModuleID IS NULL THEN @OpenInModule ELSE inResult.NewsModuleID END AS NewsModuleID, '
	
	SET @sqlcommand = @sqlcommand + N'
	EventArticle,
	(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = inResult.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root''))
	 AS CatToShow,ImageSizes
	FROM
	(
		SELECT na.ArticleID,na.UserID,na.AuthorAliasName,na.ArticleImage,
			CASE WHEN ncloc.Title IS NULL THEN na.Title ELSE ncloc.Title END AS Title,
			CASE WHEN ncloc.SubTitle IS NULL THEN na.SubTitle ELSE ncloc.SubTitle END AS SubTitle,
			CASE WHEN ncloc.Summary IS NULL THEN na.Summary ELSE ncloc.Summary END AS Summary,
			CASE WHEN ncloc.Article IS NULL THEN na.Article ELSE ncloc.Article END AS Article,
			rnb.ArticleImage AS FileSystemName,
			CASE WHEN ncloc.clTitleLink IS NULL THEN na.TitleLink ELSE ncloc.clTitleLink END AS TitleLink,
			na.DetailType, na.DetailTypeData, na.PublishDate, na.NumberOfViews, na.RatingValue, na.DateAdded,
			na.[ExpireDate], na.LastModified, na.NumberOfComments, ncl.Position, ncl.CategoryID,
			ral.TabID, ral.NewsModuleID, na.EventArticle,na.CFGroupeID,rnb.ImageSizes
			,ROW_NUMBER() OVER (PARTITION BY na.ArticleID ORDER BY na.ArticleID DESC) AS RN '
	
		IF @OrderByCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		
		IF @OrderBySecondCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
		
		IF @OrderByThirdCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
	
		SET @sqlcommand = @sqlcommand + N' 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN AllContent AS a ON na.ArticleID = a.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] AS rnb ON rnb.ArticleID = a.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON nc.ArticleID = rnb.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS ncl ON ncl.CategoryID = nc.CategoryID
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral on ral.CategoryID = ncl.CategoryID AND ral.ModuleID = @RotatorModuleID
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncloc ON ncloc.ArticleID = a.ArticleID AND ncloc.LocaleCode=@LocaleCode '
	
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON na.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
		
		SET @sqlcommand = @sqlcommand + N' 
		WHERE rnb.RotatorID=@RotatorModuleID
	) AS inResult WHERE RN < 2
	ORDER BY '
	
	IF @Randomize = 1 SET @sqlcommand = @sqlcommand + N'NEWID() '
	ELSE 
	BEGIN
				
		IF @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

		SET @sqlcommand = @sqlcommand + @OrderByColumnName + N' ' + @OrderByDirection
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
		END
	END
END

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@RotatorModuleID = @RotatorModuleID
	,@OpenInTab = @OpenInTab
	,@OpenInModule = @OpenInModule
    ,@LocaleCode = @LocaleCode
	,@RowCount = @RowCount
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@PermissionsModuleID = @PermissionsModuleID
	,@OnlyOneCategory = @OnlyOneCategory
	,@FilterByTagsArticleID = @FilterByTagsArticleID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@OrderBySecondCustomFieldID = @OrderBySecondCustomFieldID
	,@OrderByThirdCustomFieldID = @OrderByThirdCustomFieldID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNrotatorNewsGetEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNrotatorNewsGetEvents] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNrotatorNewsGetEvents]
	@PortalID INT,
	@UserID INT,
	@RotatorModuleID INT,
	@OpenInTab INT,
	@OpenInModule INT,
	@RowCount INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@OrderBySecondColumnName NVARCHAR(30) = NULL,
	@OrderBySecondDirection NVARCHAR(4) = NULL,
	@OrderBySecondCustomFieldID INT = NULL,
	@OrderByThirdColumnName NVARCHAR(30) = NULL,
	@OrderByThirdDirection NVARCHAR(4) = NULL,
	@OrderByThirdCustomFieldID INT = NULL,
	@Featured BIT = 0,
	@OnlyWithImage BIT = 1,
	@Randomize BIT = 0,
	@DescriptionSource TINYINT = 1,
	@LocaleCode NVARCHAR(20) = NULL,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@ShowAllAuthors BIT = 1,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 0,
	@PermissionSettingsSource TINYINT = 0,
	@PermissionsModuleID INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@OnlyOneCategory INT = 0,
	@StartDate DATETIME = NULL,
	@DateRangeType TINYINT = 0,
	@FilterByTagsArticleID INT = 0,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(500);
SET @paramList = N'
	 @PortalID INT
	,@UserID INT
	,@RotatorModuleID INT
	,@OpenInTab INT
	,@OpenInModule INT
	,@LocaleCode NVARCHAR(20)
	,@RowCount INT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@PermissionsModuleID INT
	,@OnlyOneCategory INT
	,@StartDate DATETIME
	,@FilterByTagsArticleID INT
	,@OrderByCustomFieldID INT
	,@OrderBySecondCustomFieldID INT
	,@OrderByThirdCustomFieldID INT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource TINYINT
	,@IsPortalSharing BIT'

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @UserViewCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT PRIMARY KEY);
DECLARE @FiltredByCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @LocalizedCategories TABLE (ID INT PRIMARY KEY, Name NVARCHAR(200), Position INT, CategoryURL NVARCHAR(1500)); '

DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @RotatorModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_NewsViewCategoriesMultiPortal](@RotatorModuleID,@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate) '
ELSE
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_RotatorNewsViewCategories](@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate); '

IF @OnlyOneCategory <> 0 -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand + N' 
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @OnlyOneCategory;
	INSERT INTO @FiltredByCategories SELECT @OnlyOneCategory; '
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
		SET @sqlcommand = @sqlcommand + N' 
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '; '
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlcommand = @sqlcommand + N' 
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral ON ral.CategoryID = cl.CategoryID AND ral.ModuleID = @RotatorModuleID
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		SET @sqlcommand = @sqlcommand + N' 
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID)) AND ' + @sqlSharingPortalAll + '
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.' + @sqlSharingPortalAll + '
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; '
END

IF @ShowAllAuthors = 0
	SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @RotatorModuleID
	UNION 
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @RotatorModuleID; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @LocalizedCategories
	SELECT c.CategoryID AS ID, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name, c.Position, c.CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID
	WHERE c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories) AND c.' + @sqlSharingPortalAll + ' AND cl.LocaleCode = @LocaleCode; '
ELSE
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @LocalizedCategories
	SELECT c.CategoryID AS ID, c.CategoryName AS Name, c.Position, c.CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	WHERE c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories) AND c.' + @sqlSharingPortalAll + '; '

IF @FilterByTagsArticleID <> 0
SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempTagIDList TABLE (TagID INT PRIMARY KEY);
	INSERT INTO @TempTagIDList
	SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @FilterByTagsArticleID; '

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByCustomFieldID));

	IF @OrderByColumnName IS NULL
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
		SET @OrderBySecondColumnName = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

IF @OrderBySecondCustomFieldID IS NOT NULL
BEGIN
	SET @OrderBySecondColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderBySecondCustomFieldID));

	IF @OrderBySecondColumnName IS NULL
	BEGIN
		SET @OrderBySecondCustomFieldID = NULL;
		SET @OrderBySecondColumnName = NULL;
	END
END

IF @OrderByThirdCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByThirdColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByThirdCustomFieldID));

	IF @OrderByThirdColumnName IS NULL
	BEGIN
		SET @OrderByThirdCustomFieldID = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

DECLARE @CheckOrStatement BIT;

SET @sqlcommand = @sqlcommand + N'
;WITH MainFilters AS(
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] AS rnb ON na.ArticleID = rnb.ArticleID AND rnb.RotatorID=@RotatorModuleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @FiltredByCategories)
	    INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID '
	    IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	    IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	'
		IF @FilterByDNNGroupID <> 0 
			SET @sqlcommand = @sqlcommand + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
		ELSE IF @FilterByDNNUserID <> 0
			SET @sqlcommand = @sqlcommand + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
	SET @sqlcommand = @sqlcommand + N'
	WHERE ' + @sqlSharingPortal + '
		AND na.Approved = 1
		AND na.Active = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
		IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDNNUserID '
		ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
SET @sqlcommand = @sqlcommand + N'
),
AllContent AS (
	SELECT TOP(@RowCount) ArticleID, StartDate, RecurringID FROM (
	
		SELECT *, ROW_NUMBER() OVER (PARTITION BY ArticleID, RecurringID ORDER BY ArticleID DESC) AS RemoveDuplicates
		FROM (
		
		SELECT n.ArticleID,
			CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate,
			CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
		
		n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified,n.NumberOfComments,n.Title '
		
		IF @OrderByCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		
		IF @OrderBySecondCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
		
		IF @OrderByThirdCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
		
		SET @sqlcommand = @sqlcommand + N'		
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n '
		
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON n.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
		
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN MainFilters AS mf ON mf.ArticleID = n.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
		IF @DateRangeType = 2
			SET @sqlcommand = @sqlcommand + N'
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			OR (nerd.RecurringID IN (SELECT TOP(ned.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
		ELSE IF @DateRangeType = 0
			SET @sqlcommand = @sqlcommand + N'
			(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
		ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
		SET @sqlcommand = @sqlcommand + N'
		WHERE n.ArticleID IN(
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0
					INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @UserViewCategoriesWithFilter)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
				WHERE na.HasPermissions = 0 '
					IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
				SET @sqlcommand = @sqlcommand + N'
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 1
					INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @UserViewCategoriesWithFilter)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2 SET
						@sqlcommand = @sqlcommand + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 0
						SET @sqlcommand = @sqlcommand + N'	
						(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
					SET @sqlcommand = @sqlcommand + N'
				WHERE na.HasPermissions = 0
			) AS HasPermissionsFalse
			UNION ALL
			SELECT [ArticleID] FROM (
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 0
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
					WHERE na.HasPermissions = 1 '
						IF @AdminOrSuperUser = 0
						BEGIN
							SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
							IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
							ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
						END
						IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @sqlcommand = @sqlcommand + N'
					UNION
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0	
					WHERE na.HasPermissions = 1 '
						IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM {databaseOwner}[{objectQualifier}EDS_UserInRoles](@UserID,@PortalID,@CurrentDate)) '
						IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
				SET @sqlcommand = @sqlcommand + N'
				) AS NotRecurring
				UNION ALL
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 1
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @sqlcommand = @sqlcommand + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 0
							SET @sqlcommand = @sqlcommand + N'	
							(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
					SET @sqlcommand = @sqlcommand + N'
					WHERE na.HasPermissions = 1 '
						IF @AdminOrSuperUser = 0
						BEGIN
							SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
							IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
							ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
						END
						SET @sqlcommand = @sqlcommand + N'
					UNION
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @sqlcommand = @sqlcommand + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 0
							SET @sqlcommand = @sqlcommand + N'	
							(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
						SET @sqlcommand = @sqlcommand + N'
					WHERE na.HasPermissions = 1 '
						IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM {databaseOwner}[{objectQualifier}EDS_UserInRoles](@UserID,@PortalID,@CurrentDate)) '
				SET @sqlcommand = @sqlcommand + N'
				) AS Recurring
			) AS HasPermissionsTrue
		)
	) AS inResult
	) AS n WHERE RemoveDuplicates < 2 ORDER BY '
	
	IF @Randomize = 1 SET @sqlcommand = @sqlcommand + N'NEWID() '
	ELSE 
	BEGIN
				
		IF @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'		

		SET @sqlcommand = @sqlcommand + N'n.'+ @OrderByColumnName + N' ' + @OrderByDirection
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'	
			
			SET @sqlcommand = @sqlcommand + N',n.'+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'	
			
			SET @sqlcommand = @sqlcommand + N',n.'+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
		END
	END
	
SET @sqlcommand = @sqlcommand + N'
) '
IF @LocaleCode IS NULL
BEGIN
SET @sqlcommand = @sqlcommand + N'
SELECT ArticleID,UserID,AuthorAliasName,ArticleImage,Title,SubTitle,Description,HTMLContent,FileSystemName, TitleLink,DetailType AS ContentType,
	DetailTypeData, PublishDate,NumberOfViews,RatingValue,DateAdded,ExpireDate,LastModified,NumberOfComments,Position,CategoryID,CFGroupeID, StartDate, RecurringID, '
	IF @CategoryFilterType = 0 SET @sqlcommand = @sqlcommand + CAST(@OpenInTab AS NVARCHAR(20)) + N' AS TabID, ' + CAST(@OpenInModule AS NVARCHAR(20)) +' AS NewsModuleID, '
	ELSE SET @sqlcommand = @sqlcommand + N' CASE WHEN inResult.TabID IS NULL THEN @OpenInTab ELSE inResult.TabID END AS TabID, CASE WHEN inResult.NewsModuleID IS NULL THEN @OpenInModule ELSE inResult.NewsModuleID END AS NewsModuleID, '	
	SET @sqlcommand = @sqlcommand + N'
	EventArticle,
	(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = inResult.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root''))
	 AS CatToShow,ImageSizes
FROM (	
	
	SELECT  n.ArticleID,n.UserID,n.AuthorAliasName,n.ArticleImage,n.Title, n.SubTitle, '
		IF @DescriptionSource = 1 SET @sqlcommand = @sqlcommand + N' n.Summary AS Description, n.Summary AS HTMLContent, '
		ELSE IF @DescriptionSource = 2 SET @sqlcommand = @sqlcommand + N' n.Article AS Description, n.Article AS HTMLContent, '
	
		SET @sqlcommand = @sqlcommand + N'
		rnb.ArticleImage AS FileSystemName, n.TitleLink,n.DetailType, n.DetailTypeData, n.PublishDate,n.NumberOfViews,
		n.RatingValue, n.DateAdded, n.[ExpireDate], n.LastModified,n.NumberOfComments, ncl.Position, ncl.CategoryID, ral.TabID, ral.NewsModuleID, n.EventArticle
		,CFGroupeID, ac.StartDate,ac.RecurringID,rnb.ImageSizes
		,ROW_NUMBER() OVER (PARTITION BY n.ArticleID,ac.RecurringID ORDER BY n.ArticleID DESC) AS RN '
	
		IF @OrderByCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		
		IF @OrderBySecondCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
		
		IF @OrderByThirdCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
	
	SET @sqlcommand = @sqlcommand + N'
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN AllContent AS ac ON ac.ArticleID = n.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] AS rnb ON n.ArticleID = rnb.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON rnb.ArticleID = nc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS ncl ON ncl.CategoryID = nc.CategoryID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral on ral.CategoryID = ncl.CategoryID and ral.ModuleID = @RotatorModuleID '
	
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON n.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
	
	SET @sqlcommand = @sqlcommand + N'
	WHERE rnb.RotatorID=@RotatorModuleID
	
) AS inResult
WHERE RN < 2 ORDER BY '

	IF @Randomize = 1 SET @sqlcommand = @sqlcommand + N'NEWID() '
	ELSE 
	BEGIN
				
		IF @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

		SET @sqlcommand = @sqlcommand + @OrderByColumnName + N' ' + @OrderByDirection
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
		END
	END
	
END
ELSE
BEGIN
SET @sqlcommand = @sqlcommand + N'
SELECT ArticleID,UserID,AuthorAliasName,ArticleImage,Title,SubTitle,CFGroupeID, '
	IF @DescriptionSource = 1 SET @sqlcommand = @sqlcommand + N' Summary AS Description, Summary AS HTMLContent, '
	ELSE IF @DescriptionSource = 2 SET @sqlcommand = @sqlcommand + N' Article AS Description, Article AS HTMLContent, '
	
	SET @sqlcommand = @sqlcommand + N'
	FileSystemName, TitleLink,DetailType AS ContentType, DetailTypeData, PublishDate,NumberOfViews,RatingValue,DateAdded,ExpireDate,LastModified,NumberOfComments,Position,CategoryID, StartDate, RecurringID, '
	IF @CategoryFilterType = 0 SET @sqlcommand = @sqlcommand + CAST(@OpenInTab AS NVARCHAR(20)) + N' AS TabID, ' + CAST(@OpenInModule AS NVARCHAR(20)) +' AS NewsModuleID, '
	ELSE SET @sqlcommand = @sqlcommand + N' CASE WHEN inResult.TabID IS NULL THEN @OpenInTab ELSE inResult.TabID END AS TabID, CASE WHEN inResult.NewsModuleID IS NULL THEN @OpenInModule ELSE inResult.NewsModuleID END AS NewsModuleID, '	
	
	SET @sqlcommand = @sqlcommand + N'
	EventArticle,
	(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = inResult.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root''))
	 AS CatToShow,ImageSizes
	FROM
	(	
		SELECT na.ArticleID,na.UserID,na.AuthorAliasName, na.ArticleImage,
			CASE WHEN ncloc.Title IS NULL THEN na.Title ELSE ncloc.Title END AS Title,
			CASE WHEN ncloc.SubTitle IS NULL THEN na.SubTitle ELSE ncloc.SubTitle END AS SubTitle,
			CASE WHEN ncloc.Summary IS NULL THEN na.Summary ELSE ncloc.Summary END AS Summary,
			CASE WHEN ncloc.Article IS NULL THEN na.Article ELSE ncloc.Article END AS Article,
			rnb.ArticleImage AS FileSystemName,
			CASE WHEN ncloc.clTitleLink IS NULL THEN na.TitleLink ELSE ncloc.clTitleLink END AS TitleLink,
			na.DetailType, na.DetailTypeData, na.PublishDate, na.NumberOfViews, na.RatingValue, na.DateAdded,
			na.[ExpireDate], na.LastModified, na.NumberOfComments, ncl.Position, ncl.CategoryID,
			ral.TabID, ral.NewsModuleID, na.EventArticle,na.CFGroupeID,ac.StartDate,ac.RecurringID,rnb.ImageSizes
			,ROW_NUMBER() OVER (PARTITION BY na.ArticleID,ac.RecurringID ORDER BY na.ArticleID DESC) AS RN '
	
		IF @OrderByCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		
		IF @OrderBySecondCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
		
		IF @OrderByThirdCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
	
		SET @sqlcommand = @sqlcommand + N' 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN AllContent AS ac ON na.ArticleID = ac.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] AS rnb ON rnb.ArticleID = ac.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON nc.ArticleID = rnb.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS ncl ON ncl.CategoryID = nc.CategoryID
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral on ral.CategoryID = ncl.CategoryID and ral.ModuleID = @RotatorModuleID
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncloc ON ncloc.ArticleID = ac.ArticleID AND ncloc.LocaleCode=@LocaleCode '
	
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON na.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
		
		SET @sqlcommand = @sqlcommand + N'
		WHERE rnb.RotatorID=@RotatorModuleID		
	) AS inResult WHERE RN < 2
	ORDER BY '
	
	IF @Randomize = 1 SET @sqlcommand = @sqlcommand + N'NEWID() '
	ELSE 
	BEGIN
				
		IF @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

		SET @sqlcommand = @sqlcommand + @OrderByColumnName + N' ' + @OrderByDirection
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
		END
	END
END

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@RotatorModuleID = @RotatorModuleID
	,@OpenInTab = @OpenInTab
	,@OpenInModule = @OpenInModule
	,@LocaleCode = @LocaleCode
	,@RowCount = @RowCount
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@PermissionsModuleID = @PermissionsModuleID
	,@OnlyOneCategory = @OnlyOneCategory
	,@StartDate = @StartDate
	,@FilterByTagsArticleID = @FilterByTagsArticleID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@OrderBySecondCustomFieldID = @OrderBySecondCustomFieldID
	,@OrderByThirdCustomFieldID = @OrderByThirdCustomFieldID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNRotatorNewsPartitionComparerAllContent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsPartitionComparerAllContent] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsPartitionComparerAllContent]
	@PortalID INT,
	@UserID INT,
	@RotatorModuleID INT,
	@RowCount INT,
	@numPerCategory INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@OrderBySecondColumnName NVARCHAR(30) = NULL,
	@OrderBySecondDirection NVARCHAR(4) = NULL,
	@OrderBySecondCustomFieldID INT = NULL,
	@OrderByThirdColumnName NVARCHAR(30) = NULL,
	@OrderByThirdDirection NVARCHAR(4) = NULL,
	@OrderByThirdCustomFieldID INT = NULL,
	@Featured BIT = 0,
	@OnlyWithImage BIT = 1,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@ShowAllAuthors BIT = 1,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 0,
	@PermissionSettingsSource TINYINT = 0,
	@PermissionsModuleID INT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@HideUnlocalizedItems BIT = 0,
	@OnlyOneCategory INT = 0,
	@StartDate DATETIME = NULL,
	@DateRangeType TINYINT = 0,
	@FilterByTagsArticleID INT = 0,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(500);
SET @paramList = N'
	 @PortalID INT
	,@UserID INT
	,@RotatorModuleID INT
	,@LocaleCode NVARCHAR(20)
	,@RowCount INT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@PermissionsModuleID INT
	,@OnlyOneCategory INT
	,@numPerCategory INT
	,@StartDate DATETIME
	,@FilterByTagsArticleID INT
	,@OrderByCustomFieldID INT
	,@OrderBySecondCustomFieldID INT
	,@OrderByThirdCustomFieldID INT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource TINYINT
	,@IsPortalSharing BIT'

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @UserViewCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT PRIMARY KEY);
DECLARE @FiltredByCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @UserInRoles TABLE (RoleID INT PRIMARY KEY);

INSERT INTO @UserInRoles SELECT [RoleID] FROM {databaseOwner}[{objectQualifier}EDS_UserInRoles](@UserID,@PortalID,@CurrentDate); '

DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @RotatorModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_NewsViewCategoriesMultiPortal](@RotatorModuleID,@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate) '
ELSE
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_RotatorNewsViewCategories](@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate); '

IF @OnlyOneCategory <> 0 -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @OnlyOneCategory;
	INSERT INTO @FiltredByCategories SELECT @OnlyOneCategory; '
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '; '
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral ON ral.CategoryID = cl.CategoryID AND ral.ModuleID = @RotatorModuleID
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID)) AND ' + @sqlSharingPortalAll + '
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.' + @sqlSharingPortalAll + '
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; '
	END
END

IF @ShowAllAuthors = 0
	SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @RotatorModuleID
	UNION 
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @RotatorModuleID; '

IF @FilterByTagsArticleID <> 0
SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempTagIDList TABLE (TagID INT PRIMARY KEY);
	INSERT INTO @TempTagIDList
	SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @FilterByTagsArticleID; '

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByCustomFieldID));

	IF @OrderByColumnName IS NULL
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
		SET @OrderBySecondColumnName = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

IF @OrderBySecondCustomFieldID IS NOT NULL
BEGIN
	SET @OrderBySecondColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderBySecondCustomFieldID));

	IF @OrderBySecondColumnName IS NULL
	BEGIN
		SET @OrderBySecondCustomFieldID = NULL;
		SET @OrderBySecondColumnName = NULL;
	END
END

IF @OrderByThirdCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByThirdColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByThirdCustomFieldID));

	IF @OrderByThirdColumnName IS NULL
	BEGIN
		SET @OrderByThirdCustomFieldID = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

SET @sqlcommand = @sqlcommand + N'
;WITH MainFilters AS(
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	    INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID '
	    IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	    IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	'
		IF @FilterByDNNGroupID <> 0 
			SET @sqlcommand = @sqlcommand + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
		ELSE IF @FilterByDNNUserID <> 0
			SET @sqlcommand = @sqlcommand + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
	SET @sqlcommand = @sqlcommand + N'
	WHERE ' + @sqlSharingPortal + '
		AND na.Approved = 1
		AND na.Active = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
		IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDNNUserID '
		ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
SET @sqlcommand = @sqlcommand + N'
),
GroupArticlesByCategory AS(
	SELECT TOP (@RowCount) * FROM (
	SELECT *, ROW_NUMBER() OVER (PARTITION BY ArticleID, RecurringID ORDER BY ArticleID DESC) AS RemoveDuplicates
	FROM (
		SELECT n.[ArticleID], n.[PortalID],
			CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
			CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
			n.[ArticleImage],cl.[Position]';
		
		IF @OrderByCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		ELSE IF @OrderByColumnName <> N'StartDate'
			SET @sqlcommand = @sqlcommand + N',n.' + @OrderByColumnName;
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondCustomFieldID IS NOT NULL	
				SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
			ELSE IF @OrderBySecondColumnName <> N'StartDate'
				SET @sqlcommand = @sqlcommand + N',n.' + @OrderBySecondColumnName;
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdCustomFieldID IS NOT NULL
				SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
			ELSE IF @OrderByThirdColumnName <> N'StartDate'
				SET @sqlcommand = @sqlcommand + N',n.' + @OrderByThirdColumnName;
		END
		
		SET @sqlcommand = @sqlcommand + N'
		,ROW_NUMBER() OVER (PARTITION BY cl.CategoryID ORDER BY '
				
		IF @OrderByCustomFieldID IS NULL
			IF @OrderByColumnName <> N'StartDate'
				SET @sqlcommand = @sqlcommand + N'n.'+ @OrderByColumnName + N' ' + @OrderByDirection
			ELSE
				SET @sqlcommand = @sqlcommand + N'(CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END) ' + @OrderByDirection
		ELSE
		BEGIN
			IF @OrderByDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
			SET @sqlcommand = @sqlcommand + N'fv.'+ @OrderByColumnName + N' ' + @OrderByDirection;
		END
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondCustomFieldID IS NULL
				IF @OrderBySecondColumnName <> N'StartDate'
					SET @sqlcommand = @sqlcommand + N',n.'+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
				ELSE
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END) ' + @OrderBySecondDirection
			ELSE
			BEGIN
				IF @OrderBySecondDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
				SET @sqlcommand = @sqlcommand + N',fv.'+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection;
			END
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN		
			IF @OrderByThirdCustomFieldID IS NULL
				IF @OrderByThirdColumnName <> N'StartDate'
					SET @sqlcommand = @sqlcommand + N',n.'+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
				ELSE
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END) ' + @OrderByThirdDirection
			ELSE
			BEGIN
				IF @OrderByThirdDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
				SET @sqlcommand = @sqlcommand + N',fv.'+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection;
			END
		END
		
		SET @sqlcommand = @sqlcommand + N', cl.Position ASC ) AS [Order]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n '
				
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			DECLARE @CheckOrStatement BIT;
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON n.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
		
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN MainFilters AS mf ON n.ArticleID = mf.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON n.ArticleID = nc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl ON cl.CategoryID=nc.CategoryID
		INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = nc.CategoryID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
		IF @DateRangeType = 2
			SET @sqlcommand = @sqlcommand + N'
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			OR (nerd.RecurringID IN (SELECT TOP(ned.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
		ELSE IF @DateRangeType = 0
			SET @sqlcommand = @sqlcommand + N'
			(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
		ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		SET @sqlcommand = @sqlcommand + N'
		WHERE n.ArticleID IN(
			SELECT ArticleID FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON na.ArticleID = nc.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = nc.CategoryID
				WHERE na.HasPermissions = 0
				UNION ALL
				SELECT ArticleID FROM (
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					WHERE na.HasPermissions = 1 '
						IF @AdminOrSuperUser = 0
						BEGIN
							SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
							IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
							ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
						END
					SET @sqlcommand = @sqlcommand + N'
					UNION
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					WHERE na.HasPermissions = 1 '
						IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles) '
				SET @sqlcommand = @sqlcommand + N'
				) AS HasPermissions
			) AS OnlyArticles
			UNION ALL
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0
					INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
				WHERE na.HasPermissions = 0 '
					IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
				SET @sqlcommand = @sqlcommand + N'
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 1
					INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
						SET @sqlcommand = @sqlcommand + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 0
						SET @sqlcommand = @sqlcommand + N'	
						(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
					SET @sqlcommand = @sqlcommand + N'
				WHERE na.HasPermissions = 0
			) AS HasPermissionsFalse
			UNION ALL
			SELECT [ArticleID] FROM (
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 0
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
					WHERE na.HasPermissions = 1 '
						IF @AdminOrSuperUser = 0
						BEGIN
							SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
							IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
							ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
						END
						IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @sqlcommand = @sqlcommand + N'
					UNION
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
					WHERE na.HasPermissions = 1 '
						IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles) '
						IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
				SET @sqlcommand = @sqlcommand + N'
				) AS NotRecurring
				UNION ALL
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 1
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @sqlcommand = @sqlcommand + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 0
							SET @sqlcommand = @sqlcommand + N'	
							(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
					SET @sqlcommand = @sqlcommand + N'
					WHERE na.HasPermissions = 1 '
						IF @AdminOrSuperUser = 0
						BEGIN
							SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
							IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
							ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
						END
						SET @sqlcommand = @sqlcommand + N'
					UNION
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @sqlcommand = @sqlcommand + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 0
							SET @sqlcommand = @sqlcommand + N'	
							(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
						SET @sqlcommand = @sqlcommand + N'
					WHERE na.HasPermissions = 1 '
						IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles) '
				SET @sqlcommand = @sqlcommand + N'
				) AS Recurring
			) AS HasPermissionsTrue			
		)
	) AS tempinResult WHERE tempinResult.[Order] <= @numPerCategory
	) AS inResult WHERE RemoveDuplicates < 2
	 ORDER BY '

	IF @OrderByDirection = 'ASC'
		SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

	SET @sqlcommand = @sqlcommand + @OrderByColumnName + N' ' + @OrderByDirection
	
	IF @OrderBySecondColumnName IS NOT NULL
	BEGIN
		IF @OrderBySecondDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
		
		SET @sqlcommand = @sqlcommand + N','+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
	END
	
	IF @OrderByThirdColumnName IS NOT NULL
	BEGIN
		IF @OrderByThirdDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
		
		SET @sqlcommand = @sqlcommand + N','+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
	END
	
	SET @sqlcommand = @sqlcommand + N', Position ASC
),
NoRecuringData AS (
	SELECT DISTINCT ArticleID, PortalID, ArticleImage FROM GroupArticlesByCategory
)
SELECT c.ArticleID, c.[PortalID], c.[ArticleImage], rnb.[ArticleImage] AS RotatorImage, CAST(CASE WHEN (rnb.ArticleID IS NULL OR (rnb.Flag <> 3 AND rnb.Flag <> 5)) THEN 1 ELSE 0 END AS BIT) AS CreateImage
FROM  NoRecuringData AS c
LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] rnb ON c.ArticleID = rnb.ArticleID AND RotatorID=@RotatorModuleID;'

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@RotatorModuleID = @RotatorModuleID
	,@LocaleCode = @LocaleCode
	,@RowCount = @RowCount
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@PermissionsModuleID = @PermissionsModuleID
	,@OnlyOneCategory = @OnlyOneCategory
	,@numPerCategory = @numPerCategory
	,@StartDate = @StartDate
	,@FilterByTagsArticleID = @FilterByTagsArticleID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@OrderBySecondCustomFieldID = @OrderBySecondCustomFieldID
	,@OrderByThirdCustomFieldID = @OrderByThirdCustomFieldID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNRotatorNewsPartitionComparerArticles]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsPartitionComparerArticles] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsPartitionComparerArticles]
	@PortalID INT,
	@UserID INT,
	@RotatorModuleID INT,
	@RowCount INT,
	@numPerCategory INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@OrderBySecondColumnName NVARCHAR(30) = NULL,
	@OrderBySecondDirection NVARCHAR(4) = NULL,
	@OrderBySecondCustomFieldID INT = NULL,
	@OrderByThirdColumnName NVARCHAR(30) = NULL,
	@OrderByThirdDirection NVARCHAR(4) = NULL,
	@OrderByThirdCustomFieldID INT = NULL,
	@Featured BIT = 0,
	@OnlyWithImage BIT = 1,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@ShowAllAuthors BIT = 1,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 0,
	@PermissionSettingsSource TINYINT = 0,
	@PermissionsModuleID INT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@HideUnlocalizedItems BIT = 0,
	@OnlyOneCategory INT = 0,
	@FilterByTagsArticleID INT = 0,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @sqlcommand NVARCHAR(max);
DECLARE @paramList NVARCHAR(500);
SET @paramList = N'
	 @PortalID INT
	,@UserID INT
	,@RotatorModuleID INT
	,@LocaleCode NVARCHAR(20)
	,@RowCount INT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@PermissionsModuleID INT
	,@OnlyOneCategory INT
	,@numPerCategory INT
	,@FilterByTagsArticleID INT
	,@OrderByCustomFieldID INT
	,@OrderBySecondCustomFieldID INT
	,@OrderByThirdCustomFieldID INT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource TINYINT
	,@IsPortalSharing BIT'

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @UserViewCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT PRIMARY KEY);
DECLARE @FiltredByCategories TABLE (CategoryID INT PRIMARY KEY); '

DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @RotatorModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_NewsViewCategoriesMultiPortal](@RotatorModuleID,@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate) '
ELSE
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_RotatorNewsViewCategories](@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate); '

IF @OnlyOneCategory <> 0 -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @OnlyOneCategory;
	INSERT INTO @FiltredByCategories SELECT @OnlyOneCategory; '
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '; '
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral ON ral.CategoryID = cl.CategoryID AND ral.ModuleID = @RotatorModuleID
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		;WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID)) AND ' + @sqlSharingPortalAll + '
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.' + @sqlSharingPortalAll + '
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; '
	END
END

IF @ShowAllAuthors = 0
SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @RotatorModuleID
	UNION 
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @RotatorModuleID; '

IF @FilterByTagsArticleID <> 0
SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempTagIDList TABLE (TagID INT PRIMARY KEY);
	INSERT INTO @TempTagIDList
	SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @FilterByTagsArticleID; '

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByCustomFieldID));

	IF @OrderByColumnName IS NULL
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
		SET @OrderBySecondColumnName = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

IF @OrderBySecondCustomFieldID IS NOT NULL
BEGIN
	SET @OrderBySecondColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderBySecondCustomFieldID));

	IF @OrderBySecondColumnName IS NULL
	BEGIN
		SET @OrderBySecondCustomFieldID = NULL;
		SET @OrderBySecondColumnName = NULL;
	END
END

IF @OrderByThirdCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByThirdColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByThirdCustomFieldID));

	IF @OrderByThirdColumnName IS NULL
	BEGIN
		SET @OrderByThirdCustomFieldID = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

SET @sqlcommand = @sqlcommand + N'
;WITH MainFilters AS(
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	    INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID '
	    IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	    IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	'
		IF @FilterByDNNGroupID <> 0 
			SET @sqlcommand = @sqlcommand + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
		ELSE IF @FilterByDNNUserID <> 0
			SET @sqlcommand = @sqlcommand + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
	SET @sqlcommand = @sqlcommand + N'
	WHERE ' + @sqlSharingPortal + '
		AND na.Approved = 1
		AND na.Active = 1
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
		IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDNNUserID '
		ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
SET @sqlcommand = @sqlcommand + N'
),
GroupArticlesByCategory AS(
	SELECT n.[ArticleID],n.[PortalID],n.[ArticleImage],cl.[Position]';
		
		IF @OrderByCustomFieldID IS NULL
			SET @sqlcommand = @sqlcommand + N',n.' + @OrderByColumnName;
		ELSE
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondCustomFieldID IS NULL	
				SET @sqlcommand = @sqlcommand + N',n.' + @OrderBySecondColumnName;
			ELSE
				SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdCustomFieldID IS NULL
				SET @sqlcommand = @sqlcommand + N',n.' + @OrderByThirdColumnName;
			ELSE 
				SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
		END
		
		SET @sqlcommand = @sqlcommand + N'
		,ROW_NUMBER() OVER (PARTITION BY cl.CategoryID ORDER BY '
				
		IF @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
		IF @OrderByCustomFieldID IS NULL
			SET @sqlcommand = @sqlcommand + N'n.'+ @OrderByColumnName + N' ' + @OrderByDirection
		ELSE
			SET @sqlcommand = @sqlcommand + N'fv.'+ @OrderByColumnName + N' ' + @OrderByDirection;
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			IF @OrderBySecondCustomFieldID IS NULL
				SET @sqlcommand = @sqlcommand + N',n.'+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
			ELSE
				SET @sqlcommand = @sqlcommand + N',fv.'+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection;
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			IF @OrderByThirdCustomFieldID IS NULL
				SET @sqlcommand = @sqlcommand + N',n.'+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
			ELSE
				SET @sqlcommand = @sqlcommand + N',fv.'+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection;
		END
		
		SET @sqlcommand = @sqlcommand + N', cl.Position ASC ) AS [Order]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n '
				
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			DECLARE @CheckOrStatement BIT;
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON n.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
		
		SET @sqlcommand = @sqlcommand + N'
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON n.ArticleID = nc.ArticleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl ON cl.CategoryID = nc.CategoryID
	INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = nc.CategoryID
	WHERE n.ArticleID IN(
		SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON na.ArticleID = nc.ArticleID
			INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = nc.CategoryID
		WHERE na.HasPermissions = 0
		UNION ALL
		SELECT ArticleID FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			WHERE na.HasPermissions = 1 '
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
					IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
					ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
				END
			SET @sqlcommand = @sqlcommand + N'
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
			WHERE na.HasPermissions = 1 '
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM {databaseOwner}[{objectQualifier}EDS_UserInRoles](@UserID,@PortalID,@CurrentDate)) '
		SET @sqlcommand = @sqlcommand + N'
		) AS HasPermissions
	)
)
SELECT TOP (@RowCount) c.ArticleID, c.[PortalID], c.[ArticleImage], rnb.[ArticleImage] AS RotatorImage, CAST(CASE WHEN (rnb.ArticleID IS NULL OR (rnb.Flag <> 3 AND rnb.Flag <> 5)) THEN 1 ELSE 0 END AS BIT) AS CreateImage
FROM  [GroupArticlesByCategory] AS c
LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] rnb ON c.ArticleID = rnb.ArticleID AND RotatorID=@RotatorModuleID
WHERE c.[Order] <= @numPerCategory ORDER BY '

	IF @OrderByDirection = 'ASC'
		SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

	SET @sqlcommand = @sqlcommand + @OrderByColumnName + N' ' + @OrderByDirection
	
	IF @OrderBySecondColumnName IS NOT NULL
	BEGIN
		IF @OrderBySecondDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
		
		SET @sqlcommand = @sqlcommand + N','+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
	END
	
	IF @OrderByThirdColumnName IS NOT NULL
	BEGIN
		IF @OrderByThirdDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
		
		SET @sqlcommand = @sqlcommand + N','+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
	END
	
	SET @sqlcommand = @sqlcommand + N', c.Position ASC; '

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@RotatorModuleID = @RotatorModuleID
    ,@LocaleCode = @LocaleCode
	,@RowCount = @RowCount
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@PermissionsModuleID = @PermissionsModuleID
	,@OnlyOneCategory = @OnlyOneCategory
	,@numPerCategory = @numPerCategory
	,@FilterByTagsArticleID = @FilterByTagsArticleID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@OrderBySecondCustomFieldID = @OrderBySecondCustomFieldID
	,@OrderByThirdCustomFieldID = @OrderByThirdCustomFieldID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNRotatorNewsPartitionComparerEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsPartitionComparerEvents] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsPartitionComparerEvents]
	@PortalID INT,
	@UserID INT,
	@RotatorModuleID INT,
	@RowCount INT,
	@numPerCategory INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@OrderBySecondColumnName NVARCHAR(30) = NULL,
	@OrderBySecondDirection NVARCHAR(4) = NULL,
	@OrderBySecondCustomFieldID INT = NULL,
	@OrderByThirdColumnName NVARCHAR(30) = NULL,
	@OrderByThirdDirection NVARCHAR(4) = NULL,
	@OrderByThirdCustomFieldID INT = NULL,
	@Featured BIT = 0,
	@OnlyWithImage BIT = 1,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@ShowAllAuthors BIT = 1,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 0,
	@PermissionSettingsSource TINYINT = 0,
	@PermissionsModuleID INT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@HideUnlocalizedItems BIT = 0,
	@OnlyOneCategory INT = 0,
	@StartDate DATETIME = NULL,
	@DateRangeType TINYINT = 0,
	@FilterByTagsArticleID INT = 0,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(500);
SET @paramList = N'
	 @PortalID INT
	,@UserID INT
	,@RotatorModuleID INT
	,@LocaleCode NVARCHAR(20)
	,@RowCount INT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@PermissionsModuleID INT
	,@OnlyOneCategory INT
	,@numPerCategory INT
	,@StartDate DATETIME
	,@FilterByTagsArticleID INT
	,@OrderByCustomFieldID INT
	,@OrderBySecondCustomFieldID INT
	,@OrderByThirdCustomFieldID INT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource TINYINT
	,@IsPortalSharing BIT'

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @UserViewCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT PRIMARY KEY);
DECLARE @FiltredByCategories TABLE (CategoryID INT PRIMARY KEY); '

DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @RotatorModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_NewsViewCategoriesMultiPortal](@RotatorModuleID,@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate) '
ELSE
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_RotatorNewsViewCategories](@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate); '

IF @OnlyOneCategory <> 0 -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @OnlyOneCategory;
	INSERT INTO @FiltredByCategories SELECT @OnlyOneCategory; '
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '; '
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral ON ral.CategoryID = cl.CategoryID AND ral.ModuleID = @RotatorModuleID
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID)) AND ' + @sqlSharingPortalAll + '
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.' + @sqlSharingPortalAll + '
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; '
	END
END

IF @ShowAllAuthors = 0
SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @RotatorModuleID
	UNION 
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @RotatorModuleID; '

IF @FilterByTagsArticleID <> 0
SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempTagIDList TABLE (TagID INT PRIMARY KEY);
	INSERT INTO @TempTagIDList
	SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @FilterByTagsArticleID; '

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByCustomFieldID));

	IF @OrderByColumnName IS NULL
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
		SET @OrderBySecondColumnName = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

IF @OrderBySecondCustomFieldID IS NOT NULL
BEGIN
	SET @OrderBySecondColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderBySecondCustomFieldID));

	IF @OrderBySecondColumnName IS NULL
	BEGIN
		SET @OrderBySecondCustomFieldID = NULL;
		SET @OrderBySecondColumnName = NULL;
	END
END

IF @OrderByThirdCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByThirdColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByThirdCustomFieldID));

	IF @OrderByThirdColumnName IS NULL
	BEGIN
		SET @OrderByThirdCustomFieldID = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

SET @sqlcommand = @sqlcommand + N'
;WITH MainFilters AS(
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	    INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
	    INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID '
	    IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	    IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID	'
		IF @FilterByDNNGroupID <> 0 
			SET @sqlcommand = @sqlcommand + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
		ELSE IF @FilterByDNNUserID <> 0
			SET @sqlcommand = @sqlcommand + N'
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
	SET @sqlcommand = @sqlcommand + N'
	WHERE ' + @sqlSharingPortal + '
		AND na.Approved = 1
		AND na.Active = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
		IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID = @FilterByDNNUserID '
		ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
SET @sqlcommand = @sqlcommand + N'
),
GroupArticlesByCategory AS(
	SELECT TOP (@RowCount) * FROM (
	SELECT *, ROW_NUMBER() OVER (PARTITION BY ArticleID, RecurringID ORDER BY ArticleID DESC) AS RemoveDuplicates
	FROM (
		SELECT n.[ArticleID], n.[PortalID],
			CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
			CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate,
			n.[ArticleImage],cl.[Position]';
		
		IF @OrderByCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		ELSE IF @OrderByColumnName <> N'StartDate'
			SET @sqlcommand = @sqlcommand + N',n.' + @OrderByColumnName;
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondCustomFieldID IS NOT NULL	
				SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
			ELSE IF @OrderBySecondColumnName <> N'StartDate'
				SET @sqlcommand = @sqlcommand + N',n.' + @OrderBySecondColumnName;
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdCustomFieldID IS NOT NULL
				SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
			ELSE IF @OrderByThirdColumnName <> N'StartDate'
				SET @sqlcommand = @sqlcommand + N',n.' + @OrderByThirdColumnName;
		END
		
		SET @sqlcommand = @sqlcommand + N'
		,ROW_NUMBER() OVER (PARTITION BY cl.CategoryID ORDER BY '
		
		IF @OrderByCustomFieldID IS NULL
			IF @OrderByColumnName <> N'StartDate'
				SET @sqlcommand = @sqlcommand + N'n.'+ @OrderByColumnName + N' ' + @OrderByDirection
			ELSE
				SET @sqlcommand = @sqlcommand + N'(CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END) ' + @OrderByDirection
		ELSE
		BEGIN
			IF @OrderByDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
			SET @sqlcommand = @sqlcommand + N'fv.'+ @OrderByColumnName + N' ' + @OrderByDirection;
		END
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondCustomFieldID IS NULL
				IF @OrderBySecondColumnName <> N'StartDate'
					SET @sqlcommand = @sqlcommand + N',n.'+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
				ELSE
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END) ' + @OrderBySecondDirection
			ELSE
			BEGIN
				IF @OrderBySecondDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
				SET @sqlcommand = @sqlcommand + N',fv.'+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection;
			END
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN		
			IF @OrderByThirdCustomFieldID IS NULL
				IF @OrderByThirdColumnName <> N'StartDate'
					SET @sqlcommand = @sqlcommand + N',n.'+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
				ELSE
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END) ' + @OrderByThirdDirection
			ELSE
			BEGIN
				IF @OrderByThirdDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
				SET @sqlcommand = @sqlcommand + N',fv.'+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection;
			END
		END
						
		SET @sqlcommand = @sqlcommand + N', cl.Position ASC ) AS [Order]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n '
				
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			DECLARE @CheckOrStatement BIT;
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON n.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
		
		SET @sqlcommand = @sqlcommand + N'
		INNER JOIN MainFilters AS mf ON n.ArticleID = mf.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON n.ArticleID = nc.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl ON cl.CategoryID=nc.CategoryID
		INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = nc.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
		IF @DateRangeType = 2
			SET @sqlcommand = @sqlcommand + N'
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			OR (nerd.RecurringID IN (SELECT TOP(ned.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
		ELSE IF @DateRangeType = 0
			SET @sqlcommand = @sqlcommand + N'
			(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
		ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		SET @sqlcommand = @sqlcommand + N'
		WHERE n.ArticleID IN(
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0
					INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
				WHERE na.HasPermissions = 0 '
					IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
				SET @sqlcommand = @sqlcommand + N'
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 1
					INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 2
						SET @sqlcommand = @sqlcommand + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 0
						SET @sqlcommand = @sqlcommand + N'	
						(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
					SET @sqlcommand = @sqlcommand + N'
				WHERE na.HasPermissions = 0
			) AS HasPermissionsFalse
			UNION ALL
			SELECT [ArticleID] FROM (
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 0
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
					WHERE na.HasPermissions = 1 '
						IF @AdminOrSuperUser = 0
						BEGIN
							SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
							IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
							ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
						END
						IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @sqlcommand = @sqlcommand + N'
					UNION
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0	
					WHERE na.HasPermissions = 1 '
						IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM {databaseOwner}[{objectQualifier}EDS_UserInRoles](@UserID,@PortalID,@CurrentDate)) '
						IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
				SET @sqlcommand = @sqlcommand + N'
				) AS NotRecurring
				UNION ALL
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 1
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @sqlcommand = @sqlcommand + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 0
							SET @sqlcommand = @sqlcommand + N'	
							(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
					SET @sqlcommand = @sqlcommand + N'
					WHERE na.HasPermissions = 1 '
						IF @AdminOrSuperUser = 0
						BEGIN
							SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
							IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
							ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
						END
						SET @sqlcommand = @sqlcommand + N'
					UNION
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @sqlcommand = @sqlcommand + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 0
							SET @sqlcommand = @sqlcommand + N'
							(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
		
						SET @sqlcommand = @sqlcommand + N'
					WHERE na.HasPermissions = 1 '
						IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM {databaseOwner}[{objectQualifier}EDS_UserInRoles](@UserID,@PortalID,@CurrentDate)) '
				SET @sqlcommand = @sqlcommand + N'
				) AS Recurring
			) AS HasPermissionsTrue
		)
	) AS tempinResult WHERE tempinResult.[Order] <= @numPerCategory
	) AS inResult WHERE RemoveDuplicates < 2
	 ORDER BY '

	IF @OrderByDirection = 'ASC'
		SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

	SET @sqlcommand = @sqlcommand + @OrderByColumnName + N' ' + @OrderByDirection
	
	IF @OrderBySecondColumnName IS NOT NULL
	BEGIN
		IF @OrderBySecondDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
		
		SET @sqlcommand = @sqlcommand + N','+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
	END
	
	IF @OrderByThirdColumnName IS NOT NULL
	BEGIN
		IF @OrderByThirdDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
		
		SET @sqlcommand = @sqlcommand + N','+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
	END
	
	SET @sqlcommand = @sqlcommand + N', Position ASC
),
NoRecuringData AS (
	SELECT DISTINCT ArticleID, PortalID, ArticleImage FROM GroupArticlesByCategory
)
SELECT c.ArticleID, c.[PortalID], c.[ArticleImage], rnb.[ArticleImage] AS RotatorImage, CAST(CASE WHEN (rnb.ArticleID IS NULL OR (rnb.Flag <> 3 AND rnb.Flag <> 5)) THEN 1 ELSE 0 END AS BIT) AS CreateImage
FROM  NoRecuringData AS c
LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] rnb ON c.ArticleID = rnb.ArticleID AND RotatorID=@RotatorModuleID;'

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@RotatorModuleID = @RotatorModuleID
    ,@LocaleCode = @LocaleCode
	,@RowCount = @RowCount
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@PermissionsModuleID = @PermissionsModuleID
	,@OnlyOneCategory = @OnlyOneCategory
	,@numPerCategory = @numPerCategory
	,@StartDate = @StartDate
	,@FilterByTagsArticleID = @FilterByTagsArticleID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@OrderBySecondCustomFieldID = @OrderBySecondCustomFieldID
	,@OrderByThirdCustomFieldID = @OrderByThirdCustomFieldID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNrotatorNewsPartitionGetAllContent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNrotatorNewsPartitionGetAllContent] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNrotatorNewsPartitionGetAllContent]
	@PortalID INT,
	@UserID INT,
	@RotatorModuleID INT,
	@OpenInTab INT,
	@OpenInModule INT,
	@RowCount INT,
	@numPerCategory INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@OrderBySecondColumnName NVARCHAR(30) = NULL,
	@OrderBySecondDirection NVARCHAR(4) = NULL,
	@OrderBySecondCustomFieldID INT = NULL,
	@OrderByThirdColumnName NVARCHAR(30) = NULL,
	@OrderByThirdDirection NVARCHAR(4) = NULL,
	@OrderByThirdCustomFieldID INT = NULL,
	@Featured BIT = 0,
	@OnlyWithImage BIT = 1,
	@Randomize BIT = 0,
	@DescriptionSource TINYINT = 1,
	@LocaleCode NVARCHAR(20) = NULL,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@ShowAllAuthors BIT = 1,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 0,
	@PermissionSettingsSource TINYINT = 0,
	@PermissionsModuleID INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@OnlyOneCategory INT = 0,
	@StartDate DATETIME = NULL,
	@DateRangeType TINYINT = 0,
	@FilterByTagsArticleID INT = 0,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(500);
SET @paramList = N'
	 @PortalID INT
	,@UserID INT
	,@RotatorModuleID INT
	,@OpenInTab INT
	,@OpenInModule INT
	,@LocaleCode NVARCHAR(20)
	,@RowCount INT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@PermissionsModuleID INT
	,@OnlyOneCategory INT
	,@numPerCategory INT
	,@StartDate DATETIME
	,@FilterByTagsArticleID INT
	,@OrderByCustomFieldID INT
	,@OrderBySecondCustomFieldID INT
	,@OrderByThirdCustomFieldID INT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource TINYINT
	,@IsPortalSharing BIT'

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @UserViewCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT PRIMARY KEY);
DECLARE @FiltredByCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @LocalizedCategories TABLE (ID INT PRIMARY KEY, Name NVARCHAR(200), Position INT, CategoryURL NVARCHAR(1500));
DECLARE @UserInRoles TABLE (RoleID INT PRIMARY KEY);

INSERT INTO @UserInRoles SELECT [RoleID] FROM {databaseOwner}[{objectQualifier}EDS_UserInRoles](@UserID,@PortalID,@CurrentDate); '

DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @RotatorModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_NewsViewCategoriesMultiPortal](@RotatorModuleID,@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate) '
ELSE
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_RotatorNewsViewCategories](@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate); '

IF @OnlyOneCategory <> 0 -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand + N' 
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @OnlyOneCategory;
	INSERT INTO @FiltredByCategories SELECT @OnlyOneCategory; '
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
		SET @sqlcommand = @sqlcommand + N' 
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '; '
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlcommand = @sqlcommand + N' 
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral ON ral.CategoryID = cl.CategoryID AND ral.ModuleID = @RotatorModuleID
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		SET @sqlcommand = @sqlcommand + N' 
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID)) AND ' + @sqlSharingPortalAll + '
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.' + @sqlSharingPortalAll + '
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; '
END

IF @ShowAllAuthors = 0
	SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @RotatorModuleID
	UNION 
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @RotatorModuleID; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @LocalizedCategories
	SELECT c.CategoryID AS ID, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name, c.Position, c.CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID
	WHERE c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories) AND c.' + @sqlSharingPortalAll + ' AND cl.LocaleCode = @LocaleCode; '
ELSE
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @LocalizedCategories
	SELECT c.CategoryID AS ID, c.CategoryName AS Name, c.Position, c.CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	WHERE c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories) AND c.' + @sqlSharingPortalAll + '; '

IF @FilterByTagsArticleID <> 0
SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempTagIDList TABLE (TagID INT PRIMARY KEY);
	INSERT INTO @TempTagIDList
	SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @FilterByTagsArticleID; '

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByCustomFieldID));

	IF @OrderByColumnName IS NULL
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
		SET @OrderBySecondColumnName = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

IF @OrderBySecondCustomFieldID IS NOT NULL
BEGIN
	SET @OrderBySecondColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderBySecondCustomFieldID));

	IF @OrderBySecondColumnName IS NULL
	BEGIN
		SET @OrderBySecondCustomFieldID = NULL;
		SET @OrderBySecondColumnName = NULL;
	END
END

IF @OrderByThirdCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByThirdColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByThirdCustomFieldID));

	IF @OrderByThirdColumnName IS NULL
	BEGIN
		SET @OrderByThirdCustomFieldID = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

DECLARE @CheckOrStatement BIT;

SET @sqlcommand = @sqlcommand + N'
;WITH MainFilters AS(
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] AS rnb ON na.ArticleID = rnb.ArticleID AND rnb.RotatorID=@RotatorModuleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	    INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID'
	    IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	    IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID '
	SET @sqlcommand = @sqlcommand + N'
	WHERE ' + @sqlSharingPortal + '
		AND na.Approved = 1
		AND na.Active = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
		IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
		IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
SET @sqlcommand = @sqlcommand + N'
)'
IF @LocaleCode IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	, AllContent AS ('
END
ELSE IF @Randomize = 1 SET @sqlcommand = @sqlcommand + N'SELECT * FROM (' 

	SET @sqlcommand = @sqlcommand + N'
	SELECT TOP(@RowCount) ArticleID,UserID,AuthorAliasName, StartDate, RecurringID,ArticleImage,Title,SubTitle,Description,HTMLContent,FileSystemName,TitleLink,DetailType AS ContentType, DetailTypeData, PublishDate,NumberOfViews,RatingValue,DateAdded,ExpireDate,LastModified,NumberOfComments,Position,CategoryID,CFGroupeID,'
	IF @CategoryFilterType = 0 SET @sqlcommand = @sqlcommand + CAST(@OpenInTab AS NVARCHAR(20)) + N' AS TabID, ' + CAST(@OpenInModule AS NVARCHAR(20)) + ' AS NewsModuleID, '
	ELSE SET @sqlcommand = @sqlcommand + N' CASE WHEN inResult.TabID IS NULL THEN @OpenInTab ELSE inResult.TabID END AS TabID, CASE WHEN inResult.NewsModuleID IS NULL THEN @OpenInModule ELSE inResult.NewsModuleID END AS NewsModuleID, '
	SET @sqlcommand = @sqlcommand + N'
	EventArticle,
	(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = inResult.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root''))
	AS CatToShow,ImageSizes
	FROM (
		SELECT *, ROW_NUMBER() OVER (PARTITION BY ArticleID, RecurringID ORDER BY ArticleID DESC) AS RemoveDuplicates
		FROM (
			SELECT n.ArticleID,n.UserID,n.AuthorAliasName,
			CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
			CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
			n.ArticleImage,n.Title,n.SubTitle,'
			IF @DescriptionSource = 1 SET @sqlcommand = @sqlcommand + N'n.Summary AS Description,n.Summary AS HTMLContent, '
			ELSE IF @DescriptionSource = 2 SET @sqlcommand = @sqlcommand + N'n.Article AS Description,n.Article AS HTMLContent, '
			SET @sqlcommand = @sqlcommand + N'
			rnb.ArticleImage AS FileSystemName,TitleLink,n.DetailType,n.DetailTypeData,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.[ExpireDate],
			n.LastModified,n.NumberOfComments,ncl.Position,ncl.CategoryID,ral.TabID,ral.NewsModuleID,n.EventArticle,n.CFGroupeID,rnb.ImageSizes,
			ROW_NUMBER() OVER (PARTITION BY ncl.CategoryID ORDER BY  '
	
			IF @OrderByDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

			SET @sqlcommand = @sqlcommand + @OrderByColumnName + N' ' + @OrderByDirection
			
			IF @OrderBySecondColumnName IS NOT NULL
			BEGIN
				IF @OrderBySecondDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
				
				SET @sqlcommand = @sqlcommand + N','+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
			END
			
			IF @OrderByThirdColumnName IS NOT NULL
			BEGIN
				IF @OrderByThirdDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
				
				SET @sqlcommand = @sqlcommand + N','+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
			END
			
			SET @sqlcommand = @sqlcommand + N',ncl.Position ASC ) AS [Order] '
		
		IF @OrderByCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		
		IF @OrderBySecondCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
		
		IF @OrderByThirdCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
		
		SET @sqlcommand = @sqlcommand + N'
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n '
		
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON n.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
		
		SET @sqlcommand = @sqlcommand + N'
				INNER JOIN MainFilters AS mf ON n.ArticleID = mf.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] AS rnb ON mf.ArticleID = rnb.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON rnb.ArticleID = nc.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS ncl ON ncl.CategoryID = nc.CategoryID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = nc.CategoryID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
				IF @DateRangeType = 2
					SET @sqlcommand = @sqlcommand + N'
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
					OR (nerd.RecurringID IN (SELECT TOP(ned.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
				ELSE IF @DateRangeType = 0
					SET @sqlcommand = @sqlcommand + N'
					(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
				ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
				SET @sqlcommand = @sqlcommand + N'
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral on ral.CategoryID = ncl.CategoryID and ral.ModuleID = @RotatorModuleID
			WHERE n.ArticleID IN(
				SELECT ArticleID FROM (
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON na.ArticleID = nc.ArticleID
						INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = nc.CategoryID
					WHERE na.HasPermissions = 0
					UNION ALL
					SELECT ArticleID FROM (
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						WHERE na.HasPermissions = 1 '
							IF @AdminOrSuperUser = 0
							BEGIN
								SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
								IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
								ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
							END
						SET @sqlcommand = @sqlcommand + N'
						UNION
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						WHERE na.HasPermissions = 1 '
							IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles) '
						SET @sqlcommand = @sqlcommand + N'
					) AS WithPermissions
				) AS OnlyArticles
				UNION ALL
				SELECT [ArticleID] FROM (
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
						INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
					WHERE na.HasPermissions = 0 '
						IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @sqlcommand = @sqlcommand + N'
					UNION ALL
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 1
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
						INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @sqlcommand = @sqlcommand + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 0
							SET @sqlcommand = @sqlcommand + N'	
							(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
			
						SET @sqlcommand = @sqlcommand + N'
					WHERE na.HasPermissions = 0
				) AS HasPermissionsFalse
				UNION ALL
				SELECT [ArticleID] FROM (
					SELECT [ArticleID] FROM (
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 0
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
						WHERE na.HasPermissions = 1 '
							IF @AdminOrSuperUser = 0
							BEGIN
								SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
								IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
								ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
							END
							IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
						SET @sqlcommand = @sqlcommand + N'
						UNION
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
						WHERE na.HasPermissions = 1 '
							IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles) '
							IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @sqlcommand = @sqlcommand + N'
					) AS NotRecurring
					UNION ALL
					SELECT [ArticleID] FROM (
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 1
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
							IF @DateRangeType = 2
								SET @sqlcommand = @sqlcommand + N'
								((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
							ELSE IF @DateRangeType = 0
								SET @sqlcommand = @sqlcommand + N'	
								(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
							ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '

						SET @sqlcommand = @sqlcommand + N'
						WHERE na.HasPermissions = 1 '
							IF @AdminOrSuperUser = 0
							BEGIN
								SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
								IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
								ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
							END
							SET @sqlcommand = @sqlcommand + N'
						UNION
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
							IF @DateRangeType = 2
								SET @sqlcommand = @sqlcommand + N'
								((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
							ELSE IF @DateRangeType = 0
								SET @sqlcommand = @sqlcommand + N'
								(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
							ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
			
							SET @sqlcommand = @sqlcommand + N'
						WHERE na.HasPermissions = 1 '
							IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles) '
					SET @sqlcommand = @sqlcommand + N'
					) AS Recurring
				) AS HasPermissionsTrue
			)
			AND (rnb.RotatorID=@RotatorModuleID)
		) AS tempinResult WHERE tempinResult.[Order] <= @numPerCategory
	) AS inResult WHERE RemoveDuplicates < 2
	ORDER BY '
	
	IF @Randomize = 1 SET @sqlcommand = @sqlcommand + N'NEWID() '
	ELSE 
	BEGIN
				
		IF @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

		SET @sqlcommand = @sqlcommand + @OrderByColumnName + N' ' + @OrderByDirection
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
		END
	END

	SET @sqlcommand = @sqlcommand + N',inResult.Position ASC'

IF @LocaleCode IS NULL AND @Randomize = 1 SET @sqlcommand = @sqlcommand + N') AS razbacaj ORDER BY NEWID();'

ELSE IF @LocaleCode IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	)
	SELECT ArticleID,UserID,AuthorAliasName,StartDate,RecurringID,ArticleImage,Title,SubTitle,Description,HTMLContent,FileSystemName,TitleLink,ContentType,DetailTypeData,PublishDate,NumberOfViews,RatingValue,
	DateAdded,ExpireDate,LastModified,NumberOfComments,Position,CategoryID,CFGroupeID,TabID,NewsModuleID,EventArticle,CatToShow,ImageSizes
	FROM
	(
		SELECT ac.ArticleID,ac.UserID,ac.AuthorAliasName,ac.StartDate,ac.RecurringID,ac.ArticleImage,
		
		CASE WHEN ncloc.Title IS NULL THEN ac.Title ELSE ncloc.Title END AS Title,
		CASE WHEN ncloc.SubTitle IS NULL THEN ac.SubTitle ELSE ncloc.SubTitle END AS SubTitle,
		CASE WHEN ncloc.Summary IS NULL THEN ac.Description ELSE '
		
		IF @DescriptionSource = 1
			SET @sqlcommand = @sqlcommand + N'ncloc.Summary'
		ELSE
			SET @sqlcommand = @sqlcommand + N'ncloc.Article'
		
		SET @sqlcommand = @sqlcommand + N' END AS Description,'
		
		SET @sqlcommand = @sqlcommand + N'
		CASE WHEN ncloc.Article IS NULL THEN ac.HTMLContent ELSE '
		
		IF @DescriptionSource = 1
			SET @sqlcommand = @sqlcommand + N'ncloc.Summary'
		ELSE
			SET @sqlcommand = @sqlcommand + N'ncloc.Article'
		
		SET @sqlcommand = @sqlcommand + N' END AS HTMLContent,'
		
		 
		SET @sqlcommand = @sqlcommand + N'
		ac.FileSystemName,
		CASE WHEN ncloc.clTitleLink IS NULL THEN ac.TitleLink ELSE ncloc.clTitleLink END AS TitleLink,
		
		ac.ContentType,ac.DetailTypeData,ac.PublishDate,
		ac.NumberOfViews,ac.RatingValue,ac.DateAdded,ac.ExpireDate,ac.LastModified,ac.NumberOfComments,ac.Position,ac.CategoryID,ac.CFGroupeID,ac.TabID,ac.NewsModuleID,ac.EventArticle,ac.CatToShow,ac.ImageSizes'

		IF @OrderByCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		
		IF @OrderBySecondCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
		
		IF @OrderByThirdCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
			
		SET @sqlcommand = @sqlcommand + N'
		FROM AllContent AS ac
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncloc ON ncloc.ArticleID = ac.ArticleID AND ncloc.LocaleCode=@LocaleCode '
	
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON ac.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
		
	SET @sqlcommand = @sqlcommand + N' 
	) AS inResult
	ORDER BY '
	
	IF @Randomize = 1 SET @sqlcommand = @sqlcommand + N'NEWID() '
	ELSE 
	BEGIN
				
		IF @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

		SET @sqlcommand = @sqlcommand + @OrderByColumnName + N' ' + @OrderByDirection
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
		END
	END
END

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@RotatorModuleID = @RotatorModuleID
	,@OpenInTab = @OpenInTab
	,@OpenInModule = @OpenInModule
	,@LocaleCode = @LocaleCode
	,@RowCount = @RowCount
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@PermissionsModuleID = @PermissionsModuleID
	,@OnlyOneCategory = @OnlyOneCategory
	,@numPerCategory = @numPerCategory
	,@StartDate = @StartDate
	,@FilterByTagsArticleID = @FilterByTagsArticleID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@OrderBySecondCustomFieldID = @OrderBySecondCustomFieldID
	,@OrderByThirdCustomFieldID = @OrderByThirdCustomFieldID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNrotatorNewsPartitionGetArticles]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNrotatorNewsPartitionGetArticles] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNrotatorNewsPartitionGetArticles]
	@PortalID INT,
	@UserID INT,
	@RotatorModuleID INT,
	@OpenInTab INT,
	@OpenInModule INT,
	@RowCount INT,
	@numPerCategory INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@OrderBySecondColumnName NVARCHAR(30) = NULL,
	@OrderBySecondDirection NVARCHAR(4) = NULL,
	@OrderBySecondCustomFieldID INT = NULL,
	@OrderByThirdColumnName NVARCHAR(30) = NULL,
	@OrderByThirdDirection NVARCHAR(4) = NULL,
	@OrderByThirdCustomFieldID INT = NULL,
	@Featured BIT = 0,
	@OnlyWithImage BIT = 1,
	@Randomize BIT = 0,
	@DescriptionSource TINYINT = 1,
	@LocaleCode NVARCHAR(20) = NULL,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@ShowAllAuthors BIT = 1,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 0,
	@PermissionSettingsSource TINYINT = 0,
	@PermissionsModuleID INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@OnlyOneCategory INT = 0,
	@FilterByTagsArticleID INT = 0,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(500);
SET @paramList = N'
	 @PortalID INT
	,@UserID INT
	,@RotatorModuleID INT
	,@OpenInTab INT
	,@OpenInModule INT
	,@LocaleCode NVARCHAR(20)
	,@RowCount INT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@PermissionsModuleID INT
	,@OnlyOneCategory INT
	,@numPerCategory INT
	,@FilterByTagsArticleID INT
	,@OrderByCustomFieldID INT
	,@OrderBySecondCustomFieldID INT
	,@OrderByThirdCustomFieldID INT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource TINYINT
	,@IsPortalSharing BIT'

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @UserViewCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT PRIMARY KEY);
DECLARE @FiltredByCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @LocalizedCategories TABLE (ID INT PRIMARY KEY, Name NVARCHAR(200), Position INT, CategoryURL NVARCHAR(1500)); '

DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @RotatorModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_NewsViewCategoriesMultiPortal](@RotatorModuleID,@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate) '
ELSE
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_RotatorNewsViewCategories](@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate); '

IF @OnlyOneCategory <> 0 -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand + N' 
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @OnlyOneCategory;
	INSERT INTO @FiltredByCategories SELECT @OnlyOneCategory; '
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
		SET @sqlcommand = @sqlcommand + N' 
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '; '
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlcommand = @sqlcommand + N' 
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral ON ral.CategoryID = cl.CategoryID AND ral.ModuleID = @RotatorModuleID
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		SET @sqlcommand = @sqlcommand + N' 
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID)) AND ' + @sqlSharingPortalAll + '
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.' + @sqlSharingPortalAll + '
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; '
END

IF @ShowAllAuthors = 0
	SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @RotatorModuleID
	UNION 
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @RotatorModuleID; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @LocalizedCategories
	SELECT c.CategoryID AS ID, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name, c.Position, c.CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID
	WHERE c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories) AND c.' + @sqlSharingPortalAll + ' AND cl.LocaleCode = @LocaleCode; '
ELSE
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @LocalizedCategories
	SELECT c.CategoryID AS ID, c.CategoryName AS Name, c.Position, c.CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	WHERE c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories) AND c.' + @sqlSharingPortalAll + '; '

IF @FilterByTagsArticleID <> 0
SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempTagIDList TABLE (TagID INT PRIMARY KEY);
	INSERT INTO @TempTagIDList
	SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @FilterByTagsArticleID; '

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByCustomFieldID));

	IF @OrderByColumnName IS NULL
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
		SET @OrderBySecondColumnName = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

IF @OrderBySecondCustomFieldID IS NOT NULL
BEGIN
	SET @OrderBySecondColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderBySecondCustomFieldID));

	IF @OrderBySecondColumnName IS NULL
	BEGIN
		SET @OrderBySecondCustomFieldID = NULL;
		SET @OrderBySecondColumnName = NULL;
	END
END

IF @OrderByThirdCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByThirdColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByThirdCustomFieldID));

	IF @OrderByThirdColumnName IS NULL
	BEGIN
		SET @OrderByThirdCustomFieldID = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

DECLARE @CheckOrStatement BIT;

SET @sqlcommand = @sqlcommand + N'
;WITH MainFilters AS(
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] AS rnb ON na.ArticleID = rnb.ArticleID AND rnb.RotatorID=@RotatorModuleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	    INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID '
	    IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	    IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID '
	SET @sqlcommand = @sqlcommand + N'
	WHERE ' + @sqlSharingPortal + '
		AND na.Approved = 1
		AND na.Active = 1
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
		IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
		IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
SET @sqlcommand = @sqlcommand + N'
)'
IF @LocaleCode IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	,AllContent AS ('
END

	SET @sqlcommand = @sqlcommand + N'
	SELECT TOP(@RowCount) ArticleID,UserID,AuthorAliasName,ArticleImage,Title,SubTitle,Description,HTMLContent,FileSystemName,TitleLink,DetailType AS ContentType, DetailTypeData, PublishDate,NumberOfViews,RatingValue,DateAdded,ExpireDate,LastModified,NumberOfComments,Position,CategoryID,CFGroupeID,'
	IF @CategoryFilterType = 0 SET @sqlcommand = @sqlcommand + CAST(@OpenInTab AS NVARCHAR(20)) + N' AS TabID, ' + CAST(@OpenInModule AS NVARCHAR(20)) + ' AS NewsModuleID, '
	ELSE SET @sqlcommand = @sqlcommand + N' CASE WHEN inResult.TabID IS NULL THEN @OpenInTab ELSE inResult.TabID END AS TabID, CASE WHEN inResult.NewsModuleID IS NULL THEN @OpenInModule ELSE inResult.NewsModuleID END AS NewsModuleID, '
	SET @sqlcommand = @sqlcommand + N'
	EventArticle,
	(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = inResult.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root''))
	AS CatToShow,ImageSizes
	FROM (
		SELECT n.ArticleID,n.UserID,n.AuthorAliasName,n.ArticleImage,n.Title,n.SubTitle,'
		IF @DescriptionSource = 1 SET @sqlcommand = @sqlcommand + N'n.Summary AS Description,n.Summary AS HTMLContent, '
		ELSE IF @DescriptionSource = 2 SET @sqlcommand = @sqlcommand + N'n.Article AS Description,n.Article AS HTMLContent, '
		SET @sqlcommand = @sqlcommand + N'
		rnb.ArticleImage AS FileSystemName,TitleLink,n.DetailType,n.DetailTypeData,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.[ExpireDate],
		n.LastModified,n.NumberOfComments,ncl.Position,ncl.CategoryID,ral.TabID,ral.NewsModuleID,n.EventArticle,n.CFGroupeID,rnb.ImageSizes,
		ROW_NUMBER() OVER (PARTITION BY ncl.CategoryID ORDER BY '
	
		IF @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

		SET @sqlcommand = @sqlcommand + @OrderByColumnName + N' ' + @OrderByDirection
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
		END
		
		SET @sqlcommand = @sqlcommand + N',ncl.Position ASC ) AS [Order],
		ROW_NUMBER() OVER (PARTITION BY n.ArticleID ORDER BY n.ArticleID DESC) AS RN '
		
		IF @OrderByCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		
		IF @OrderBySecondCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
		
		IF @OrderByThirdCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
		
		SET @sqlcommand = @sqlcommand + N'
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n '
		
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON n.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
		
		SET @sqlcommand = @sqlcommand + N'
			INNER JOIN MainFilters AS mf ON n.ArticleID = mf.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] AS rnb ON mf.ArticleID = rnb.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON rnb.ArticleID = nc.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS ncl ON ncl.CategoryID = nc.CategoryID
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral on ral.CategoryID = ncl.CategoryID and ral.ModuleID = @RotatorModuleID
		WHERE n.ArticleID IN(				     
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON na.ArticleID = nc.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = nc.CategoryID
			WHERE na.HasPermissions = 0
			UNION ALL
			SELECT ArticleID FROM (
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				WHERE na.HasPermissions = 1 '
					IF @AdminOrSuperUser = 0
					BEGIN
						SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
						ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
					END
				SET @sqlcommand = @sqlcommand + N'		
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				WHERE na.HasPermissions = 1 '
					IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM {databaseOwner}[{objectQualifier}EDS_UserInRoles](@UserID,@PortalID,@CurrentDate)) '
				SET @sqlcommand = @sqlcommand + N'
			) AS WithPermissions
		)
		AND (rnb.RotatorID=@RotatorModuleID)
	) AS inResult WHERE RN < 2 AND inResult.[Order] <= @numPerCategory
	ORDER BY '
	
	IF @Randomize = 1 SET @sqlcommand = @sqlcommand + N'NEWID() '
	ELSE 
	BEGIN
				
		IF @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

		SET @sqlcommand = @sqlcommand + @OrderByColumnName + N' ' + @OrderByDirection
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
		END
	END

	SET @sqlcommand = @sqlcommand + N',inResult.Position ASC'

IF @LocaleCode IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	)
	SELECT ArticleID,UserID,AuthorAliasName,ArticleImage,Title,SubTitle,Description,HTMLContent,FileSystemName,TitleLink,ContentType,DetailTypeData,PublishDate,NumberOfViews,RatingValue,
	DateAdded,ExpireDate,LastModified,NumberOfComments,Position,CategoryID,CFGroupeID,TabID,NewsModuleID,EventArticle,CatToShow,ImageSizes
	FROM
	(
		SELECT ac.ArticleID,ac.UserID,ac.AuthorAliasName,ac.ArticleImage,
		
		CASE WHEN ncloc.Title IS NULL THEN ac.Title ELSE ncloc.Title END AS Title,
		CASE WHEN ncloc.SubTitle IS NULL THEN ac.SubTitle ELSE ncloc.SubTitle END AS SubTitle,
		CASE WHEN ncloc.Summary IS NULL THEN ac.Description ELSE '
		
		IF @DescriptionSource = 1
			SET @sqlcommand = @sqlcommand + N'ncloc.Summary'
		ELSE
			SET @sqlcommand = @sqlcommand + N'ncloc.Article'
		
		SET @sqlcommand = @sqlcommand + N' END AS Description,'
		
		SET @sqlcommand = @sqlcommand + N'
		CASE WHEN ncloc.Article IS NULL THEN ac.HTMLContent ELSE '
		
		IF @DescriptionSource = 1
			SET @sqlcommand = @sqlcommand + N'ncloc.Summary'
		ELSE
			SET @sqlcommand = @sqlcommand + N'ncloc.Article'
		
		SET @sqlcommand = @sqlcommand + N' END AS HTMLContent,'
		
		 
		SET @sqlcommand = @sqlcommand + N'
		ac.FileSystemName,
		CASE WHEN ncloc.clTitleLink IS NULL THEN ac.TitleLink ELSE ncloc.clTitleLink END AS TitleLink,
		ac.ContentType,ac.DetailTypeData,ac.PublishDate,
		ac.NumberOfViews,ac.RatingValue,ac.DateAdded,ac.ExpireDate,ac.LastModified,ac.NumberOfComments,ac.Position,ac.CategoryID,ac.CFGroupeID,ac.TabID,ac.NewsModuleID,ac.EventArticle,ac.CatToShow,ac.ImageSizes '

		IF @OrderByCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		
		IF @OrderBySecondCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
		
		IF @OrderByThirdCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
			
		SET @sqlcommand = @sqlcommand + N'
		FROM AllContent AS ac
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncloc ON ncloc.ArticleID = ac.ArticleID AND ncloc.LocaleCode=@LocaleCode '
	
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON ac.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
		
		SET @sqlcommand = @sqlcommand + N' 
	) AS inResult
	ORDER BY '
	
	IF @Randomize = 1 SET @sqlcommand = @sqlcommand + N'NEWID() '
	ELSE 
	BEGIN
				
		IF @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

		SET @sqlcommand = @sqlcommand + @OrderByColumnName + N' ' + @OrderByDirection
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
		END
	END
END

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@RotatorModuleID = @RotatorModuleID
	,@OpenInTab = @OpenInTab
	,@OpenInModule = @OpenInModule
	,@LocaleCode = @LocaleCode
	,@RowCount = @RowCount
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@PermissionsModuleID = @PermissionsModuleID
	,@OnlyOneCategory = @OnlyOneCategory
	,@numPerCategory = @numPerCategory
	,@FilterByTagsArticleID = @FilterByTagsArticleID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@OrderBySecondCustomFieldID = @OrderBySecondCustomFieldID
	,@OrderByThirdCustomFieldID = @OrderByThirdCustomFieldID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@IsPortalSharing = @IsPortalSharing
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNrotatorNewsPartitionGetEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNrotatorNewsPartitionGetEvents] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNrotatorNewsPartitionGetEvents]
	@PortalID INT,
	@UserID INT,
	@RotatorModuleID INT,
	@OpenInTab INT,
	@OpenInModule INT,
	@RowCount INT,
	@numPerCategory INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@OrderBySecondColumnName NVARCHAR(30) = NULL,
	@OrderBySecondDirection NVARCHAR(4) = NULL,
	@OrderBySecondCustomFieldID INT = NULL,
	@OrderByThirdColumnName NVARCHAR(30) = NULL,
	@OrderByThirdDirection NVARCHAR(4) = NULL,
	@OrderByThirdCustomFieldID INT = NULL,
	@Featured BIT = 0,
	@OnlyWithImage BIT = 1,
	@Randomize BIT = 0,
	@DescriptionSource TINYINT = 1,
	@LocaleCode NVARCHAR(20) = NULL,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@ShowAllAuthors BIT = 1,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 0,
	@PermissionSettingsSource TINYINT = 0,
	@PermissionsModuleID INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@OnlyOneCategory INT = 0,
	@StartDate DATETIME = NULL,
	@DateRangeType TINYINT = 0,
	@FilterByTagsArticleID INT = 0,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @paramList NVARCHAR(500);
SET @paramList = N'
	 @PortalID INT
	,@UserID INT
	,@RotatorModuleID INT
	,@OpenInTab INT
	,@OpenInModule INT
	,@LocaleCode NVARCHAR(20)
	,@RowCount INT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@PermissionsModuleID INT
	,@OnlyOneCategory INT
	,@numPerCategory INT
	,@StartDate DATETIME
	,@FilterByTagsArticleID INT
	,@OrderByCustomFieldID INT
	,@OrderBySecondCustomFieldID INT
	,@OrderByThirdCustomFieldID INT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource TINYINT
	,@IsPortalSharing BIT'

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @UserViewCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT PRIMARY KEY);
DECLARE @FiltredByCategories TABLE (CategoryID INT PRIMARY KEY);
DECLARE @LocalizedCategories TABLE (ID INT PRIMARY KEY, Name NVARCHAR(200), Position INT, CategoryURL NVARCHAR(1500)); '

DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @RotatorModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_NewsViewCategoriesMultiPortal](@RotatorModuleID,@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate) '
ELSE
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @UserViewCategories
	SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EDS_RotatorNewsViewCategories](@UserID,@PortalID,@AdminOrSuperUser,@PermissionSettingsSource,@PermissionsModuleID,@CurrentDate); '

IF @OnlyOneCategory <> 0 -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand + N' 
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @OnlyOneCategory;
	INSERT INTO @FiltredByCategories SELECT @OnlyOneCategory; '
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
		SET @sqlcommand = @sqlcommand + N' 
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE ' + @sqlSharingPortalAll + '; '
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlcommand = @sqlcommand + N' 
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral ON ral.CategoryID = cl.CategoryID AND ral.ModuleID = @RotatorModuleID
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		SET @sqlcommand = @sqlcommand + N' 
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] WHERE ModuleID = @RotatorModuleID)) AND ' + @sqlSharingPortalAll + '
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.' + @sqlSharingPortalAll + '
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; '
END

IF @ShowAllAuthors = 0
	SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @RotatorModuleID
	UNION 
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
	WHERE mgi.ModuleID = @RotatorModuleID; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @LocalizedCategories
	SELECT c.CategoryID AS ID, CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name, c.Position, c.CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID
	WHERE c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories) AND c.' + @sqlSharingPortalAll + ' AND cl.LocaleCode = @LocaleCode; '
ELSE
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO @LocalizedCategories
	SELECT c.CategoryID AS ID, c.CategoryName AS Name, c.Position, c.CategoryURL
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
	WHERE c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories) AND c.' + @sqlSharingPortalAll + '; '

IF @FilterByTagsArticleID <> 0
SET @sqlcommand = @sqlcommand + N'
	DECLARE @TempTagIDList TABLE (TagID INT PRIMARY KEY);
	INSERT INTO @TempTagIDList
	SELECT [TagID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] WHERE ArticleID = @FilterByTagsArticleID; '

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByCustomFieldID));

	IF @OrderByColumnName IS NULL
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
		SET @OrderBySecondColumnName = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

IF @OrderBySecondCustomFieldID IS NOT NULL
BEGIN
	SET @OrderBySecondColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderBySecondCustomFieldID));

	IF @OrderBySecondColumnName IS NULL
	BEGIN
		SET @OrderBySecondCustomFieldID = NULL;
		SET @OrderBySecondColumnName = NULL;
	END
END

IF @OrderByThirdCustomFieldID IS NOT NULL
BEGIN
	SET @OrderByThirdColumnName = (SELECT {databaseOwner}[{objectQualifier}EDS_NewsOrderByColumnName](@OrderByThirdCustomFieldID));

	IF @OrderByThirdColumnName IS NULL
	BEGIN
		SET @OrderByThirdCustomFieldID = NULL;
		SET @OrderByThirdColumnName = NULL;
	END
END

DECLARE @CheckOrStatement BIT;

SET @sqlcommand = @sqlcommand + N'
;WITH MainFilters AS(
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] AS rnb ON na.ArticleID = rnb.ArticleID AND rnb.RotatorID=@RotatorModuleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
	    INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
	    INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID '
	    IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	    IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @TempTagIDList AS ttl ON ttl.TagID = ti.TagID '
	SET @sqlcommand = @sqlcommand + N'
	WHERE ' + @sqlSharingPortal + '
		AND na.Approved = 1
		AND na.Active = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		IF @FilterByTagsArticleID <> 0 SET @sqlcommand = @sqlcommand + N' AND na.ArticleID <> @FilterByTagsArticleID '
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand + N' AND na.HideDefaultLocale = 0 '
		IF @Featured = 1 SET @sqlcommand = @sqlcommand + N' AND na.Featured = 1 '
		IF @OnlyWithImage = 1 SET @sqlcommand = @sqlcommand + N' AND na.ArticleImage IS NOT NULL AND na.ArticleImage <> '''' '
		IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand + N' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) '
SET @sqlcommand = @sqlcommand + N'
)'
IF @LocaleCode IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	, AllContent AS ('
END
ELSE IF @Randomize = 1 SET @sqlcommand = @sqlcommand + N'SELECT * FROM (' 

	SET @sqlcommand = @sqlcommand + N'
	SELECT TOP(@RowCount) ArticleID,UserID,AuthorAliasName,StartDate, RecurringID,ArticleImage,Title,SubTitle,Description,HTMLContent,FileSystemName,TitleLink,DetailType AS ContentType, DetailTypeData, PublishDate,NumberOfViews,RatingValue,DateAdded,ExpireDate,LastModified,NumberOfComments,Position,CategoryID,CFGroupeID,'
	IF @CategoryFilterType = 0 SET @sqlcommand = @sqlcommand + CAST(@OpenInTab AS NVARCHAR(20)) + N' AS TabID, ' + CAST(@OpenInModule AS NVARCHAR(20)) + ' AS NewsModuleID, '
	ELSE SET @sqlcommand = @sqlcommand + N' CASE WHEN inResult.TabID IS NULL THEN @OpenInTab ELSE inResult.TabID END AS TabID, CASE WHEN inResult.NewsModuleID IS NULL THEN @OpenInModule ELSE inResult.NewsModuleID END AS NewsModuleID, '
	SET @sqlcommand = @sqlcommand + N'
	EventArticle,
	(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = inResult.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root''))
	AS CatToShow,ImageSizes
	FROM (
		SELECT *, ROW_NUMBER() OVER (PARTITION BY ArticleID, RecurringID ORDER BY ArticleID DESC) AS RemoveDuplicates
		FROM (
			SELECT n.ArticleID,n.UserID,n.AuthorAliasName,
			CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate,
			CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
			n.ArticleImage,n.Title,n.SubTitle,'
			IF @DescriptionSource = 1 SET @sqlcommand = @sqlcommand + N'n.Summary AS Description,n.Summary AS HTMLContent, '
			ELSE IF @DescriptionSource = 2 SET @sqlcommand = @sqlcommand + N'n.Article AS Description,n.Article AS HTMLContent, '
			SET @sqlcommand = @sqlcommand + N'
			rnb.ArticleImage AS FileSystemName,TitleLink,n.DetailType,n.DetailTypeData,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.[ExpireDate],
			n.LastModified,n.NumberOfComments,ncl.Position,ncl.CategoryID,ral.TabID,ral.NewsModuleID,n.EventArticle,n.CFGroupeID,rnb.ImageSizes,
			ROW_NUMBER() OVER (PARTITION BY ncl.CategoryID ORDER BY '
	
			IF @OrderByDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

			SET @sqlcommand = @sqlcommand + @OrderByColumnName + N' ' + @OrderByDirection
			
			IF @OrderBySecondColumnName IS NOT NULL
			BEGIN
				IF @OrderBySecondDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
				
				SET @sqlcommand = @sqlcommand + N','+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
			END
			
			IF @OrderByThirdColumnName IS NOT NULL
			BEGIN
				IF @OrderByThirdDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
				
				SET @sqlcommand = @sqlcommand + N','+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
			END
			
			SET @sqlcommand = @sqlcommand + N',ncl.Position ASC ) AS [Order] '
		
		IF @OrderByCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		
		IF @OrderBySecondCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
		
		IF @OrderByThirdCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
		
		SET @sqlcommand = @sqlcommand + N'
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n '
		
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON n.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
		
		SET @sqlcommand = @sqlcommand + N'
				INNER JOIN MainFilters AS mf ON n.ArticleID = mf.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsBridge] AS rnb ON mf.ArticleID = rnb.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS nc ON rnb.ArticleID = nc.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS ncl ON ncl.CategoryID = nc.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
				IF @DateRangeType = 2
					SET @sqlcommand = @sqlcommand + N'
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
					OR (nerd.RecurringID IN (SELECT TOP(ned.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
				ELSE IF @DateRangeType = 0
					SET @sqlcommand = @sqlcommand + N'
					(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
				ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
				SET @sqlcommand = @sqlcommand + N'
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNRotatorArticleLink] AS ral on ral.CategoryID = ncl.CategoryID and ral.ModuleID = @RotatorModuleID
			WHERE n.ArticleID IN(
				SELECT [ArticleID] FROM (
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
						INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
					WHERE na.HasPermissions = 0 '
						IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @sqlcommand = @sqlcommand + N'
					UNION ALL
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 1
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
						INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 2
							SET @sqlcommand = @sqlcommand + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 0
							SET @sqlcommand = @sqlcommand + N'
							(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
			
						SET @sqlcommand = @sqlcommand + N'
					WHERE na.HasPermissions = 0
				) AS HasPermissionsFalse
				UNION ALL
				SELECT [ArticleID] FROM (
					SELECT [ArticleID] FROM (
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 0
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
						WHERE na.HasPermissions = 1 '
							IF @AdminOrSuperUser = 0
							BEGIN
								SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
								IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
								ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
							END
							IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
						SET @sqlcommand = @sqlcommand + N'
						UNION
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0	
						WHERE na.HasPermissions = 1 '
							IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles) '
							IF @DateRangeType = 2 SET @sqlcommand = @sqlcommand + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '
					SET @sqlcommand = @sqlcommand + N'
					) AS NotRecurring
					UNION ALL
					SELECT [ArticleID] FROM (
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 1
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
							IF @DateRangeType = 2
								SET @sqlcommand = @sqlcommand + N'
								((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
							ELSE IF @DateRangeType = 0
								SET @sqlcommand = @sqlcommand + N'
								(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
							ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
			
						SET @sqlcommand = @sqlcommand + N'
						WHERE na.HasPermissions = 1 '
							IF @AdminOrSuperUser = 0
							BEGIN
								SET @sqlcommand = @sqlcommand + N' AND aup.Show = 1 '
								IF @UserID = -1 SET @sqlcommand = @sqlcommand + N' AND aup.UserID IS NULL '
								ELSE SET @sqlcommand = @sqlcommand + N' AND aup.UserID = @UserID '
							END
							SET @sqlcommand = @sqlcommand + N'
						UNION
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
							IF @DateRangeType = 2
							SET @sqlcommand = @sqlcommand + N'
								((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(ne.UpcomingOccurrences) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
							ELSE IF @DateRangeType = 0
								SET @sqlcommand = @sqlcommand + N'	
								(nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
							ELSE SET @sqlcommand = @sqlcommand + N' 1 = 0 '
			
							SET @sqlcommand = @sqlcommand + N'
						WHERE na.HasPermissions = 1 '
							IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles) '
					SET @sqlcommand = @sqlcommand + N'
					) AS Recurring
				) AS HasPermissionsTrue
			)
			AND (rnb.RotatorID=@RotatorModuleID)
		) AS tempinResult WHERE tempinResult.[Order] <= @numPerCategory
	) AS inResult WHERE RemoveDuplicates < 2
	ORDER BY '
	
	IF @Randomize = 1 SET @sqlcommand = @sqlcommand + N'NEWID() '
	ELSE 
	BEGIN
				
		IF @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

		SET @sqlcommand = @sqlcommand + @OrderByColumnName + N' ' + @OrderByDirection
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
		END
	END

	SET @sqlcommand = @sqlcommand + N',inResult.Position ASC'
	
IF @LocaleCode IS NULL AND @Randomize = 1 SET @sqlcommand = @sqlcommand + N') AS razbacaj ORDER BY NEWID();'

ELSE IF @LocaleCode IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	)
	SELECT ArticleID,UserID,AuthorAliasName,StartDate,RecurringID,ArticleImage,Title,SubTitle,Description,HTMLContent,FileSystemName,TitleLink,ContentType,DetailTypeData,PublishDate,NumberOfViews,RatingValue,
	DateAdded,ExpireDate,LastModified,NumberOfComments,Position,CategoryID,CFGroupeID,TabID,NewsModuleID,EventArticle,CatToShow,ImageSizes
	FROM
	(
		SELECT ac.ArticleID,ac.UserID,ac.AuthorAliasName,ac.StartDate,ac.RecurringID,ac.ArticleImage,
		
		CASE WHEN ncloc.Title IS NULL THEN ac.Title ELSE ncloc.Title END AS Title,
		CASE WHEN ncloc.SubTitle IS NULL THEN ac.SubTitle ELSE ncloc.SubTitle END AS SubTitle,
		CASE WHEN ncloc.Summary IS NULL THEN ac.Description ELSE '
		
		IF @DescriptionSource = 1
			SET @sqlcommand = @sqlcommand + N'ncloc.Summary'
		ELSE
			SET @sqlcommand = @sqlcommand + N'ncloc.Article'
		
		SET @sqlcommand = @sqlcommand + N' END AS Description,'
		
		SET @sqlcommand = @sqlcommand + N'
		CASE WHEN ncloc.Article IS NULL THEN ac.HTMLContent ELSE '
		
		IF @DescriptionSource = 1
			SET @sqlcommand = @sqlcommand + N'ncloc.Summary'
		ELSE
			SET @sqlcommand = @sqlcommand + N'ncloc.Article'
		
		SET @sqlcommand = @sqlcommand + N' END AS HTMLContent,'
		
		 
		SET @sqlcommand = @sqlcommand + N'
		ac.FileSystemName,
		CASE WHEN ncloc.clTitleLink IS NULL THEN ac.TitleLink ELSE ncloc.clTitleLink END AS TitleLink,
		
		ac.ContentType,ac.DetailTypeData,ac.PublishDate,
		ac.NumberOfViews,ac.RatingValue,ac.DateAdded,ac.ExpireDate,ac.LastModified,ac.NumberOfComments,ac.Position,ac.CategoryID,ac.CFGroupeID,ac.TabID,ac.NewsModuleID,ac.EventArticle,ac.CatToShow,ac.ImageSizes'

		IF @OrderByCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByColumnName;
		
		IF @OrderBySecondCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderBySecondColumnName;
		
		IF @OrderByThirdCustomFieldID IS NOT NULL
			SET @sqlcommand = @sqlcommand + N',fv.' + @OrderByThirdColumnName;
			
		SET @sqlcommand = @sqlcommand + N'
		FROM AllContent AS ac
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncloc ON ncloc.ArticleID = ac.ArticleID AND ncloc.LocaleCode=@LocaleCode '
	
		IF @OrderByCustomFieldID IS NOT NULL OR @OrderBySecondCustomFieldID IS NOT NULL	OR @OrderByThirdCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON ac.ArticleID = fv.ArticleID AND ('
			IF @OrderByCustomFieldID IS NOT NULL
			BEGIN
				SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByCustomFieldID ';
			END
			IF @OrderBySecondCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				ELSE
					SET @CheckOrStatement = 1;
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderBySecondCustomFieldID ';
			END
			IF @OrderByThirdCustomFieldID IS NOT NULL
			BEGIN
				IF @CheckOrStatement = 1
					SET @sqlcommand = @sqlcommand + N'OR'; 
				SET @sqlcommand = @sqlcommand + N' fv.CustomFieldID = @OrderByThirdCustomFieldID ';
			END
				
			SET @sqlcommand = @sqlcommand + N')'
		END
		
	SET @sqlcommand = @sqlcommand + N' 
	) AS inResult
	ORDER BY '
	
	IF @Randomize = 1 SET @sqlcommand = @sqlcommand + N'NEWID() '
	ELSE 
	BEGIN
				
		IF @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

		SET @sqlcommand = @sqlcommand + @OrderByColumnName + N' ' + @OrderByDirection
		
		IF @OrderBySecondColumnName IS NOT NULL
		BEGIN
			IF @OrderBySecondDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderBySecondColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderBySecondColumnName + N' ' + @OrderBySecondDirection
		END
		
		IF @OrderByThirdColumnName IS NOT NULL
		BEGIN
			IF @OrderByThirdDirection = 'ASC'
				SET @sqlcommand = @sqlcommand + N',(CASE WHEN ' + @OrderByThirdColumnName + ' IS NULL THEN 1 ELSE 0 END)'
			
			SET @sqlcommand = @sqlcommand + N','+ @OrderByThirdColumnName + N' ' + @OrderByThirdDirection
		END
	END
END

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@RotatorModuleID = @RotatorModuleID
	,@OpenInTab = @OpenInTab
	,@OpenInModule = @OpenInModule
    ,@LocaleCode = @LocaleCode
	,@RowCount = @RowCount
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@PermissionsModuleID = @PermissionsModuleID
	,@OnlyOneCategory = @OnlyOneCategory
	,@numPerCategory = @numPerCategory
	,@StartDate = @StartDate
	,@FilterByTagsArticleID = @FilterByTagsArticleID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@OrderBySecondCustomFieldID = @OrderBySecondCustomFieldID
	,@OrderByThirdCustomFieldID = @OrderByThirdCustomFieldID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@IsPortalSharing = @IsPortalSharing
GO