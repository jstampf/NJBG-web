if '{objectQualifier}' <> ''
BEGIN
	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNRotatorNewsSettings]') AND type in (N'U'))
	BEGIN
		IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[EasyDNNRotatorNewsSettings]') AND type in (N'U'))
		BEGIN
			EXECUTE sp_rename N'{databaseOwner}[EasyDNNRotatorNewsSettings]', N'{objectQualifier}EasyDNNRotatorNewsSettings', 'OBJECT'
			EXECUTE sp_rename N'PK_{objectQualifier}EasyDNNRotatorNewsSettings', N'PK_{objectQualifier}EasyDNNRotatorNewsSettings', 'OBJECT'
			EXECUTE sp_rename N'FK_EasyDNNRotatorNewsSettings_EasyDNNRotatorModule', N'FK_{objectQualifier}EasyDNNRotatorNewsSettings_EasyDNNRotatorModule', 'OBJECT'
		END
	END
END
GO

if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNRotatorNewsSettings' and column_name = 'OnlyEvents')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsSettings] ADD OnlyEvents bit CONSTRAINT DF_{objectQualifier}EasyDNNRotatorNewsSettings_OnlyEvents DEFAULT(0) NOT NULL
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNRotatorNewsSettings' and column_name = 'ShowAllEvents')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsSettings] ADD ShowAllEvents bit CONSTRAINT DF_{objectQualifier}EasyDNNRotatorNewsSettings_ShowAllEvents DEFAULT(0) NOT NULL
END
GO
if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNRotatorNewsSettings' and column_name = 'LimitEventsByDay')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNRotatorNewsSettings] ADD LimitEventsByDay int CONSTRAINT DF_{objectQualifier}EasyDNNRotatorNewsSettings_LimitEventsByDay DEFAULT(0) NOT NULL
END
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNews]') AND type in (N'U'))
BEGIN
	IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNews' and column_name = 'HasPermissions')
	BEGIN
		ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNews] ADD HasPermissions bit NOT NULL DEFAULT(0)
	END
	if not exists (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNews' and column_name = 'EventArticle')
	BEGIN
		ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNews] ADD EventArticle bit NOT NULL DEFAULT(0)
	END

	SET ANSI_NULLS ON
	SET QUOTED_IDENTIFIER ON
	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions]') AND type in (N'U'))
	BEGIN
		CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions](
			[ArticleUserItemID] [int] IDENTITY(1,1) NOT NULL,
			[ArticleID] [int] NOT NULL,
			[UserID] [int] NULL,
			[Show] [bit] NOT NULL,
			[Edit] [bit] NOT NULL,
		 CONSTRAINT [PK_{objectQualifier}EasyDNNNewsArticleUserPermissions_1] PRIMARY KEY CLUSTERED ([ArticleUserItemID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF),
		 CONSTRAINT [IX_{objectQualifier}EasyDNNNewsArticleUserPermissions] UNIQUE NONCLUSTERED ([ArticleID] ASC,[UserID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
		)
	END
	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions]') AND type in (N'U'))
	BEGIN
		CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions](
			[ArticleID] [int] NOT NULL,
			[RoleID] [int] NOT NULL,
			[Show] [bit] NOT NULL,
			[Edit] [bit] NOT NULL,
			CONSTRAINT [PK_{objectQualifier}EasyDNNNewsArticleRolePermissions] PRIMARY KEY CLUSTERED ([ArticleID] ASC,[RoleID] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
		)
	END

	IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsArticleRolePermissions_EasyDNNNewsArticleRolePermissions]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions]'))
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsArticleRolePermissions_EasyDNNNewsArticleRolePermissions] FOREIGN KEY([ArticleID])
	REFERENCES {databaseOwner}[{objectQualifier}EasyDNNNews] ([ArticleID]) ON DELETE CASCADE

	IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsArticleRolePermissions_EasyDNNNewsArticleRolePermissions]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions]'))
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsArticleRolePermissions_EasyDNNNewsArticleRolePermissions]

	IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsArticleRolePermissions_Roles]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions]'))
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsArticleRolePermissions_Roles] FOREIGN KEY([RoleID])
	REFERENCES {databaseOwner}[{objectQualifier}Roles] ([RoleID]) ON DELETE CASCADE

	IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsArticleRolePermissions_Roles]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions]'))
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsArticleRolePermissions_Roles]

	IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsArticleUserPermissions_EasyDNNNews]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions]'))
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsArticleUserPermissions_EasyDNNNews] FOREIGN KEY([ArticleID])
	REFERENCES {databaseOwner}[{objectQualifier}EasyDNNNews] ([ArticleID]) ON DELETE CASCADE

	IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsArticleUserPermissions_EasyDNNNews]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions]'))
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsArticleUserPermissions_EasyDNNNews]
	IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsArticleUserPermissions_Users]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions]'))
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsArticleUserPermissions_Users] FOREIGN KEY([UserID])
	REFERENCES {databaseOwner}[{objectQualifier}Users] ([UserID]) ON DELETE CASCADE

	IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsArticleUserPermissions_Users]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions]'))
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsArticleUserPermissions_Users]

	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsEventsData]') AND type in (N'U'))
	BEGIN
		CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData](
			[ArticleID] [int] NOT NULL,
			[StartDate] [datetime] NOT NULL,
			[EndDate] [datetime] NOT NULL,
			[WhloeDay] [bit] NOT NULL,
			CONSTRAINT [PK_{objectQualifier}easynewsEvent] PRIMARY KEY CLUSTERED ([ArticleID] ASC) WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF)
		)
	END
	IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}easynewsEvent_EasyDNNNews]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsEventsData]'))
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}easynewsEvent_EasyDNNNews] FOREIGN KEY([ArticleID])
	REFERENCES {databaseOwner}[{objectQualifier}EasyDNNNews] ([ArticleID]) ON DELETE CASCADE
	
	IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}easynewsEvent_EasyDNNNews]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsEventsData]'))
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] CHECK CONSTRAINT [FK_{objectQualifier}easynewsEvent_EasyDNNNews]
END
GO